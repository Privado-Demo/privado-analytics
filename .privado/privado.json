{
  "privadoCoreVersion" : "1.1.3",
  "privadoCLIVersion" : "v2.1.1",
  "privadoMainVersion" : "1.2.0\n",
  "createdAt" : 1669445474929,
  "repoName" : "privado-analytics",
  "gitMetadata" : {
    "branchName" : "master",
    "commitId" : "412496f8500e17f5d1b5ea00952ade970a0ff033",
    "remoteUrl" : "https://github.com/karan-batavia/privado-analytics.git"
  },
  "localScanPath" : "/home/midas/Privado/privado-analytics",
  "sources" : [
    {
      "sourceType" : "Data Element",
      "id" : "Data.Sensitive.AccountData.LanguagePreferences",
      "name" : "Language Preferences",
      "category" : "Account Data",
      "sensitivity" : "low",
      "isSensitive" : false,
      "tags" : {
        "law" : "GDPR"
      }
    },
    {
      "sourceType" : "Data Element",
      "id" : "Data.Sensitive.PersonalIdentification.FirstName",
      "name" : "First Name",
      "category" : "Personal Identification",
      "sensitivity" : "low",
      "isSensitive" : false,
      "tags" : {
        "law" : "GDPR"
      }
    },
    {
      "sourceType" : "Data Element",
      "id" : "Data.Sensitive.AccountData.AccountPassword",
      "name" : "Account Password",
      "category" : "Account Data",
      "sensitivity" : "high",
      "isSensitive" : false,
      "tags" : {
        "law" : "GDPR"
      }
    },
    {
      "sourceType" : "Data Element",
      "id" : "Data.Sensitive.PersonalIdentification.DateofBirth",
      "name" : "Date of Birth",
      "category" : "Personal Identification",
      "sensitivity" : "low",
      "isSensitive" : false,
      "tags" : {
        "law" : "GDPR"
      }
    },
    {
      "sourceType" : "Data Element",
      "id" : "Data.Sensitive.PersonalIdentification.LastName",
      "name" : "Last Name",
      "category" : "Personal Identification",
      "sensitivity" : "low",
      "isSensitive" : false,
      "tags" : {
        "law" : "GDPR"
      }
    },
    {
      "sourceType" : "Data Element",
      "id" : "Data.Sensitive.ContactData.EmailAddress",
      "name" : "Email Address",
      "category" : "Contact Data",
      "sensitivity" : "medium",
      "isSensitive" : false,
      "tags" : {
        "law" : "GDPR"
      }
    },
    {
      "sourceType" : "Data Element",
      "id" : "Data.Sensitive.PurchaseData.OrderDetails",
      "name" : "Order Details",
      "category" : "Purchase Data",
      "sensitivity" : "medium",
      "isSensitive" : false,
      "tags" : {
        "law" : "GDPR"
      }
    },
    {
      "sourceType" : "Data Element",
      "id" : "Data.Sensitive.AccountData.AccountName",
      "name" : "Account Name",
      "category" : "Account Data",
      "sensitivity" : "medium",
      "isSensitive" : false,
      "tags" : {
        "law" : "GDPR"
      }
    }
  ],
  "processing" : [
    {
      "sourceId" : "Data.Sensitive.AccountData.AccountPassword",
      "occurrences" : [
        {
          "sample" : "this",
          "lineNumber" : 54,
          "columnNumber" : 77,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
          "excerpt" : "\tprivate BuyerService buyerService;\n\n\t@Autowired\n\tprivate JiraServiceImpl jiraService;\n\n\tprivate JiraClient jiraClient = new JiraClient(jiraAaccessKey, jiraSecret, jiraUrl); /* <=== */ \n\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\t@Override\n\tpublic List<Order> getOrders() {"
        },
        {
          "sample" : "this.password",
          "lineNumber" : 84,
          "columnNumber" : 16,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Account.java",
          "excerpt" : ""
        }
      ]
    },
    {
      "sourceId" : "Data.Sensitive.AccountData.AccountName",
      "occurrences" : [
        {
          "sample" : "this",
          "lineNumber" : 54,
          "columnNumber" : 77,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
          "excerpt" : "\tprivate BuyerService buyerService;\n\n\t@Autowired\n\tprivate JiraServiceImpl jiraService;\n\n\tprivate JiraClient jiraClient = new JiraClient(jiraAaccessKey, jiraSecret, jiraUrl); /* <=== */ \n\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\t@Override\n\tpublic List<Order> getOrders() {"
        },
        {
          "sample" : "userName",
          "lineNumber" : 59,
          "columnNumber" : 25,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Account.java",
          "excerpt" : "\n    @Getter\n    @Setter\n    @Column\n    private String language = \"en\";\n /* <=== */ \n    @Getter\n    @Setter\n    @Column\n    private String name;\n"
        }
      ]
    },
    {
      "sourceId" : "Data.Sensitive.PersonalIdentification.FirstName",
      "occurrences" : [
        {
          "sample" : "this",
          "lineNumber" : 90,
          "columnNumber" : 9,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Account.java",
          "excerpt" : ""
        },
        {
          "sample" : "firstName",
          "lineNumber" : 80,
          "columnNumber" : 11,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
          "excerpt" : "\n\t\t\tproductService.saveProduct(product);\n\n\n\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName(); /* <=== */ \n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);\n"
        },
        {
          "sample" : "Buyer",
          "lineNumber" : 24,
          "columnNumber" : 36,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
          "excerpt" : "        dynamoDBMapper.save(buyer);\n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId); /* <=== */ \n    }\n\n    public String deleteBuyerById(String buyerId) {\n        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";"
        }
      ]
    },
    {
      "sourceId" : "Data.Sensitive.ContactData.EmailAddress",
      "occurrences" : [
        {
          "sample" : "this",
          "lineNumber" : 170,
          "columnNumber" : 9,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Product.java",
          "excerpt" : ""
        },
        {
          "sample" : "product",
          "lineNumber" : 20,
          "columnNumber" : 29,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
          "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Product saveProduct(Product product) {\n        dynamoDBMapper.save(product); /* <=== */ \n        return product;\n    }\n\n    public Product getProductById(String productId) {\n        return dynamoDBMapper.load(Product.class, productId);"
        },
        {
          "sample" : "buyerEmail",
          "lineNumber" : 94,
          "columnNumber" : 21,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
          "excerpt" : "\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\tlogger.error(\"Exception while creating order: \" +\n\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" + /* <=== */ \n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();"
        },
        {
          "sample" : "email",
          "lineNumber" : 51,
          "columnNumber" : 10,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
          "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
        },
        {
          "sample" : "buyer",
          "lineNumber" : 72,
          "columnNumber" : 22,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Order.java",
          "excerpt" : "    public Buyer getBuyer() {\n        return buyer;\n    }\n\n    public void setBuyer(Buyer buyer) {\n        this.buyer = buyer; /* <=== */ \n    }\n\n    @Override\n    public String toString() {\n        return \"Order{\" +"
        },
        {
          "sample" : "this.email",
          "lineNumber" : 52,
          "columnNumber" : 31,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/User.java",
          "excerpt" : "    @Override\n    public String toString() {\n        return \"User{\" +\n                \"firstName='\" + firstName + '\\'' +\n                \", lastName='\" + lastName + '\\'' +\n                \", email='\" + email + '\\'' + /* <=== */ \n                \", dateOfBirth='\" + dateOfBirth + '\\'' +\n                '}';\n    }\n}"
        },
        {
          "sample" : "Buyer",
          "lineNumber" : 24,
          "columnNumber" : 36,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
          "excerpt" : "        dynamoDBMapper.save(buyer);\n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId); /* <=== */ \n    }\n\n    public String deleteBuyerById(String buyerId) {\n        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";"
        }
      ]
    },
    {
      "sourceId" : "Data.Sensitive.PersonalIdentification.LastName",
      "occurrences" : [
        {
          "sample" : "buyer",
          "lineNumber" : 30,
          "columnNumber" : 15,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
          "excerpt" : "    public String updateProduct(String buyerId, Buyer buyer) {\n        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n\n    public String updateProductBuyerEmail(String buyerId, String email) {\n        Buyer buyer = buyerRepository.getBuyerById(buyerId); /* <=== */ \n        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n}"
        },
        {
          "sample" : "this",
          "lineNumber" : 10,
          "columnNumber" : 9,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Buyer.java",
          "excerpt" : "\n    public Buyer(String firstName, String lastName, String dateOfBirth) {\n        super();\n        this.setFirstName(firstName);\n        this.setLastName(lastName);\n        this.setDateOfBirth(dateOfBirth); /* <=== */ \n    }\n}"
        },
        {
          "sample" : "this.lastName",
          "lineNumber" : 28,
          "columnNumber" : 9,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/User.java",
          "excerpt" : "    public String getLastName() {\n        return lastName;\n    }\n\n    public void setLastName(String lastName) {\n        this.lastName = lastName; /* <=== */ \n    }\n\n    public String getEmail() {\n        return email;\n    }"
        },
        {
          "sample" : "newBuyer",
          "lineNumber" : 84,
          "columnNumber" : 10,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
          "excerpt" : "\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth); /* <=== */ \n\n\n\t\t\tbuyerService.saveProduct(newBuyer);\n\n\t\t}"
        },
        {
          "sample" : "lastName",
          "lineNumber" : 53,
          "columnNumber" : 10,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
          "excerpt" : "\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName(); /* <=== */ \n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);\n\n\t\treturn new ResponseEntity<Order>(item, HttpStatus.OK);"
        }
      ]
    },
    {
      "sourceId" : "Data.Sensitive.AccountData.LanguagePreferences",
      "occurrences" : [
        {
          "sample" : "this",
          "lineNumber" : 90,
          "columnNumber" : 9,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Account.java",
          "excerpt" : ""
        }
      ]
    },
    {
      "sourceId" : "Data.Sensitive.PurchaseData.OrderDetails",
      "occurrences" : [
        {
          "sample" : "this",
          "lineNumber" : 170,
          "columnNumber" : 9,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Product.java",
          "excerpt" : ""
        },
        {
          "sample" : "product",
          "lineNumber" : 20,
          "columnNumber" : 29,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
          "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Product saveProduct(Product product) {\n        dynamoDBMapper.save(product); /* <=== */ \n        return product;\n    }\n\n    public Product getProductById(String productId) {\n        return dynamoDBMapper.load(Product.class, productId);"
        },
        {
          "sample" : "orderId",
          "lineNumber" : 78,
          "columnNumber" : 26,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/OrderDAO.java",
          "excerpt" : "\t * This method is responsible for deleting a particular(which id will be passed that record) \n\t * record from the database\n\t */\n\t@Override\n\tpublic boolean deleteOrder(int orderId) {\n\t\tOrder order = getOrder(orderId); /* <=== */ \n\t\tentityManager.remove(order);\n\t\t\n\t\t//we are checking here that whether entityManager contains earlier deleted Order or not\n\t\t// if contains then Order is not deleted from DB that's why returning false;\n\t\tboolean status = entityManager.contains(order);"
        },
        {
          "sample" : "productResult",
          "lineNumber" : 98,
          "columnNumber" : 7,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
          "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) { /* <=== */ \n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n\n\t\treturn Boolean.FALSE;"
        }
      ]
    },
    {
      "sourceId" : "Data.Sensitive.PersonalIdentification.DateofBirth",
      "occurrences" : [
        {
          "sample" : "buyer",
          "lineNumber" : 30,
          "columnNumber" : 15,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
          "excerpt" : "    public String updateProduct(String buyerId, Buyer buyer) {\n        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n\n    public String updateProductBuyerEmail(String buyerId, String email) {\n        Buyer buyer = buyerRepository.getBuyerById(buyerId); /* <=== */ \n        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n}"
        },
        {
          "sample" : "this",
          "lineNumber" : 10,
          "columnNumber" : 9,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Buyer.java",
          "excerpt" : "\n    public Buyer(String firstName, String lastName, String dateOfBirth) {\n        super();\n        this.setFirstName(firstName);\n        this.setLastName(lastName);\n        this.setDateOfBirth(dateOfBirth); /* <=== */ \n    }\n}"
        },
        {
          "sample" : "dateOfBirth",
          "lineNumber" : 44,
          "columnNumber" : 28,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/User.java",
          "excerpt" : "    public String getDateOfBirth() {\n        return dateOfBirth;\n    }\n\n    public void setDateOfBirth(String dateOfBirth) {\n        this.dateOfBirth = dateOfBirth; /* <=== */ \n    }\n\n    @Override\n    public String toString() {\n        return \"User{\" +"
        },
        {
          "sample" : "newBuyer",
          "lineNumber" : 84,
          "columnNumber" : 10,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
          "excerpt" : "\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth); /* <=== */ \n\n\n\t\t\tbuyerService.saveProduct(newBuyer);\n\n\t\t}"
        },
        {
          "sample" : "Buyer",
          "lineNumber" : 28,
          "columnNumber" : 51,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
          "excerpt" : "    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId);\n    }\n\n    public String deleteBuyerById(String buyerId) {\n        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId)); /* <=== */ \n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer,"
        }
      ]
    }
  ],
  "sinks" : [
    {
      "sourceType" : "Sinks",
      "sinkType" : "third_parties",
      "id" : "ThirdParties.SDK.Amazonaws",
      "name" : "Amazonaws",
      "domains" : [
        "amazonaws.com"
      ],
      "apiUrl" : [
      ],
      "databaseDetails" : {
        "dbName" : "",
        "dbVendor" : "",
        "dbLocation" : "",
        "dbOperation" : ""
      }
    },
    {
      "sourceType" : "Sinks",
      "sinkType" : "third_parties",
      "id" : "ThirdParties.SDK.Amazon.Aws",
      "name" : "Amazon Aws",
      "domains" : [
        "aws.amazon.com"
      ],
      "apiUrl" : [
      ],
      "databaseDetails" : {
        "dbName" : "",
        "dbVendor" : "",
        "dbLocation" : "",
        "dbOperation" : ""
      }
    },
    {
      "sourceType" : "Sinks",
      "sinkType" : "third_parties",
      "id" : "ThirdParties.SDK.Atlassian",
      "name" : "Atlassian",
      "domains" : [
        "atlassian.com"
      ],
      "apiUrl" : [
      ],
      "databaseDetails" : {
        "dbName" : "",
        "dbVendor" : "",
        "dbLocation" : "",
        "dbOperation" : ""
      }
    },
    {
      "sourceType" : "Sinks",
      "sinkType" : "storages",
      "id" : "Storages.AmazonDynamoDB.Write",
      "name" : "Amazon Dynamo DB(Write)",
      "domains" : [
        "aws.amazon.com",
        "amazon.com"
      ],
      "apiUrl" : [
      ],
      "databaseDetails" : {
        "dbName" : "",
        "dbVendor" : "",
        "dbLocation" : "",
        "dbOperation" : ""
      }
    },
    {
      "sourceType" : "Sinks",
      "sinkType" : "storages",
      "id" : "Storages.AmazonDynamoDB.Read",
      "name" : "Amazon Dynamo DB(Read)",
      "domains" : [
        "aws.amazon.com",
        "amazon.com"
      ],
      "apiUrl" : [
      ],
      "databaseDetails" : {
        "dbName" : "",
        "dbVendor" : "",
        "dbLocation" : "",
        "dbOperation" : ""
      }
    }
  ],
  "sinkProcessing" : [
    {
      "sinkId" : "Storages.AmazonDynamoDB.Read",
      "occurrences" : [
        {
          "sample" : "dynamoDBMapper.load(Product.class, productId)",
          "lineNumber" : 29,
          "columnNumber" : 31,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
          "excerpt" : "    public Product getProductById(String productId) {\n        return dynamoDBMapper.load(Product.class, productId);\n    }\n\n    public String deleteProductById(String productId) {\n        dynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId)); /* <=== */ \n        return \"Product Id : \"+ productId +\" Deleted!\";\n    }\n\n    public String updateProduct(String productId, Product product) {\n        dynamoDBMapper.save(product,"
        },
        {
          "sample" : "dynamoDBMapper.load(Buyer.class, buyerId)",
          "lineNumber" : 24,
          "columnNumber" : 16,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
          "excerpt" : "        dynamoDBMapper.save(buyer);\n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId); /* <=== */ \n    }\n\n    public String deleteBuyerById(String buyerId) {\n        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";"
        }
      ]
    },
    {
      "sinkId" : "ThirdParties.SDK.Atlassian",
      "occurrences" : [
        {
          "sample" : "issueClient.createIssue(newIssue)",
          "lineNumber" : 151,
          "columnNumber" : 10,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
          "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
        },
        {
          "sample" : "this.getIssue(issueKey).getComments()",
          "lineNumber" : 51,
          "columnNumber" : 37,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/JiraService.java",
          "excerpt" : "        jiraClient.getRestClient().getIssueClient()\n                .addComment(issue.getCommentsUri(), Comment.valueOf(commentBody));\n    }\n\n    public List<Comment> getAllComments(String issueKey) {\n        return StreamSupport.stream(getIssue(issueKey).getComments().spliterator(), false) /* <=== */ \n                .collect(Collectors.toList());\n    }\n\n}"
        },
        {
          "sample" : "new AsynchronousJiraRestClientFactory().createWithBasicHttpAuthentication(getJiraUri(), this.jiraAaccessKey, this.jiraSecret)",
          "lineNumber" : 24,
          "columnNumber" : 16,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/client/JiraClient.java",
          "excerpt" : "        this.jiraUrl = jiraUrl;\n        this.restClient = getJiraRestClient();\n    }\n\n    private JiraRestClient getJiraRestClient() {\n        return new AsynchronousJiraRestClientFactory() /* <=== */ \n                .createWithBasicHttpAuthentication(getJiraUri(), this.jiraAaccessKey, this.jiraSecret);\n    }\n\n    private URI getJiraUri() {\n        return URI.create(this.jiraUrl);"
        }
      ]
    },
    {
      "sinkId" : "ThirdParties.SDK.Amazon.Aws",
      "occurrences" : [
        {
          "sample" : "dynamoDBMapper.save(product)",
          "lineNumber" : 107,
          "columnNumber" : 3,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
          "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
        },
        {
          "sample" : "new DynamoDBSaveExpression().withExpectedEntry(\"buyerId\", new ExpectedAttributeValue(new AttributeValue().withS(buyerId)))",
          "lineNumber" : 34,
          "columnNumber" : 17,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
          "excerpt" : "        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer,\n                new DynamoDBSaveExpression() /* <=== */ \n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));\n        return buyerId;"
        },
        {
          "sample" : "AmazonDynamoDBClientBuilder.standard().withEndpointConfiguration(new AwsClientBuilder.EndpointConfiguration(dynamodbEndpoint, awsRegion)).withCredentials(new AWSStaticCredentialsProvider(new BasicAWSCredentials(dynamodbAccessKey, dynamodbSecretKey))).build()",
          "lineNumber" : 35,
          "columnNumber" : 16,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/DynamoDBConfiguration.java",
          "excerpt" : "    public DynamoDBMapper dynamoDBMapper() {\n        return new DynamoDBMapper(buildAmazonDynamoDB());\n    }\n\n    private AmazonDynamoDB buildAmazonDynamoDB() {\n        return AmazonDynamoDBClientBuilder /* <=== */ \n                .standard()\n                .withEndpointConfiguration(\n                        new AwsClientBuilder.EndpointConfiguration(dynamodbEndpoint,awsRegion))\n                .withCredentials(new AWSStaticCredentialsProvider(\n                        new BasicAWSCredentials(dynamodbAccessKey,dynamodbSecretKey)))"
        },
        {
          "sample" : "dynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId))",
          "lineNumber" : 29,
          "columnNumber" : 9,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
          "excerpt" : "    public Product getProductById(String productId) {\n        return dynamoDBMapper.load(Product.class, productId);\n    }\n\n    public String deleteProductById(String productId) {\n        dynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId)); /* <=== */ \n        return \"Product Id : \"+ productId +\" Deleted!\";\n    }\n\n    public String updateProduct(String productId, Product product) {\n        dynamoDBMapper.save(product,"
        }
      ]
    },
    {
      "sinkId" : "Storages.AmazonDynamoDB.Write",
      "occurrences" : [
        {
          "sample" : "dynamoDBMapper.save(buyer, new DynamoDBSaveExpression().withExpectedEntry(\"buyerId\", new ExpectedAttributeValue(new AttributeValue().withS(buyerId))))",
          "lineNumber" : 33,
          "columnNumber" : 9,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
          "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));"
        },
        {
          "sample" : "dynamoDBMapper.save(product)",
          "lineNumber" : 107,
          "columnNumber" : 3,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
          "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
        },
        {
          "sample" : "dynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId))",
          "lineNumber" : 29,
          "columnNumber" : 9,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
          "excerpt" : "    public Product getProductById(String productId) {\n        return dynamoDBMapper.load(Product.class, productId);\n    }\n\n    public String deleteProductById(String productId) {\n        dynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId)); /* <=== */ \n        return \"Product Id : \"+ productId +\" Deleted!\";\n    }\n\n    public String updateProduct(String productId, Product product) {\n        dynamoDBMapper.save(product,"
        }
      ]
    },
    {
      "sinkId" : "ThirdParties.SDK.Amazonaws",
      "occurrences" : [
        {
          "sample" : "dynamoDBMapper.save(product)",
          "lineNumber" : 107,
          "columnNumber" : 3,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
          "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
        },
        {
          "sample" : "new DynamoDBSaveExpression().withExpectedEntry(\"buyerId\", new ExpectedAttributeValue(new AttributeValue().withS(buyerId)))",
          "lineNumber" : 34,
          "columnNumber" : 17,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
          "excerpt" : "        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer,\n                new DynamoDBSaveExpression() /* <=== */ \n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));\n        return buyerId;"
        },
        {
          "sample" : "AmazonDynamoDBClientBuilder.standard().withEndpointConfiguration(new AwsClientBuilder.EndpointConfiguration(dynamodbEndpoint, awsRegion)).withCredentials(new AWSStaticCredentialsProvider(new BasicAWSCredentials(dynamodbAccessKey, dynamodbSecretKey))).build()",
          "lineNumber" : 35,
          "columnNumber" : 16,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/DynamoDBConfiguration.java",
          "excerpt" : "    public DynamoDBMapper dynamoDBMapper() {\n        return new DynamoDBMapper(buildAmazonDynamoDB());\n    }\n\n    private AmazonDynamoDB buildAmazonDynamoDB() {\n        return AmazonDynamoDBClientBuilder /* <=== */ \n                .standard()\n                .withEndpointConfiguration(\n                        new AwsClientBuilder.EndpointConfiguration(dynamodbEndpoint,awsRegion))\n                .withCredentials(new AWSStaticCredentialsProvider(\n                        new BasicAWSCredentials(dynamodbAccessKey,dynamodbSecretKey)))"
        },
        {
          "sample" : "dynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId))",
          "lineNumber" : 29,
          "columnNumber" : 9,
          "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
          "excerpt" : "    public Product getProductById(String productId) {\n        return dynamoDBMapper.load(Product.class, productId);\n    }\n\n    public String deleteProductById(String productId) {\n        dynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId)); /* <=== */ \n        return \"Product Id : \"+ productId +\" Deleted!\";\n    }\n\n    public String updateProduct(String productId, Product product) {\n        dynamoDBMapper.save(product,"
        }
      ]
    }
  ],
  "probableSinks" : [
    "com.analytics.analytics",
    "com.atlassian.util"
  ],
  "dataFlow" : {
    "storages" : [
      {
        "sourceId" : "Data.Sensitive.AccountData.AccountName",
        "sinks" : [
          {
            "sinkType" : "storages",
            "id" : "Storages.AmazonDynamoDB.Write",
            "name" : "Amazon Dynamo DB(Write)",
            "category" : "",
            "domains" : [
              "aws.amazon.com",
              "amazon.com"
            ],
            "sensitivity" : "",
            "isSensitive" : false,
            "tags" : {
              
            },
            "apiUrl" : [
            ],
            "databaseDetails" : {
              "dbName" : "",
              "dbVendor" : "",
              "dbLocation" : "",
              "dbOperation" : ""
            },
            "paths" : [
              {
                "pathId" : "4161-4304-4679-4684-1704-1708-1707",
                "path" : [
                  {
                    "sample" : "this",
                    "lineNumber" : 66,
                    "columnNumber" : 26,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t}\n\n\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email;\n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId()); /* <=== */ \n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);"
                  },
                  {
                    "sample" : "this.productService",
                    "lineNumber" : 76,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product); /* <=== */ \n\n\n\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 17,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "\n    Logger logger = LoggerFactory.getLogger(ProductService.class);\n    @Autowired\n    private ProductRepository productRepository;\n\n    public Product saveProduct(Product product) { /* <=== */ \n            return productRepository.saveProduct(product);\n    }\n\n    public Product getProductById(String productId) {\n        return productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this.productRepository",
                    "lineNumber" : 18,
                    "columnNumber" : 20,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "    Logger logger = LoggerFactory.getLogger(ProductService.class);\n    @Autowired\n    private ProductRepository productRepository;\n\n    public Product saveProduct(Product product) {\n            return productRepository.saveProduct(product); /* <=== */ \n    }\n\n    public Product getProductById(String productId) {\n        return productRepository.getProductById(productId);\n    }"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 19,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "\n\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Product saveProduct(Product product) { /* <=== */ \n        dynamoDBMapper.save(product);\n        return product;\n    }\n\n    public Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 20,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Product saveProduct(Product product) {\n        dynamoDBMapper.save(product); /* <=== */ \n        return product;\n    }\n\n    public Product getProductById(String productId) {\n        return dynamoDBMapper.load(Product.class, productId);"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(product)",
                    "lineNumber" : 20,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Product saveProduct(Product product) {\n        dynamoDBMapper.save(product); /* <=== */ \n        return product;\n    }\n\n    public Product getProductById(String productId) {\n        return dynamoDBMapper.load(Product.class, productId);"
                  }
                ]
              },
              {
                "pathId" : "4161-4338-3819-3824-1176-1180-1179",
                "path" : [
                  {
                    "sample" : "this",
                    "lineNumber" : 66,
                    "columnNumber" : 26,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t}\n\n\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email;\n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId()); /* <=== */ \n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);"
                  },
                  {
                    "sample" : "this.buyerService",
                    "lineNumber" : 87,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);\n\n\n\t\t\tbuyerService.saveProduct(newBuyer); /* <=== */ \n\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\tlogger.error(\"Exception while creating order: \" +"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 17,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "\n    Logger logger = LoggerFactory.getLogger(BuyerService.class);\n    @Autowired\n    private BuyerRepository buyerRepository;\n\n    public Buyer saveProduct(Buyer buyer) { /* <=== */ \n            return buyerRepository.saveBuyer(buyer);\n    }\n\n    public Buyer getProductById(String buyerId) {\n        return buyerRepository.getBuyerById(buyerId);"
                  },
                  {
                    "sample" : "this.buyerRepository",
                    "lineNumber" : 18,
                    "columnNumber" : 20,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "    Logger logger = LoggerFactory.getLogger(BuyerService.class);\n    @Autowired\n    private BuyerRepository buyerRepository;\n\n    public Buyer saveProduct(Buyer buyer) {\n            return buyerRepository.saveBuyer(buyer); /* <=== */ \n    }\n\n    public Buyer getProductById(String buyerId) {\n        return buyerRepository.getBuyerById(buyerId);\n    }"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 18,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) { /* <=== */ \n        dynamoDBMapper.save(buyer);\n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 19,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) {\n        dynamoDBMapper.save(buyer); /* <=== */ \n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId);"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(buyer)",
                    "lineNumber" : 19,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) {\n        dynamoDBMapper.save(buyer); /* <=== */ \n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId);"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "sourceId" : "Data.Sensitive.PersonalIdentification.LastName",
        "sinks" : [
          {
            "sinkType" : "storages",
            "id" : "Storages.AmazonDynamoDB.Write",
            "name" : "Amazon Dynamo DB(Write)",
            "category" : "",
            "domains" : [
              "aws.amazon.com",
              "amazon.com"
            ],
            "sensitivity" : "",
            "isSensitive" : false,
            "tags" : {
              
            },
            "apiUrl" : [
            ],
            "databaseDetails" : {
              "dbName" : "",
              "dbVendor" : "",
              "dbLocation" : "",
              "dbOperation" : ""
            },
            "paths" : [
              {
                "pathId" : "497-504-509-508-507-536-673-685-701-758-770-777-888-903-925-932-924-923-922-918-909-908-905-904",
                "path" : [
                  {
                    "sample" : "buyer",
                    "lineNumber" : 49,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\t\n\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer(); /* <=== */ \n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 50,
                    "columnNumber" : 22,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\n\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName(); /* <=== */ \n\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 51,
                    "columnNumber" : 18,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "buyer.getEmail()",
                    "lineNumber" : 51,
                    "columnNumber" : 18,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 51,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 56,
                    "columnNumber" : 66,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName); /* <=== */ \n\n\t\treturn new ResponseEntity<Order>(item, HttpStatus.OK);\n\t\t\n\t}\n\t"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 91,
                    "columnNumber" : 47,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) { /* <=== */ \n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 93,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 99,
                    "columnNumber" : 43,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email); /* <=== */ \n\t\t\treturn Boolean.TRUE;\n\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 119,
                    "columnNumber" : 58,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) { /* <=== */ \n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 121,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n\n"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 122,
                    "columnNumber" : 64,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email); /* <=== */ \n\t}\n}\n\n\n@Repository"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 160,
                    "columnNumber" : 59,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) { /* <=== */ \n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\","
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 162,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 167,
                    "columnNumber" : 38,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "new AttributeValue().withS(productId)",
                    "lineNumber" : 167,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "$obj11",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "new ExpectedAttributeValue(new AttributeValue().withS(productId))",
                    "lineNumber" : 166,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue( /* <=== */ \n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}"
                  },
                  {
                    "sample" : "new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId)))",
                    "lineNumber" : 164,
                    "columnNumber" : 5,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression() /* <=== */ \n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 163,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 163,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(product, new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId))))",
                    "lineNumber" : 163,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  }
                ]
              },
              {
                "pathId" : "3866-3878-1233-1239-1236-1235",
                "path" : [
                  {
                    "sample" : "buyer",
                    "lineNumber" : 30,
                    "columnNumber" : 15,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "    public String updateProduct(String buyerId, Buyer buyer) {\n        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n\n    public String updateProductBuyerEmail(String buyerId, String email) {\n        Buyer buyer = buyerRepository.getBuyerById(buyerId); /* <=== */ \n        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n}"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 31,
                    "columnNumber" : 53,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n\n    public String updateProductBuyerEmail(String buyerId, String email) {\n        Buyer buyer = buyerRepository.getBuyerById(buyerId);\n        return buyerRepository.updateBuyer(buyerId, buyer); /* <=== */ \n    }\n}"
                  },
                  {
                    "sample" : "Buyer buyer",
                    "lineNumber" : 32,
                    "columnNumber" : 47,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "    public String deleteBuyerById(String buyerId) {\n        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) { /* <=== */ \n        dynamoDBMapper.save(buyer,\n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 33,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 33,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(buyer, new DynamoDBSaveExpression().withExpectedEntry(\"buyerId\", new ExpectedAttributeValue(new AttributeValue().withS(buyerId))))",
                    "lineNumber" : 33,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));"
                  }
                ]
              },
              {
                "pathId" : "4330-4333-4341-3820-3827-1177-1183-1180-1179",
                "path" : [
                  {
                    "sample" : "newBuyer",
                    "lineNumber" : 84,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth); /* <=== */ \n\n\n\t\t\tbuyerService.saveProduct(newBuyer);\n\n\t\t}"
                  },
                  {
                    "sample" : "newBuyer",
                    "lineNumber" : 84,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth); /* <=== */ \n\n\n\t\t\tbuyerService.saveProduct(newBuyer);\n\n\t\t}"
                  },
                  {
                    "sample" : "newBuyer",
                    "lineNumber" : 87,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);\n\n\n\t\t\tbuyerService.saveProduct(newBuyer); /* <=== */ \n\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\tlogger.error(\"Exception while creating order: \" +"
                  },
                  {
                    "sample" : "Buyer buyer",
                    "lineNumber" : 17,
                    "columnNumber" : 30,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "\n    Logger logger = LoggerFactory.getLogger(BuyerService.class);\n    @Autowired\n    private BuyerRepository buyerRepository;\n\n    public Buyer saveProduct(Buyer buyer) { /* <=== */ \n            return buyerRepository.saveBuyer(buyer);\n    }\n\n    public Buyer getProductById(String buyerId) {\n        return buyerRepository.getBuyerById(buyerId);"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 18,
                    "columnNumber" : 46,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "    Logger logger = LoggerFactory.getLogger(BuyerService.class);\n    @Autowired\n    private BuyerRepository buyerRepository;\n\n    public Buyer saveProduct(Buyer buyer) {\n            return buyerRepository.saveBuyer(buyer); /* <=== */ \n    }\n\n    public Buyer getProductById(String buyerId) {\n        return buyerRepository.getBuyerById(buyerId);\n    }"
                  },
                  {
                    "sample" : "Buyer buyer",
                    "lineNumber" : 18,
                    "columnNumber" : 28,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) { /* <=== */ \n        dynamoDBMapper.save(buyer);\n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 19,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) {\n        dynamoDBMapper.save(buyer); /* <=== */ \n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 19,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) {\n        dynamoDBMapper.save(buyer); /* <=== */ \n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId);"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(buyer)",
                    "lineNumber" : 19,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) {\n        dynamoDBMapper.save(buyer); /* <=== */ \n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId);"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "sourceId" : "Data.Sensitive.ContactData.EmailAddress",
        "sinks" : [
          {
            "sinkType" : "storages",
            "id" : "Storages.AmazonDynamoDB.Read",
            "name" : "Amazon Dynamo DB(Read)",
            "category" : "",
            "domains" : [
              "aws.amazon.com",
              "amazon.com"
            ],
            "sensitivity" : "",
            "isSensitive" : false,
            "tags" : {
              
            },
            "apiUrl" : [
            ],
            "databaseDetails" : {
              "dbName" : "",
              "dbVendor" : "",
              "dbLocation" : "",
              "dbOperation" : ""
            },
            "paths" : [
              {
                "pathId" : "679-682-684-687-693-715-721-718-5460-380-382-756-764-805-810-816-5474-767-776-887-900-897-894-893",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 93,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 94,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name); /* <=== */ \n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 97,
                    "columnNumber" : 44,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 106,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 107,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 107,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 106,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 97,
                    "columnNumber" : 27,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 99,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email); /* <=== */ \n\t\t\treturn Boolean.TRUE;\n\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 119,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) { /* <=== */ \n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}"
                  },
                  {
                    "sample" : "this.productRepository",
                    "lineNumber" : 120,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 139,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) { /* <=== */ \n\t\treturn dynamoDBMapper.load(Product.class, productId);\n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 140,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 140,
                    "columnNumber" : 45,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";"
                  },
                  {
                    "sample" : "String productId",
                    "lineNumber" : 139,
                    "columnNumber" : 32,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) { /* <=== */ \n\t\treturn dynamoDBMapper.load(Product.class, productId);\n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 120,
                    "columnNumber" : 54,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 122,
                    "columnNumber" : 53,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email); /* <=== */ \n\t}\n}\n\n\n@Repository"
                  },
                  {
                    "sample" : "String productId",
                    "lineNumber" : 160,
                    "columnNumber" : 41,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) { /* <=== */ \n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\","
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 161,
                    "columnNumber" : 56,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "Product.class",
                    "lineNumber" : 161,
                    "columnNumber" : 41,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 161,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "dynamoDBMapper.load(Product.class, productId)",
                    "lineNumber" : 161,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  }
                ]
              },
              {
                "pathId" : "679-682-684-687-693-715-721-718-5460-380-382-756-764-805-810-809",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 93,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 94,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name); /* <=== */ \n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 97,
                    "columnNumber" : 44,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 106,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 107,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 107,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 106,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 97,
                    "columnNumber" : 27,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 99,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email); /* <=== */ \n\t\t\treturn Boolean.TRUE;\n\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 119,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) { /* <=== */ \n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}"
                  },
                  {
                    "sample" : "this.productRepository",
                    "lineNumber" : 120,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 139,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) { /* <=== */ \n\t\treturn dynamoDBMapper.load(Product.class, productId);\n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 140,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";"
                  },
                  {
                    "sample" : "dynamoDBMapper.load(Product.class, productId)",
                    "lineNumber" : 140,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";"
                  }
                ]
              }
            ]
          },
          {
            "sinkType" : "storages",
            "id" : "Storages.AmazonDynamoDB.Write",
            "name" : "Amazon Dynamo DB(Write)",
            "category" : "",
            "domains" : [
              "aws.amazon.com",
              "amazon.com"
            ],
            "sensitivity" : "",
            "isSensitive" : false,
            "tags" : {
              
            },
            "apiUrl" : [
            ],
            "databaseDetails" : {
              "dbName" : "",
              "dbVendor" : "",
              "dbLocation" : "",
              "dbOperation" : ""
            },
            "paths" : [
              {
                "pathId" : "751-848-854-851-850",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 116,
                    "columnNumber" : 53,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);\n\t}\n\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product); /* <=== */ \n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 148,
                    "columnNumber" : 48,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";\n\t}\n\n\tpublic String updateProduct(String productId, Product product) { /* <=== */ \n\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 150,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn \"Product Id : \"+ productId +\" Deleted!\";\n\t}\n\n\tpublic String updateProduct(String productId, Product product) {\n\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 150,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn \"Product Id : \"+ productId +\" Deleted!\";\n\t}\n\n\tpublic String updateProduct(String productId, Product product) {\n\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(product, new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId))))",
                    "lineNumber" : 150,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn \"Product Id : \"+ productId +\" Deleted!\";\n\t}\n\n\tpublic String updateProduct(String productId, Product product) {\n\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  }
                ]
              },
              {
                "pathId" : "679-682-684-687-693-715-721-718-717",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 93,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 94,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name); /* <=== */ \n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 97,
                    "columnNumber" : 44,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 106,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 107,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 107,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(product)",
                    "lineNumber" : 107,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  }
                ]
              },
              {
                "pathId" : "4726-4733-4741-1761-1767-1764-1763",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 30,
                    "columnNumber" : 17,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "    public String updateProduct(String productId, Product product) {\n        return productRepository.updateProduct(productId, product);\n    }\n\n    public String updateProductBuyerEmail(String productId, String email) {\n        Product product = productRepository.getProductById(productId); /* <=== */ \n        product.setBuyerEmail(email);\n        return productRepository.updateProduct(productId, product);\n    }\n}"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 31,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "        return productRepository.updateProduct(productId, product);\n    }\n\n    public String updateProductBuyerEmail(String productId, String email) {\n        Product product = productRepository.getProductById(productId);\n        product.setBuyerEmail(email); /* <=== */ \n        return productRepository.updateProduct(productId, product);\n    }\n}"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 32,
                    "columnNumber" : 59,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "    }\n\n    public String updateProductBuyerEmail(String productId, String email) {\n        Product product = productRepository.getProductById(productId);\n        product.setBuyerEmail(email);\n        return productRepository.updateProduct(productId, product); /* <=== */ \n    }\n}"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 33,
                    "columnNumber" : 51,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "    public String deleteProductById(String productId) {\n        dynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n        return \"Product Id : \"+ productId +\" Deleted!\";\n    }\n\n    public String updateProduct(String productId, Product product) { /* <=== */ \n        dynamoDBMapper.save(product,\n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"productId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 34,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n        return \"Product Id : \"+ productId +\" Deleted!\";\n    }\n\n    public String updateProduct(String productId, Product product) {\n        dynamoDBMapper.save(product, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"productId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(productId)\n                                )));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 34,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n        return \"Product Id : \"+ productId +\" Deleted!\";\n    }\n\n    public String updateProduct(String productId, Product product) {\n        dynamoDBMapper.save(product, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"productId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(productId)\n                                )));"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(product, new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId))))",
                    "lineNumber" : 34,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n        return \"Product Id : \"+ productId +\" Deleted!\";\n    }\n\n    public String updateProduct(String productId, Product product) {\n        dynamoDBMapper.save(product, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"productId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(productId)\n                                )));"
                  }
                ]
              },
              {
                "pathId" : "798-795-794",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 135,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 135,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId);"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(product)",
                    "lineNumber" : 135,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId);"
                  }
                ]
              },
              {
                "pathId" : "4275-4278-4280-4298-4301-4307-4680-4687-1705-1711-1708-1707",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 68,
                    "columnNumber" : 12,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email;\n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product(); /* <=== */ \n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 68,
                    "columnNumber" : 12,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email;\n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product(); /* <=== */ \n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 69,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email;\n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId()); /* <=== */ \n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 73,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail); /* <=== */ \n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product);\n\n"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 74,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode); /* <=== */ \n\n\t\t\tproductService.saveProduct(product);\n\n\n\t\t\tBuyer buyer = order.getBuyer();"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 76,
                    "columnNumber" : 31,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product); /* <=== */ \n\n\n\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 17,
                    "columnNumber" : 32,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "\n    Logger logger = LoggerFactory.getLogger(ProductService.class);\n    @Autowired\n    private ProductRepository productRepository;\n\n    public Product saveProduct(Product product) { /* <=== */ \n            return productRepository.saveProduct(product);\n    }\n\n    public Product getProductById(String productId) {\n        return productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 18,
                    "columnNumber" : 50,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "    Logger logger = LoggerFactory.getLogger(ProductService.class);\n    @Autowired\n    private ProductRepository productRepository;\n\n    public Product saveProduct(Product product) {\n            return productRepository.saveProduct(product); /* <=== */ \n    }\n\n    public Product getProductById(String productId) {\n        return productRepository.getProductById(productId);\n    }"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 19,
                    "columnNumber" : 32,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "\n\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Product saveProduct(Product product) { /* <=== */ \n        dynamoDBMapper.save(product);\n        return product;\n    }\n\n    public Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 20,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Product saveProduct(Product product) {\n        dynamoDBMapper.save(product); /* <=== */ \n        return product;\n    }\n\n    public Product getProductById(String productId) {\n        return dynamoDBMapper.load(Product.class, productId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 20,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Product saveProduct(Product product) {\n        dynamoDBMapper.save(product); /* <=== */ \n        return product;\n    }\n\n    public Product getProductById(String productId) {\n        return dynamoDBMapper.load(Product.class, productId);"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(product)",
                    "lineNumber" : 20,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Product saveProduct(Product product) {\n        dynamoDBMapper.save(product); /* <=== */ \n        return product;\n    }\n\n    public Product getProductById(String productId) {\n        return dynamoDBMapper.load(Product.class, productId);"
                  }
                ]
              },
              {
                "pathId" : "679-682-684-687-693-715-721-718-5460-380-382-756-764-805-810-816-5474-767-776-887-900-897-894-893-892-902-925-932-924-923-922-918-909-908-905-904",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 93,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 94,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name); /* <=== */ \n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 97,
                    "columnNumber" : 44,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 106,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 107,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 107,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 106,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 97,
                    "columnNumber" : 27,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 99,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email); /* <=== */ \n\t\t\treturn Boolean.TRUE;\n\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 119,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) { /* <=== */ \n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}"
                  },
                  {
                    "sample" : "this.productRepository",
                    "lineNumber" : 120,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 139,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) { /* <=== */ \n\t\treturn dynamoDBMapper.load(Product.class, productId);\n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 140,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 140,
                    "columnNumber" : 45,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";"
                  },
                  {
                    "sample" : "String productId",
                    "lineNumber" : 139,
                    "columnNumber" : 32,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) { /* <=== */ \n\t\treturn dynamoDBMapper.load(Product.class, productId);\n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 120,
                    "columnNumber" : 54,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 122,
                    "columnNumber" : 53,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email); /* <=== */ \n\t}\n}\n\n\n@Repository"
                  },
                  {
                    "sample" : "String productId",
                    "lineNumber" : 160,
                    "columnNumber" : 41,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) { /* <=== */ \n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\","
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 161,
                    "columnNumber" : 56,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "Product.class",
                    "lineNumber" : 161,
                    "columnNumber" : 41,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 161,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "dynamoDBMapper.load(Product.class, productId)",
                    "lineNumber" : 161,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 161,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 162,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 167,
                    "columnNumber" : 38,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "new AttributeValue().withS(productId)",
                    "lineNumber" : 167,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "$obj11",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "new ExpectedAttributeValue(new AttributeValue().withS(productId))",
                    "lineNumber" : 166,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue( /* <=== */ \n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}"
                  },
                  {
                    "sample" : "new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId)))",
                    "lineNumber" : 164,
                    "columnNumber" : 5,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression() /* <=== */ \n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 163,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 163,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(product, new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId))))",
                    "lineNumber" : 163,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  }
                ]
              },
              {
                "pathId" : "3866-3878-1233-1239-1236-1235",
                "path" : [
                  {
                    "sample" : "buyer",
                    "lineNumber" : 30,
                    "columnNumber" : 15,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "    public String updateProduct(String buyerId, Buyer buyer) {\n        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n\n    public String updateProductBuyerEmail(String buyerId, String email) {\n        Buyer buyer = buyerRepository.getBuyerById(buyerId); /* <=== */ \n        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n}"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 31,
                    "columnNumber" : 53,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n\n    public String updateProductBuyerEmail(String buyerId, String email) {\n        Buyer buyer = buyerRepository.getBuyerById(buyerId);\n        return buyerRepository.updateBuyer(buyerId, buyer); /* <=== */ \n    }\n}"
                  },
                  {
                    "sample" : "Buyer buyer",
                    "lineNumber" : 32,
                    "columnNumber" : 47,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "    public String deleteBuyerById(String buyerId) {\n        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) { /* <=== */ \n        dynamoDBMapper.save(buyer,\n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 33,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 33,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(buyer, new DynamoDBSaveExpression().withExpectedEntry(\"buyerId\", new ExpectedAttributeValue(new AttributeValue().withS(buyerId))))",
                    "lineNumber" : 33,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));"
                  }
                ]
              },
              {
                "pathId" : "4330-4333-4341-3820-3827-1177-1183-1180-1179",
                "path" : [
                  {
                    "sample" : "newBuyer",
                    "lineNumber" : 84,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth); /* <=== */ \n\n\n\t\t\tbuyerService.saveProduct(newBuyer);\n\n\t\t}"
                  },
                  {
                    "sample" : "newBuyer",
                    "lineNumber" : 84,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth); /* <=== */ \n\n\n\t\t\tbuyerService.saveProduct(newBuyer);\n\n\t\t}"
                  },
                  {
                    "sample" : "newBuyer",
                    "lineNumber" : 87,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);\n\n\n\t\t\tbuyerService.saveProduct(newBuyer); /* <=== */ \n\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\tlogger.error(\"Exception while creating order: \" +"
                  },
                  {
                    "sample" : "Buyer buyer",
                    "lineNumber" : 17,
                    "columnNumber" : 30,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "\n    Logger logger = LoggerFactory.getLogger(BuyerService.class);\n    @Autowired\n    private BuyerRepository buyerRepository;\n\n    public Buyer saveProduct(Buyer buyer) { /* <=== */ \n            return buyerRepository.saveBuyer(buyer);\n    }\n\n    public Buyer getProductById(String buyerId) {\n        return buyerRepository.getBuyerById(buyerId);"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 18,
                    "columnNumber" : 46,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "    Logger logger = LoggerFactory.getLogger(BuyerService.class);\n    @Autowired\n    private BuyerRepository buyerRepository;\n\n    public Buyer saveProduct(Buyer buyer) {\n            return buyerRepository.saveBuyer(buyer); /* <=== */ \n    }\n\n    public Buyer getProductById(String buyerId) {\n        return buyerRepository.getBuyerById(buyerId);\n    }"
                  },
                  {
                    "sample" : "Buyer buyer",
                    "lineNumber" : 18,
                    "columnNumber" : 28,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) { /* <=== */ \n        dynamoDBMapper.save(buyer);\n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 19,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) {\n        dynamoDBMapper.save(buyer); /* <=== */ \n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 19,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) {\n        dynamoDBMapper.save(buyer); /* <=== */ \n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId);"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(buyer)",
                    "lineNumber" : 19,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) {\n        dynamoDBMapper.save(buyer); /* <=== */ \n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId);"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "sourceId" : "Data.Sensitive.AccountData.AccountPassword",
        "sinks" : [
          {
            "sinkType" : "storages",
            "id" : "Storages.AmazonDynamoDB.Write",
            "name" : "Amazon Dynamo DB(Write)",
            "category" : "",
            "domains" : [
              "aws.amazon.com",
              "amazon.com"
            ],
            "sensitivity" : "",
            "isSensitive" : false,
            "tags" : {
              
            },
            "apiUrl" : [
            ],
            "databaseDetails" : {
              "dbName" : "",
              "dbVendor" : "",
              "dbLocation" : "",
              "dbOperation" : ""
            },
            "paths" : [
              {
                "pathId" : "4161-4304-4679-4684-1704-1708-1707",
                "path" : [
                  {
                    "sample" : "this",
                    "lineNumber" : 66,
                    "columnNumber" : 26,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t}\n\n\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email;\n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId()); /* <=== */ \n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);"
                  },
                  {
                    "sample" : "this.productService",
                    "lineNumber" : 76,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product); /* <=== */ \n\n\n\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 17,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "\n    Logger logger = LoggerFactory.getLogger(ProductService.class);\n    @Autowired\n    private ProductRepository productRepository;\n\n    public Product saveProduct(Product product) { /* <=== */ \n            return productRepository.saveProduct(product);\n    }\n\n    public Product getProductById(String productId) {\n        return productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this.productRepository",
                    "lineNumber" : 18,
                    "columnNumber" : 20,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "    Logger logger = LoggerFactory.getLogger(ProductService.class);\n    @Autowired\n    private ProductRepository productRepository;\n\n    public Product saveProduct(Product product) {\n            return productRepository.saveProduct(product); /* <=== */ \n    }\n\n    public Product getProductById(String productId) {\n        return productRepository.getProductById(productId);\n    }"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 19,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "\n\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Product saveProduct(Product product) { /* <=== */ \n        dynamoDBMapper.save(product);\n        return product;\n    }\n\n    public Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 20,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Product saveProduct(Product product) {\n        dynamoDBMapper.save(product); /* <=== */ \n        return product;\n    }\n\n    public Product getProductById(String productId) {\n        return dynamoDBMapper.load(Product.class, productId);"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(product)",
                    "lineNumber" : 20,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Product saveProduct(Product product) {\n        dynamoDBMapper.save(product); /* <=== */ \n        return product;\n    }\n\n    public Product getProductById(String productId) {\n        return dynamoDBMapper.load(Product.class, productId);"
                  }
                ]
              },
              {
                "pathId" : "4161-4338-3819-3824-1176-1180-1179",
                "path" : [
                  {
                    "sample" : "this",
                    "lineNumber" : 66,
                    "columnNumber" : 26,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t}\n\n\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email;\n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId()); /* <=== */ \n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);"
                  },
                  {
                    "sample" : "this.buyerService",
                    "lineNumber" : 87,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);\n\n\n\t\t\tbuyerService.saveProduct(newBuyer); /* <=== */ \n\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\tlogger.error(\"Exception while creating order: \" +"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 17,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "\n    Logger logger = LoggerFactory.getLogger(BuyerService.class);\n    @Autowired\n    private BuyerRepository buyerRepository;\n\n    public Buyer saveProduct(Buyer buyer) { /* <=== */ \n            return buyerRepository.saveBuyer(buyer);\n    }\n\n    public Buyer getProductById(String buyerId) {\n        return buyerRepository.getBuyerById(buyerId);"
                  },
                  {
                    "sample" : "this.buyerRepository",
                    "lineNumber" : 18,
                    "columnNumber" : 20,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "    Logger logger = LoggerFactory.getLogger(BuyerService.class);\n    @Autowired\n    private BuyerRepository buyerRepository;\n\n    public Buyer saveProduct(Buyer buyer) {\n            return buyerRepository.saveBuyer(buyer); /* <=== */ \n    }\n\n    public Buyer getProductById(String buyerId) {\n        return buyerRepository.getBuyerById(buyerId);\n    }"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 18,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) { /* <=== */ \n        dynamoDBMapper.save(buyer);\n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 19,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) {\n        dynamoDBMapper.save(buyer); /* <=== */ \n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId);"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(buyer)",
                    "lineNumber" : 19,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) {\n        dynamoDBMapper.save(buyer); /* <=== */ \n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId);"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "sourceId" : "Data.Sensitive.PurchaseData.OrderDetails",
        "sinks" : [
          {
            "sinkType" : "storages",
            "id" : "Storages.AmazonDynamoDB.Read",
            "name" : "Amazon Dynamo DB(Read)",
            "category" : "",
            "domains" : [
              "aws.amazon.com",
              "amazon.com"
            ],
            "sensitivity" : "",
            "isSensitive" : false,
            "tags" : {
              
            },
            "apiUrl" : [
            ],
            "databaseDetails" : {
              "dbName" : "",
              "dbVendor" : "",
              "dbLocation" : "",
              "dbOperation" : ""
            },
            "paths" : [
              {
                "pathId" : "679-682-684-687-693-715-721-718-5460-380-382-756-764-805-810-816-5474-767-776-887-900-897-894-893",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 93,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 94,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name); /* <=== */ \n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 97,
                    "columnNumber" : 44,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 106,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 107,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 107,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 106,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 97,
                    "columnNumber" : 27,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 99,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email); /* <=== */ \n\t\t\treturn Boolean.TRUE;\n\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 119,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) { /* <=== */ \n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}"
                  },
                  {
                    "sample" : "this.productRepository",
                    "lineNumber" : 120,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 139,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) { /* <=== */ \n\t\treturn dynamoDBMapper.load(Product.class, productId);\n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 140,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 140,
                    "columnNumber" : 45,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";"
                  },
                  {
                    "sample" : "String productId",
                    "lineNumber" : 139,
                    "columnNumber" : 32,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) { /* <=== */ \n\t\treturn dynamoDBMapper.load(Product.class, productId);\n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 120,
                    "columnNumber" : 54,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 122,
                    "columnNumber" : 53,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email); /* <=== */ \n\t}\n}\n\n\n@Repository"
                  },
                  {
                    "sample" : "String productId",
                    "lineNumber" : 160,
                    "columnNumber" : 41,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) { /* <=== */ \n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\","
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 161,
                    "columnNumber" : 56,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "Product.class",
                    "lineNumber" : 161,
                    "columnNumber" : 41,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 161,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "dynamoDBMapper.load(Product.class, productId)",
                    "lineNumber" : 161,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  }
                ]
              },
              {
                "pathId" : "679-682-684-687-693-715-721-718-5460-380-382-756-764-805-810-809",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 93,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 94,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name); /* <=== */ \n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 97,
                    "columnNumber" : 44,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 106,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 107,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 107,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 106,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 97,
                    "columnNumber" : 27,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 99,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email); /* <=== */ \n\t\t\treturn Boolean.TRUE;\n\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 119,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) { /* <=== */ \n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}"
                  },
                  {
                    "sample" : "this.productRepository",
                    "lineNumber" : 120,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 139,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) { /* <=== */ \n\t\treturn dynamoDBMapper.load(Product.class, productId);\n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 140,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";"
                  },
                  {
                    "sample" : "dynamoDBMapper.load(Product.class, productId)",
                    "lineNumber" : 140,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";"
                  }
                ]
              }
            ]
          },
          {
            "sinkType" : "storages",
            "id" : "Storages.AmazonDynamoDB.Write",
            "name" : "Amazon Dynamo DB(Write)",
            "category" : "",
            "domains" : [
              "aws.amazon.com",
              "amazon.com"
            ],
            "sensitivity" : "",
            "isSensitive" : false,
            "tags" : {
              
            },
            "apiUrl" : [
            ],
            "databaseDetails" : {
              "dbName" : "",
              "dbVendor" : "",
              "dbLocation" : "",
              "dbOperation" : ""
            },
            "paths" : [
              {
                "pathId" : "751-848-854-851-850",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 116,
                    "columnNumber" : 53,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);\n\t}\n\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product); /* <=== */ \n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 148,
                    "columnNumber" : 48,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";\n\t}\n\n\tpublic String updateProduct(String productId, Product product) { /* <=== */ \n\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 150,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn \"Product Id : \"+ productId +\" Deleted!\";\n\t}\n\n\tpublic String updateProduct(String productId, Product product) {\n\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 150,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn \"Product Id : \"+ productId +\" Deleted!\";\n\t}\n\n\tpublic String updateProduct(String productId, Product product) {\n\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(product, new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId))))",
                    "lineNumber" : 150,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn \"Product Id : \"+ productId +\" Deleted!\";\n\t}\n\n\tpublic String updateProduct(String productId, Product product) {\n\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  }
                ]
              },
              {
                "pathId" : "679-682-684-687-693-715-721-718-717",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 93,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 94,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name); /* <=== */ \n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 97,
                    "columnNumber" : 44,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 106,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 107,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 107,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(product)",
                    "lineNumber" : 107,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  }
                ]
              },
              {
                "pathId" : "4726-4733-4741-1761-1767-1764-1763",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 30,
                    "columnNumber" : 17,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "    public String updateProduct(String productId, Product product) {\n        return productRepository.updateProduct(productId, product);\n    }\n\n    public String updateProductBuyerEmail(String productId, String email) {\n        Product product = productRepository.getProductById(productId); /* <=== */ \n        product.setBuyerEmail(email);\n        return productRepository.updateProduct(productId, product);\n    }\n}"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 31,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "        return productRepository.updateProduct(productId, product);\n    }\n\n    public String updateProductBuyerEmail(String productId, String email) {\n        Product product = productRepository.getProductById(productId);\n        product.setBuyerEmail(email); /* <=== */ \n        return productRepository.updateProduct(productId, product);\n    }\n}"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 32,
                    "columnNumber" : 59,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "    }\n\n    public String updateProductBuyerEmail(String productId, String email) {\n        Product product = productRepository.getProductById(productId);\n        product.setBuyerEmail(email);\n        return productRepository.updateProduct(productId, product); /* <=== */ \n    }\n}"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 33,
                    "columnNumber" : 51,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "    public String deleteProductById(String productId) {\n        dynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n        return \"Product Id : \"+ productId +\" Deleted!\";\n    }\n\n    public String updateProduct(String productId, Product product) { /* <=== */ \n        dynamoDBMapper.save(product,\n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"productId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 34,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n        return \"Product Id : \"+ productId +\" Deleted!\";\n    }\n\n    public String updateProduct(String productId, Product product) {\n        dynamoDBMapper.save(product, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"productId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(productId)\n                                )));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 34,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n        return \"Product Id : \"+ productId +\" Deleted!\";\n    }\n\n    public String updateProduct(String productId, Product product) {\n        dynamoDBMapper.save(product, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"productId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(productId)\n                                )));"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(product, new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId))))",
                    "lineNumber" : 34,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n        return \"Product Id : \"+ productId +\" Deleted!\";\n    }\n\n    public String updateProduct(String productId, Product product) {\n        dynamoDBMapper.save(product, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"productId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(productId)\n                                )));"
                  }
                ]
              },
              {
                "pathId" : "798-795-794",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 135,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 135,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId);"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(product)",
                    "lineNumber" : 135,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId);"
                  }
                ]
              },
              {
                "pathId" : "4275-4278-4280-4298-4301-4307-4680-4687-1705-1711-1708-1707",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 68,
                    "columnNumber" : 12,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email;\n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product(); /* <=== */ \n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 68,
                    "columnNumber" : 12,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email;\n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product(); /* <=== */ \n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 69,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email;\n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId()); /* <=== */ \n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 73,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail); /* <=== */ \n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product);\n\n"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 74,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode); /* <=== */ \n\n\t\t\tproductService.saveProduct(product);\n\n\n\t\t\tBuyer buyer = order.getBuyer();"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 76,
                    "columnNumber" : 31,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product); /* <=== */ \n\n\n\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 17,
                    "columnNumber" : 32,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "\n    Logger logger = LoggerFactory.getLogger(ProductService.class);\n    @Autowired\n    private ProductRepository productRepository;\n\n    public Product saveProduct(Product product) { /* <=== */ \n            return productRepository.saveProduct(product);\n    }\n\n    public Product getProductById(String productId) {\n        return productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 18,
                    "columnNumber" : 50,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "    Logger logger = LoggerFactory.getLogger(ProductService.class);\n    @Autowired\n    private ProductRepository productRepository;\n\n    public Product saveProduct(Product product) {\n            return productRepository.saveProduct(product); /* <=== */ \n    }\n\n    public Product getProductById(String productId) {\n        return productRepository.getProductById(productId);\n    }"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 19,
                    "columnNumber" : 32,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "\n\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Product saveProduct(Product product) { /* <=== */ \n        dynamoDBMapper.save(product);\n        return product;\n    }\n\n    public Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 20,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Product saveProduct(Product product) {\n        dynamoDBMapper.save(product); /* <=== */ \n        return product;\n    }\n\n    public Product getProductById(String productId) {\n        return dynamoDBMapper.load(Product.class, productId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 20,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Product saveProduct(Product product) {\n        dynamoDBMapper.save(product); /* <=== */ \n        return product;\n    }\n\n    public Product getProductById(String productId) {\n        return dynamoDBMapper.load(Product.class, productId);"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(product)",
                    "lineNumber" : 20,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Product saveProduct(Product product) {\n        dynamoDBMapper.save(product); /* <=== */ \n        return product;\n    }\n\n    public Product getProductById(String productId) {\n        return dynamoDBMapper.load(Product.class, productId);"
                  }
                ]
              },
              {
                "pathId" : "679-682-684-687-693-715-721-718-5460-380-382-756-764-805-810-816-5474-767-776-887-900-897-894-893-892-902-925-932-924-923-922-918-909-908-905-904",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 93,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 94,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name); /* <=== */ \n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 97,
                    "columnNumber" : 44,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 106,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 107,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 107,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 106,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 97,
                    "columnNumber" : 27,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 99,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email); /* <=== */ \n\t\t\treturn Boolean.TRUE;\n\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 119,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) { /* <=== */ \n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}"
                  },
                  {
                    "sample" : "this.productRepository",
                    "lineNumber" : 120,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 139,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) { /* <=== */ \n\t\treturn dynamoDBMapper.load(Product.class, productId);\n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 140,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 140,
                    "columnNumber" : 45,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";"
                  },
                  {
                    "sample" : "String productId",
                    "lineNumber" : 139,
                    "columnNumber" : 32,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) { /* <=== */ \n\t\treturn dynamoDBMapper.load(Product.class, productId);\n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 120,
                    "columnNumber" : 54,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 122,
                    "columnNumber" : 53,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email); /* <=== */ \n\t}\n}\n\n\n@Repository"
                  },
                  {
                    "sample" : "String productId",
                    "lineNumber" : 160,
                    "columnNumber" : 41,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) { /* <=== */ \n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\","
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 161,
                    "columnNumber" : 56,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "Product.class",
                    "lineNumber" : 161,
                    "columnNumber" : 41,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 161,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "dynamoDBMapper.load(Product.class, productId)",
                    "lineNumber" : 161,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 161,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 162,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 167,
                    "columnNumber" : 38,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "new AttributeValue().withS(productId)",
                    "lineNumber" : 167,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "$obj11",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "new ExpectedAttributeValue(new AttributeValue().withS(productId))",
                    "lineNumber" : 166,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue( /* <=== */ \n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}"
                  },
                  {
                    "sample" : "new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId)))",
                    "lineNumber" : 164,
                    "columnNumber" : 5,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression() /* <=== */ \n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 163,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 163,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(product, new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId))))",
                    "lineNumber" : 163,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "sourceId" : "Data.Sensitive.PersonalIdentification.FirstName",
        "sinks" : [
          {
            "sinkType" : "storages",
            "id" : "Storages.AmazonDynamoDB.Write",
            "name" : "Amazon Dynamo DB(Write)",
            "category" : "",
            "domains" : [
              "aws.amazon.com",
              "amazon.com"
            ],
            "sensitivity" : "",
            "isSensitive" : false,
            "tags" : {
              
            },
            "apiUrl" : [
            ],
            "databaseDetails" : {
              "dbName" : "",
              "dbVendor" : "",
              "dbLocation" : "",
              "dbOperation" : ""
            },
            "paths" : [
              {
                "pathId" : "497-504-509-508-507-536-673-685-701-758-770-777-888-903-925-932-924-923-922-918-909-908-905-904",
                "path" : [
                  {
                    "sample" : "buyer",
                    "lineNumber" : 49,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\t\n\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer(); /* <=== */ \n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 50,
                    "columnNumber" : 22,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\n\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName(); /* <=== */ \n\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 51,
                    "columnNumber" : 18,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "buyer.getEmail()",
                    "lineNumber" : 51,
                    "columnNumber" : 18,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 51,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 56,
                    "columnNumber" : 66,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName); /* <=== */ \n\n\t\treturn new ResponseEntity<Order>(item, HttpStatus.OK);\n\t\t\n\t}\n\t"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 91,
                    "columnNumber" : 47,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) { /* <=== */ \n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 93,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 99,
                    "columnNumber" : 43,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email); /* <=== */ \n\t\t\treturn Boolean.TRUE;\n\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 119,
                    "columnNumber" : 58,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) { /* <=== */ \n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 121,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n\n"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 122,
                    "columnNumber" : 64,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email); /* <=== */ \n\t}\n}\n\n\n@Repository"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 160,
                    "columnNumber" : 59,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) { /* <=== */ \n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\","
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 162,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 167,
                    "columnNumber" : 38,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "new AttributeValue().withS(productId)",
                    "lineNumber" : 167,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "$obj11",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "new ExpectedAttributeValue(new AttributeValue().withS(productId))",
                    "lineNumber" : 166,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue( /* <=== */ \n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}"
                  },
                  {
                    "sample" : "new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId)))",
                    "lineNumber" : 164,
                    "columnNumber" : 5,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression() /* <=== */ \n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 163,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 163,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(product, new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId))))",
                    "lineNumber" : 163,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  }
                ]
              },
              {
                "pathId" : "3866-3878-1233-1239-1236-1235",
                "path" : [
                  {
                    "sample" : "buyer",
                    "lineNumber" : 30,
                    "columnNumber" : 15,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "    public String updateProduct(String buyerId, Buyer buyer) {\n        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n\n    public String updateProductBuyerEmail(String buyerId, String email) {\n        Buyer buyer = buyerRepository.getBuyerById(buyerId); /* <=== */ \n        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n}"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 31,
                    "columnNumber" : 53,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n\n    public String updateProductBuyerEmail(String buyerId, String email) {\n        Buyer buyer = buyerRepository.getBuyerById(buyerId);\n        return buyerRepository.updateBuyer(buyerId, buyer); /* <=== */ \n    }\n}"
                  },
                  {
                    "sample" : "Buyer buyer",
                    "lineNumber" : 32,
                    "columnNumber" : 47,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "    public String deleteBuyerById(String buyerId) {\n        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) { /* <=== */ \n        dynamoDBMapper.save(buyer,\n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 33,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 33,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(buyer, new DynamoDBSaveExpression().withExpectedEntry(\"buyerId\", new ExpectedAttributeValue(new AttributeValue().withS(buyerId))))",
                    "lineNumber" : 33,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));"
                  }
                ]
              },
              {
                "pathId" : "4330-4333-4341-3820-3827-1177-1183-1180-1179",
                "path" : [
                  {
                    "sample" : "newBuyer",
                    "lineNumber" : 84,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth); /* <=== */ \n\n\n\t\t\tbuyerService.saveProduct(newBuyer);\n\n\t\t}"
                  },
                  {
                    "sample" : "newBuyer",
                    "lineNumber" : 84,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth); /* <=== */ \n\n\n\t\t\tbuyerService.saveProduct(newBuyer);\n\n\t\t}"
                  },
                  {
                    "sample" : "newBuyer",
                    "lineNumber" : 87,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);\n\n\n\t\t\tbuyerService.saveProduct(newBuyer); /* <=== */ \n\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\tlogger.error(\"Exception while creating order: \" +"
                  },
                  {
                    "sample" : "Buyer buyer",
                    "lineNumber" : 17,
                    "columnNumber" : 30,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "\n    Logger logger = LoggerFactory.getLogger(BuyerService.class);\n    @Autowired\n    private BuyerRepository buyerRepository;\n\n    public Buyer saveProduct(Buyer buyer) { /* <=== */ \n            return buyerRepository.saveBuyer(buyer);\n    }\n\n    public Buyer getProductById(String buyerId) {\n        return buyerRepository.getBuyerById(buyerId);"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 18,
                    "columnNumber" : 46,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "    Logger logger = LoggerFactory.getLogger(BuyerService.class);\n    @Autowired\n    private BuyerRepository buyerRepository;\n\n    public Buyer saveProduct(Buyer buyer) {\n            return buyerRepository.saveBuyer(buyer); /* <=== */ \n    }\n\n    public Buyer getProductById(String buyerId) {\n        return buyerRepository.getBuyerById(buyerId);\n    }"
                  },
                  {
                    "sample" : "Buyer buyer",
                    "lineNumber" : 18,
                    "columnNumber" : 28,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) { /* <=== */ \n        dynamoDBMapper.save(buyer);\n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 19,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) {\n        dynamoDBMapper.save(buyer); /* <=== */ \n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 19,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) {\n        dynamoDBMapper.save(buyer); /* <=== */ \n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId);"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(buyer)",
                    "lineNumber" : 19,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) {\n        dynamoDBMapper.save(buyer); /* <=== */ \n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId);"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "sourceId" : "Data.Sensitive.PersonalIdentification.DateofBirth",
        "sinks" : [
          {
            "sinkType" : "storages",
            "id" : "Storages.AmazonDynamoDB.Write",
            "name" : "Amazon Dynamo DB(Write)",
            "category" : "",
            "domains" : [
              "aws.amazon.com",
              "amazon.com"
            ],
            "sensitivity" : "",
            "isSensitive" : false,
            "tags" : {
              
            },
            "apiUrl" : [
            ],
            "databaseDetails" : {
              "dbName" : "",
              "dbVendor" : "",
              "dbLocation" : "",
              "dbOperation" : ""
            },
            "paths" : [
              {
                "pathId" : "497-504-509-508-507-536-673-685-701-758-770-777-888-903-925-932-924-923-922-918-909-908-905-904",
                "path" : [
                  {
                    "sample" : "buyer",
                    "lineNumber" : 49,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\t\n\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer(); /* <=== */ \n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 50,
                    "columnNumber" : 22,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\n\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName(); /* <=== */ \n\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 51,
                    "columnNumber" : 18,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "buyer.getEmail()",
                    "lineNumber" : 51,
                    "columnNumber" : 18,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 51,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 56,
                    "columnNumber" : 66,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName); /* <=== */ \n\n\t\treturn new ResponseEntity<Order>(item, HttpStatus.OK);\n\t\t\n\t}\n\t"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 91,
                    "columnNumber" : 47,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) { /* <=== */ \n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 93,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 99,
                    "columnNumber" : 43,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email); /* <=== */ \n\t\t\treturn Boolean.TRUE;\n\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 119,
                    "columnNumber" : 58,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) { /* <=== */ \n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 121,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n\n"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 122,
                    "columnNumber" : 64,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email); /* <=== */ \n\t}\n}\n\n\n@Repository"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 160,
                    "columnNumber" : 59,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) { /* <=== */ \n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\","
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 162,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 167,
                    "columnNumber" : 38,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "new AttributeValue().withS(productId)",
                    "lineNumber" : 167,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "$obj11",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "new ExpectedAttributeValue(new AttributeValue().withS(productId))",
                    "lineNumber" : 166,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue( /* <=== */ \n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}"
                  },
                  {
                    "sample" : "new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId)))",
                    "lineNumber" : 164,
                    "columnNumber" : 5,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression() /* <=== */ \n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 163,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 163,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(product, new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId))))",
                    "lineNumber" : 163,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  }
                ]
              },
              {
                "pathId" : "3866-3878-1233-1239-1236-1235",
                "path" : [
                  {
                    "sample" : "buyer",
                    "lineNumber" : 30,
                    "columnNumber" : 15,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "    public String updateProduct(String buyerId, Buyer buyer) {\n        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n\n    public String updateProductBuyerEmail(String buyerId, String email) {\n        Buyer buyer = buyerRepository.getBuyerById(buyerId); /* <=== */ \n        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n}"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 31,
                    "columnNumber" : 53,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n\n    public String updateProductBuyerEmail(String buyerId, String email) {\n        Buyer buyer = buyerRepository.getBuyerById(buyerId);\n        return buyerRepository.updateBuyer(buyerId, buyer); /* <=== */ \n    }\n}"
                  },
                  {
                    "sample" : "Buyer buyer",
                    "lineNumber" : 32,
                    "columnNumber" : 47,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "    public String deleteBuyerById(String buyerId) {\n        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) { /* <=== */ \n        dynamoDBMapper.save(buyer,\n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 33,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 33,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(buyer, new DynamoDBSaveExpression().withExpectedEntry(\"buyerId\", new ExpectedAttributeValue(new AttributeValue().withS(buyerId))))",
                    "lineNumber" : 33,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));"
                  }
                ]
              },
              {
                "pathId" : "4330-4333-4341-3820-3827-1177-1183-1180-1179",
                "path" : [
                  {
                    "sample" : "newBuyer",
                    "lineNumber" : 84,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth); /* <=== */ \n\n\n\t\t\tbuyerService.saveProduct(newBuyer);\n\n\t\t}"
                  },
                  {
                    "sample" : "newBuyer",
                    "lineNumber" : 84,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth); /* <=== */ \n\n\n\t\t\tbuyerService.saveProduct(newBuyer);\n\n\t\t}"
                  },
                  {
                    "sample" : "newBuyer",
                    "lineNumber" : 87,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);\n\n\n\t\t\tbuyerService.saveProduct(newBuyer); /* <=== */ \n\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\tlogger.error(\"Exception while creating order: \" +"
                  },
                  {
                    "sample" : "Buyer buyer",
                    "lineNumber" : 17,
                    "columnNumber" : 30,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "\n    Logger logger = LoggerFactory.getLogger(BuyerService.class);\n    @Autowired\n    private BuyerRepository buyerRepository;\n\n    public Buyer saveProduct(Buyer buyer) { /* <=== */ \n            return buyerRepository.saveBuyer(buyer);\n    }\n\n    public Buyer getProductById(String buyerId) {\n        return buyerRepository.getBuyerById(buyerId);"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 18,
                    "columnNumber" : 46,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "    Logger logger = LoggerFactory.getLogger(BuyerService.class);\n    @Autowired\n    private BuyerRepository buyerRepository;\n\n    public Buyer saveProduct(Buyer buyer) {\n            return buyerRepository.saveBuyer(buyer); /* <=== */ \n    }\n\n    public Buyer getProductById(String buyerId) {\n        return buyerRepository.getBuyerById(buyerId);\n    }"
                  },
                  {
                    "sample" : "Buyer buyer",
                    "lineNumber" : 18,
                    "columnNumber" : 28,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) { /* <=== */ \n        dynamoDBMapper.save(buyer);\n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 19,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) {\n        dynamoDBMapper.save(buyer); /* <=== */ \n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 19,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) {\n        dynamoDBMapper.save(buyer); /* <=== */ \n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId);"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(buyer)",
                    "lineNumber" : 19,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) {\n        dynamoDBMapper.save(buyer); /* <=== */ \n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId);"
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "miscellaneous" : [
    ],
    "internal_apis" : [
    ],
    "leakages" : [
      {
        "sourceId" : "Data.Sensitive.ContactData.EmailAddress",
        "sinks" : [
          {
            "sinkType" : "leakages",
            "id" : "Leakages.Log.Debug",
            "name" : "Log Debug",
            "category" : "",
            "domains" : [
            ],
            "sensitivity" : "",
            "isSensitive" : false,
            "tags" : {
              
            },
            "apiUrl" : [
            ],
            "databaseDetails" : {
              "dbName" : "",
              "dbVendor" : "",
              "dbLocation" : "",
              "dbOperation" : ""
            },
            "paths" : [
              {
                "pathId" : "4261-4260-4289-4296-4290",
                "path" : [
                  {
                    "sample" : "order.getBuyer().email",
                    "lineNumber" : 65,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\treturn dao.getOrders();\n\t}\n\n\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email; /* <=== */ \n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n"
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 65,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\treturn dao.getOrders();\n\t}\n\n\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email; /* <=== */ \n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n"
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 71,
                    "columnNumber" : 41,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail); /* <=== */ \n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product);"
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 72,
                    "columnNumber" : 35,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail); /* <=== */ \n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product);\n"
                  },
                  {
                    "sample" : "logger.debug(\"Buyer Email: \" + buyerEmail)",
                    "lineNumber" : 72,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail); /* <=== */ \n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product);\n"
                  }
                ]
              }
            ]
          },
          {
            "sinkType" : "leakages",
            "id" : "Leakages.Log.Error",
            "name" : "Log Error",
            "category" : "",
            "domains" : [
            ],
            "sensitivity" : "",
            "isSensitive" : false,
            "tags" : {
              
            },
            "apiUrl" : [
            ],
            "databaseDetails" : {
              "dbName" : "",
              "dbVendor" : "",
              "dbLocation" : "",
              "dbOperation" : ""
            },
            "paths" : [
              {
                "pathId" : "4261-4260-4289-4296-4299-4362-4344",
                "path" : [
                  {
                    "sample" : "order.getBuyer().email",
                    "lineNumber" : 65,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\treturn dao.getOrders();\n\t}\n\n\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email; /* <=== */ \n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n"
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 65,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\treturn dao.getOrders();\n\t}\n\n\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email; /* <=== */ \n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n"
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 71,
                    "columnNumber" : 41,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail); /* <=== */ \n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product);"
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 72,
                    "columnNumber" : 35,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail); /* <=== */ \n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product);\n"
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 73,
                    "columnNumber" : 26,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail); /* <=== */ \n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product);\n\n"
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 94,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\tlogger.error(\"Exception while creating order: \" +\n\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" + /* <=== */ \n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();"
                  },
                  {
                    "sample" : "logger.error(\"Exception while creating order: \" + \"\" + order.getId() + \"\" + \"Buyer Email\" + buyerEmail + \"\" + \"buyer pin code\" + buyerPincode)",
                    "lineNumber" : 92,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tbuyerService.saveProduct(newBuyer);\n\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\tlogger.error(\"Exception while creating order: \" + /* <=== */ \n\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n"
                  }
                ]
              }
            ]
          },
          {
            "sinkType" : "leakages",
            "id" : "Leakages.Log.Console",
            "name" : "Log Console",
            "category" : "",
            "domains" : [
            ],
            "sensitivity" : "",
            "isSensitive" : false,
            "tags" : {
              
            },
            "apiUrl" : [
            ],
            "databaseDetails" : {
              "dbName" : "",
              "dbVendor" : "",
              "dbLocation" : "",
              "dbOperation" : ""
            },
            "paths" : [
              {
                "pathId" : "4261-4260-4289-4283",
                "path" : [
                  {
                    "sample" : "order.getBuyer().email",
                    "lineNumber" : 65,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\treturn dao.getOrders();\n\t}\n\n\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email; /* <=== */ \n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n"
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 65,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\treturn dao.getOrders();\n\t}\n\n\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email; /* <=== */ \n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n"
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 71,
                    "columnNumber" : 41,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail); /* <=== */ \n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product);"
                  },
                  {
                    "sample" : "System.out.println(\"Buyer Email: \" + buyerEmail)",
                    "lineNumber" : 71,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail); /* <=== */ \n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product);"
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "third_parties" : [
      {
        "sourceId" : "Data.Sensitive.PersonalIdentification.LastName",
        "sinks" : [
          {
            "sinkType" : "third_parties",
            "id" : "ThirdParties.SDK.Atlassian",
            "name" : "Atlassian",
            "category" : "",
            "domains" : [
              "atlassian.com"
            ],
            "sensitivity" : "",
            "isSensitive" : false,
            "tags" : {
              
            },
            "apiUrl" : [
            ],
            "databaseDetails" : {
              "dbName" : "",
              "dbVendor" : "",
              "dbLocation" : "",
              "dbOperation" : ""
            },
            "paths" : [
              {
                "pathId" : "4310-4317-4322-4327-4326-4325-4336-2521-2529-2496-2528-2530-4332-4378-4377-4376-4396-4393-4392-4391-4390",
                "path" : [
                  {
                    "sample" : "buyer",
                    "lineNumber" : 79,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product);\n\n\n\t\t\tBuyer buyer = order.getBuyer(); /* <=== */ \n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 80,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\t\t\tproductService.saveProduct(product);\n\n\n\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName(); /* <=== */ \n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);\n"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 81,
                    "columnNumber" : 22,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tproductService.saveProduct(product);\n\n\n\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName(); /* <=== */ \n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);\n\n"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 82,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\n\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth(); /* <=== */ \n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);\n\n\n\t\t\tbuyerService.saveProduct(newBuyer);"
                  },
                  {
                    "sample" : "buyer.getDateOfBirth()",
                    "lineNumber" : 82,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\n\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth(); /* <=== */ \n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);\n\n\n\t\t\tbuyerService.saveProduct(newBuyer);"
                  },
                  {
                    "sample" : "dateOfBirth",
                    "lineNumber" : 82,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\n\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth(); /* <=== */ \n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);\n\n\n\t\t\tbuyerService.saveProduct(newBuyer);"
                  },
                  {
                    "sample" : "dateOfBirth",
                    "lineNumber" : 84,
                    "columnNumber" : 52,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth); /* <=== */ \n\n\n\t\t\tbuyerService.saveProduct(newBuyer);\n\n\t\t}"
                  },
                  {
                    "sample" : "String dateOfBirth",
                    "lineNumber" : 6,
                    "columnNumber" : 53,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Buyer.java",
                    "excerpt" : "package com.analytics.analytics.entity;\n\npublic class Buyer extends User {\n\n\n    public Buyer(String firstName, String lastName, String dateOfBirth) { /* <=== */ \n        super();\n        this.setFirstName(firstName);\n        this.setLastName(lastName);\n        this.setDateOfBirth(dateOfBirth);\n    }"
                  },
                  {
                    "sample" : "dateOfBirth",
                    "lineNumber" : 10,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Buyer.java",
                    "excerpt" : "\n    public Buyer(String firstName, String lastName, String dateOfBirth) {\n        super();\n        this.setFirstName(firstName);\n        this.setLastName(lastName);\n        this.setDateOfBirth(dateOfBirth); /* <=== */ \n    }\n}"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 10,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Buyer.java",
                    "excerpt" : "\n    public Buyer(String firstName, String lastName, String dateOfBirth) {\n        super();\n        this.setFirstName(firstName);\n        this.setLastName(lastName);\n        this.setDateOfBirth(dateOfBirth); /* <=== */ \n    }\n}"
                  },
                  {
                    "sample" : "this.setDateOfBirth(dateOfBirth)",
                    "lineNumber" : 10,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Buyer.java",
                    "excerpt" : "\n    public Buyer(String firstName, String lastName, String dateOfBirth) {\n        super();\n        this.setFirstName(firstName);\n        this.setLastName(lastName);\n        this.setDateOfBirth(dateOfBirth); /* <=== */ \n    }\n}"
                  },
                  {
                    "sample" : "void",
                    "lineNumber" : 11,
                    "columnNumber" : 5,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Buyer.java",
                    "excerpt" : "    public Buyer(String firstName, String lastName, String dateOfBirth) {\n        super();\n        this.setFirstName(firstName);\n        this.setLastName(lastName);\n        this.setDateOfBirth(dateOfBirth);\n    } /* <=== */ \n}"
                  },
                  {
                    "sample" : "new Buyer(firstName, lastName, dateOfBirth)",
                    "lineNumber" : 84,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth); /* <=== */ \n\n\n\t\t\tbuyerService.saveProduct(newBuyer);\n\n\t\t}"
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, 1l, buyerEmail).build()",
                    "lineNumber" : 98,
                    "columnNumber" : 26,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);"
                  },
                  {
                    "sample" : "newIssue",
                    "lineNumber" : 98,
                    "columnNumber" : 15,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);"
                  },
                  {
                    "sample" : "newIssue",
                    "lineNumber" : 100,
                    "columnNumber" : 28,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);\n\t}\n"
                  },
                  {
                    "sample" : "this.issueClient",
                    "lineNumber" : 100,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);\n\t}\n"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue)",
                    "lineNumber" : 100,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);\n\t}\n"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue).claim()",
                    "lineNumber" : 100,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);\n\t}\n"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue).claim().getKey()",
                    "lineNumber" : 100,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);\n\t}\n"
                  }
                ]
              },
              {
                "pathId" : "4330-4333-4341-3820-3827-1177-1183-1184-1188-3823-3822-3830-4337-4378-4377",
                "path" : [
                  {
                    "sample" : "newBuyer",
                    "lineNumber" : 84,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth); /* <=== */ \n\n\n\t\t\tbuyerService.saveProduct(newBuyer);\n\n\t\t}"
                  },
                  {
                    "sample" : "newBuyer",
                    "lineNumber" : 84,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth); /* <=== */ \n\n\n\t\t\tbuyerService.saveProduct(newBuyer);\n\n\t\t}"
                  },
                  {
                    "sample" : "newBuyer",
                    "lineNumber" : 87,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);\n\n\n\t\t\tbuyerService.saveProduct(newBuyer); /* <=== */ \n\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\tlogger.error(\"Exception while creating order: \" +"
                  },
                  {
                    "sample" : "Buyer buyer",
                    "lineNumber" : 17,
                    "columnNumber" : 30,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "\n    Logger logger = LoggerFactory.getLogger(BuyerService.class);\n    @Autowired\n    private BuyerRepository buyerRepository;\n\n    public Buyer saveProduct(Buyer buyer) { /* <=== */ \n            return buyerRepository.saveBuyer(buyer);\n    }\n\n    public Buyer getProductById(String buyerId) {\n        return buyerRepository.getBuyerById(buyerId);"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 18,
                    "columnNumber" : 46,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "    Logger logger = LoggerFactory.getLogger(BuyerService.class);\n    @Autowired\n    private BuyerRepository buyerRepository;\n\n    public Buyer saveProduct(Buyer buyer) {\n            return buyerRepository.saveBuyer(buyer); /* <=== */ \n    }\n\n    public Buyer getProductById(String buyerId) {\n        return buyerRepository.getBuyerById(buyerId);\n    }"
                  },
                  {
                    "sample" : "Buyer buyer",
                    "lineNumber" : 18,
                    "columnNumber" : 28,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) { /* <=== */ \n        dynamoDBMapper.save(buyer);\n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 19,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) {\n        dynamoDBMapper.save(buyer); /* <=== */ \n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId);"
                  },
                  {
                    "sample" : "com.analytics.analytics.entity.Buyer",
                    "lineNumber" : 18,
                    "columnNumber" : 12,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) { /* <=== */ \n        dynamoDBMapper.save(buyer);\n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {"
                  },
                  {
                    "sample" : "buyerRepository.saveBuyer(buyer)",
                    "lineNumber" : 18,
                    "columnNumber" : 20,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "    Logger logger = LoggerFactory.getLogger(BuyerService.class);\n    @Autowired\n    private BuyerRepository buyerRepository;\n\n    public Buyer saveProduct(Buyer buyer) {\n            return buyerRepository.saveBuyer(buyer); /* <=== */ \n    }\n\n    public Buyer getProductById(String buyerId) {\n        return buyerRepository.getBuyerById(buyerId);\n    }"
                  },
                  {
                    "sample" : "com.analytics.analytics.entity.Buyer",
                    "lineNumber" : 17,
                    "columnNumber" : 12,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "\n    Logger logger = LoggerFactory.getLogger(BuyerService.class);\n    @Autowired\n    private BuyerRepository buyerRepository;\n\n    public Buyer saveProduct(Buyer buyer) { /* <=== */ \n            return buyerRepository.saveBuyer(buyer);\n    }\n\n    public Buyer getProductById(String buyerId) {\n        return buyerRepository.getBuyerById(buyerId);"
                  },
                  {
                    "sample" : "buyerService.saveProduct(newBuyer)",
                    "lineNumber" : 87,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);\n\n\n\t\t\tbuyerService.saveProduct(newBuyer); /* <=== */ \n\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\tlogger.error(\"Exception while creating order: \" +"
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, 1l, buyerEmail).build()",
                    "lineNumber" : 98,
                    "columnNumber" : 26,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);"
                  }
                ]
              }
            ]
          },
          {
            "sinkType" : "third_parties",
            "id" : "ThirdParties.SDK.Amazonaws",
            "name" : "Amazonaws",
            "category" : "",
            "domains" : [
              "amazonaws.com"
            ],
            "sensitivity" : "",
            "isSensitive" : false,
            "tags" : {
              
            },
            "apiUrl" : [
            ],
            "databaseDetails" : {
              "dbName" : "",
              "dbVendor" : "",
              "dbLocation" : "",
              "dbOperation" : ""
            },
            "paths" : [
              {
                "pathId" : "497-504-509-508-507-536-673-685-701-758-770-777-888-903-3005-3010-3008-3017-901-925-932-924-923-922",
                "path" : [
                  {
                    "sample" : "buyer",
                    "lineNumber" : 49,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\t\n\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer(); /* <=== */ \n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 50,
                    "columnNumber" : 22,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\n\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName(); /* <=== */ \n\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 51,
                    "columnNumber" : 18,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "buyer.getEmail()",
                    "lineNumber" : 51,
                    "columnNumber" : 18,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 51,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 56,
                    "columnNumber" : 66,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName); /* <=== */ \n\n\t\treturn new ResponseEntity<Order>(item, HttpStatus.OK);\n\t\t\n\t}\n\t"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 91,
                    "columnNumber" : 47,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) { /* <=== */ \n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 93,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 99,
                    "columnNumber" : 43,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email); /* <=== */ \n\t\t\treturn Boolean.TRUE;\n\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 119,
                    "columnNumber" : 58,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) { /* <=== */ \n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 121,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n\n"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 122,
                    "columnNumber" : 64,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email); /* <=== */ \n\t}\n}\n\n\n@Repository"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 160,
                    "columnNumber" : 59,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) { /* <=== */ \n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\","
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 162,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "final String buyerEmail",
                    "lineNumber" : 89,
                    "columnNumber" : 31,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Product.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 90,
                    "columnNumber" : 27,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Product.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "this.buyerEmail",
                    "lineNumber" : 90,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Product.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "void",
                    "lineNumber" : 89,
                    "columnNumber" : 12,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Product.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "product.setBuyerEmail(email)",
                    "lineNumber" : 162,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 167,
                    "columnNumber" : 38,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "new AttributeValue().withS(productId)",
                    "lineNumber" : 167,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "$obj11",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "new ExpectedAttributeValue(new AttributeValue().withS(productId))",
                    "lineNumber" : 166,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue( /* <=== */ \n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}"
                  }
                ]
              },
              {
                "pathId" : "497-504-509-508-507-536-673-685-701-758-770-777-888-903-3005-3010-3008-3017-901-925-932-924",
                "path" : [
                  {
                    "sample" : "buyer",
                    "lineNumber" : 49,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\t\n\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer(); /* <=== */ \n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 50,
                    "columnNumber" : 22,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\n\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName(); /* <=== */ \n\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 51,
                    "columnNumber" : 18,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "buyer.getEmail()",
                    "lineNumber" : 51,
                    "columnNumber" : 18,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 51,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 56,
                    "columnNumber" : 66,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName); /* <=== */ \n\n\t\treturn new ResponseEntity<Order>(item, HttpStatus.OK);\n\t\t\n\t}\n\t"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 91,
                    "columnNumber" : 47,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) { /* <=== */ \n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 93,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 99,
                    "columnNumber" : 43,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email); /* <=== */ \n\t\t\treturn Boolean.TRUE;\n\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 119,
                    "columnNumber" : 58,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) { /* <=== */ \n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 121,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n\n"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 122,
                    "columnNumber" : 64,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email); /* <=== */ \n\t}\n}\n\n\n@Repository"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 160,
                    "columnNumber" : 59,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) { /* <=== */ \n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\","
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 162,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "final String buyerEmail",
                    "lineNumber" : 89,
                    "columnNumber" : 31,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Product.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 90,
                    "columnNumber" : 27,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Product.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "this.buyerEmail",
                    "lineNumber" : 90,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Product.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "void",
                    "lineNumber" : 89,
                    "columnNumber" : 12,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Product.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "product.setBuyerEmail(email)",
                    "lineNumber" : 162,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 167,
                    "columnNumber" : 38,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "new AttributeValue().withS(productId)",
                    "lineNumber" : 167,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  }
                ]
              },
              {
                "pathId" : "497-504-509-508-507-536-673-685-701-758-770-777-888-903-925-932-924-923-922-918-909-908-905-904",
                "path" : [
                  {
                    "sample" : "buyer",
                    "lineNumber" : 49,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\t\n\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer(); /* <=== */ \n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 50,
                    "columnNumber" : 22,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\n\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName(); /* <=== */ \n\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 51,
                    "columnNumber" : 18,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "buyer.getEmail()",
                    "lineNumber" : 51,
                    "columnNumber" : 18,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 51,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 56,
                    "columnNumber" : 66,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName); /* <=== */ \n\n\t\treturn new ResponseEntity<Order>(item, HttpStatus.OK);\n\t\t\n\t}\n\t"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 91,
                    "columnNumber" : 47,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) { /* <=== */ \n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 93,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 99,
                    "columnNumber" : 43,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email); /* <=== */ \n\t\t\treturn Boolean.TRUE;\n\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 119,
                    "columnNumber" : 58,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) { /* <=== */ \n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 121,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n\n"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 122,
                    "columnNumber" : 64,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email); /* <=== */ \n\t}\n}\n\n\n@Repository"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 160,
                    "columnNumber" : 59,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) { /* <=== */ \n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\","
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 162,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 167,
                    "columnNumber" : 38,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "new AttributeValue().withS(productId)",
                    "lineNumber" : 167,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "$obj11",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "new ExpectedAttributeValue(new AttributeValue().withS(productId))",
                    "lineNumber" : 166,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue( /* <=== */ \n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}"
                  },
                  {
                    "sample" : "new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId)))",
                    "lineNumber" : 164,
                    "columnNumber" : 5,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression() /* <=== */ \n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 163,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 163,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(product, new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId))))",
                    "lineNumber" : 163,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  }
                ]
              },
              {
                "pathId" : "3866-3878-1233-1239-1236-1235",
                "path" : [
                  {
                    "sample" : "buyer",
                    "lineNumber" : 30,
                    "columnNumber" : 15,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "    public String updateProduct(String buyerId, Buyer buyer) {\n        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n\n    public String updateProductBuyerEmail(String buyerId, String email) {\n        Buyer buyer = buyerRepository.getBuyerById(buyerId); /* <=== */ \n        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n}"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 31,
                    "columnNumber" : 53,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n\n    public String updateProductBuyerEmail(String buyerId, String email) {\n        Buyer buyer = buyerRepository.getBuyerById(buyerId);\n        return buyerRepository.updateBuyer(buyerId, buyer); /* <=== */ \n    }\n}"
                  },
                  {
                    "sample" : "Buyer buyer",
                    "lineNumber" : 32,
                    "columnNumber" : 47,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "    public String deleteBuyerById(String buyerId) {\n        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) { /* <=== */ \n        dynamoDBMapper.save(buyer,\n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 33,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 33,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(buyer, new DynamoDBSaveExpression().withExpectedEntry(\"buyerId\", new ExpectedAttributeValue(new AttributeValue().withS(buyerId))))",
                    "lineNumber" : 33,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));"
                  }
                ]
              },
              {
                "pathId" : "3866-3878-1233-1239-1236-1240",
                "path" : [
                  {
                    "sample" : "buyer",
                    "lineNumber" : 30,
                    "columnNumber" : 15,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "    public String updateProduct(String buyerId, Buyer buyer) {\n        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n\n    public String updateProductBuyerEmail(String buyerId, String email) {\n        Buyer buyer = buyerRepository.getBuyerById(buyerId); /* <=== */ \n        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n}"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 31,
                    "columnNumber" : 53,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n\n    public String updateProductBuyerEmail(String buyerId, String email) {\n        Buyer buyer = buyerRepository.getBuyerById(buyerId);\n        return buyerRepository.updateBuyer(buyerId, buyer); /* <=== */ \n    }\n}"
                  },
                  {
                    "sample" : "Buyer buyer",
                    "lineNumber" : 32,
                    "columnNumber" : 47,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "    public String deleteBuyerById(String buyerId) {\n        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) { /* <=== */ \n        dynamoDBMapper.save(buyer,\n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 33,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 33,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));"
                  },
                  {
                    "sample" : "new DynamoDBSaveExpression().withExpectedEntry(\"buyerId\", new ExpectedAttributeValue(new AttributeValue().withS(buyerId)))",
                    "lineNumber" : 34,
                    "columnNumber" : 17,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer,\n                new DynamoDBSaveExpression() /* <=== */ \n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));\n        return buyerId;"
                  }
                ]
              },
              {
                "pathId" : "497-504-509-508-507-536-673-685-701-758-770-777-888-903-925-932-924-923-922-918-909",
                "path" : [
                  {
                    "sample" : "buyer",
                    "lineNumber" : 49,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\t\n\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer(); /* <=== */ \n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 50,
                    "columnNumber" : 22,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\n\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName(); /* <=== */ \n\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 51,
                    "columnNumber" : 18,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "buyer.getEmail()",
                    "lineNumber" : 51,
                    "columnNumber" : 18,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 51,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 56,
                    "columnNumber" : 66,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName); /* <=== */ \n\n\t\treturn new ResponseEntity<Order>(item, HttpStatus.OK);\n\t\t\n\t}\n\t"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 91,
                    "columnNumber" : 47,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) { /* <=== */ \n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 93,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 99,
                    "columnNumber" : 43,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email); /* <=== */ \n\t\t\treturn Boolean.TRUE;\n\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 119,
                    "columnNumber" : 58,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) { /* <=== */ \n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 121,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n\n"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 122,
                    "columnNumber" : 64,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email); /* <=== */ \n\t}\n}\n\n\n@Repository"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 160,
                    "columnNumber" : 59,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) { /* <=== */ \n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\","
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 162,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 167,
                    "columnNumber" : 38,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "new AttributeValue().withS(productId)",
                    "lineNumber" : 167,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "$obj11",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "new ExpectedAttributeValue(new AttributeValue().withS(productId))",
                    "lineNumber" : 166,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue( /* <=== */ \n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}"
                  },
                  {
                    "sample" : "new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId)))",
                    "lineNumber" : 164,
                    "columnNumber" : 5,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression() /* <=== */ \n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;"
                  }
                ]
              },
              {
                "pathId" : "4330-4333-4341-3820-3827-1177-1183-1180-1179",
                "path" : [
                  {
                    "sample" : "newBuyer",
                    "lineNumber" : 84,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth); /* <=== */ \n\n\n\t\t\tbuyerService.saveProduct(newBuyer);\n\n\t\t}"
                  },
                  {
                    "sample" : "newBuyer",
                    "lineNumber" : 84,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth); /* <=== */ \n\n\n\t\t\tbuyerService.saveProduct(newBuyer);\n\n\t\t}"
                  },
                  {
                    "sample" : "newBuyer",
                    "lineNumber" : 87,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);\n\n\n\t\t\tbuyerService.saveProduct(newBuyer); /* <=== */ \n\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\tlogger.error(\"Exception while creating order: \" +"
                  },
                  {
                    "sample" : "Buyer buyer",
                    "lineNumber" : 17,
                    "columnNumber" : 30,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "\n    Logger logger = LoggerFactory.getLogger(BuyerService.class);\n    @Autowired\n    private BuyerRepository buyerRepository;\n\n    public Buyer saveProduct(Buyer buyer) { /* <=== */ \n            return buyerRepository.saveBuyer(buyer);\n    }\n\n    public Buyer getProductById(String buyerId) {\n        return buyerRepository.getBuyerById(buyerId);"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 18,
                    "columnNumber" : 46,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "    Logger logger = LoggerFactory.getLogger(BuyerService.class);\n    @Autowired\n    private BuyerRepository buyerRepository;\n\n    public Buyer saveProduct(Buyer buyer) {\n            return buyerRepository.saveBuyer(buyer); /* <=== */ \n    }\n\n    public Buyer getProductById(String buyerId) {\n        return buyerRepository.getBuyerById(buyerId);\n    }"
                  },
                  {
                    "sample" : "Buyer buyer",
                    "lineNumber" : 18,
                    "columnNumber" : 28,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) { /* <=== */ \n        dynamoDBMapper.save(buyer);\n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 19,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) {\n        dynamoDBMapper.save(buyer); /* <=== */ \n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 19,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) {\n        dynamoDBMapper.save(buyer); /* <=== */ \n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId);"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(buyer)",
                    "lineNumber" : 19,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) {\n        dynamoDBMapper.save(buyer); /* <=== */ \n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId);"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "sourceId" : "Data.Sensitive.ContactData.EmailAddress",
        "sinks" : [
          {
            "sinkType" : "third_parties",
            "id" : "ThirdParties.SDK.Atlassian",
            "name" : "Atlassian",
            "category" : "",
            "domains" : [
              "atlassian.com"
            ],
            "sensitivity" : "",
            "isSensitive" : false,
            "tags" : {
              
            },
            "apiUrl" : [
            ],
            "databaseDetails" : {
              "dbName" : "",
              "dbVendor" : "",
              "dbLocation" : "",
              "dbOperation" : ""
            },
            "paths" : [
              {
                "pathId" : "4261-4260-4289-4296-4299-4362-4373-4371-4537-4544-4542-4541-4559-4558-4555-4554-4553-4549-4548-4547-4568-4565-4564-4563-4562-4561-4571-4366-4378-4377",
                "path" : [
                  {
                    "sample" : "order.getBuyer().email",
                    "lineNumber" : 65,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\treturn dao.getOrders();\n\t}\n\n\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email; /* <=== */ \n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n"
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 65,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\treturn dao.getOrders();\n\t}\n\n\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email; /* <=== */ \n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n"
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 71,
                    "columnNumber" : 41,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail); /* <=== */ \n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product);"
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 72,
                    "columnNumber" : 35,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail); /* <=== */ \n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product);\n"
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 73,
                    "columnNumber" : 26,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail); /* <=== */ \n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product);\n\n"
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 94,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\tlogger.error(\"Exception while creating order: \" +\n\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" + /* <=== */ \n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();"
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 96,
                    "columnNumber" : 71,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\t\t\tlogger.error(\"Exception while creating order: \" +\n\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail); /* <=== */ \n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;"
                  },
                  {
                    "sample" : "\"Exception while creating order for \" + buyerEmail",
                    "lineNumber" : 96,
                    "columnNumber" : 32,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\t\t\tlogger.error(\"Exception while creating order: \" +\n\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail); /* <=== */ \n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 147,
                    "columnNumber" : 44,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) { /* <=== */ \n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 148,
                    "columnNumber" : 48,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email; /* <=== */ \n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n"
                  },
                  {
                    "sample" : "\"Payment Failure by\" + email",
                    "lineNumber" : 148,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email; /* <=== */ \n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n"
                  },
                  {
                    "sample" : "issueSummary",
                    "lineNumber" : 148,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email; /* <=== */ \n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n"
                  },
                  {
                    "sample" : "issueSummary",
                    "lineNumber" : 150,
                    "columnNumber" : 28,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build(); /* <=== */ \n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient"
                  },
                  {
                    "sample" : "issueType",
                    "lineNumber" : 150,
                    "columnNumber" : 17,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build(); /* <=== */ \n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient"
                  },
                  {
                    "sample" : "this.projectKey",
                    "lineNumber" : 150,
                    "columnNumber" : 5,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build(); /* <=== */ \n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient"
                  },
                  {
                    "sample" : "$obj5",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, issueType, issueSummary)",
                    "lineNumber" : 149,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {"
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, issueType, issueSummary).build()",
                    "lineNumber" : 149,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {"
                  },
                  {
                    "sample" : "newIssue",
                    "lineNumber" : 149,
                    "columnNumber" : 14,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {"
                  },
                  {
                    "sample" : "newIssue",
                    "lineNumber" : 151,
                    "columnNumber" : 34,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "this.issueClient",
                    "lineNumber" : 151,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue)",
                    "lineNumber" : 151,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue).claim()",
                    "lineNumber" : 151,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue).claim().getKey()",
                    "lineNumber" : 151,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "java.lang.String",
                    "lineNumber" : 147,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) { /* <=== */ \n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}"
                  },
                  {
                    "sample" : "jiraService.createIssue(1l, \"Exception while creating order for \" + buyerEmail)",
                    "lineNumber" : 96,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\t\t\tlogger.error(\"Exception while creating order: \" +\n\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail); /* <=== */ \n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;"
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, 1l, buyerEmail).build()",
                    "lineNumber" : 98,
                    "columnNumber" : 26,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);"
                  }
                ]
              },
              {
                "pathId" : "4261-4260-4289-4296-4299-4362-4373-4371-4537-4544-4542-4541-4559-4558-4555-4554-4553-4549-4548",
                "path" : [
                  {
                    "sample" : "order.getBuyer().email",
                    "lineNumber" : 65,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\treturn dao.getOrders();\n\t}\n\n\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email; /* <=== */ \n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n"
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 65,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\treturn dao.getOrders();\n\t}\n\n\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email; /* <=== */ \n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n"
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 71,
                    "columnNumber" : 41,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail); /* <=== */ \n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product);"
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 72,
                    "columnNumber" : 35,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail); /* <=== */ \n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product);\n"
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 73,
                    "columnNumber" : 26,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail); /* <=== */ \n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product);\n\n"
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 94,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\tlogger.error(\"Exception while creating order: \" +\n\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" + /* <=== */ \n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();"
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 96,
                    "columnNumber" : 71,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\t\t\tlogger.error(\"Exception while creating order: \" +\n\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail); /* <=== */ \n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;"
                  },
                  {
                    "sample" : "\"Exception while creating order for \" + buyerEmail",
                    "lineNumber" : 96,
                    "columnNumber" : 32,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\t\t\tlogger.error(\"Exception while creating order: \" +\n\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail); /* <=== */ \n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 147,
                    "columnNumber" : 44,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) { /* <=== */ \n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 148,
                    "columnNumber" : 48,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email; /* <=== */ \n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n"
                  },
                  {
                    "sample" : "\"Payment Failure by\" + email",
                    "lineNumber" : 148,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email; /* <=== */ \n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n"
                  },
                  {
                    "sample" : "issueSummary",
                    "lineNumber" : 148,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email; /* <=== */ \n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n"
                  },
                  {
                    "sample" : "issueSummary",
                    "lineNumber" : 150,
                    "columnNumber" : 28,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build(); /* <=== */ \n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient"
                  },
                  {
                    "sample" : "issueType",
                    "lineNumber" : 150,
                    "columnNumber" : 17,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build(); /* <=== */ \n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient"
                  },
                  {
                    "sample" : "this.projectKey",
                    "lineNumber" : 150,
                    "columnNumber" : 5,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build(); /* <=== */ \n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient"
                  },
                  {
                    "sample" : "$obj5",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, issueType, issueSummary)",
                    "lineNumber" : 149,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {"
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, issueType, issueSummary).build()",
                    "lineNumber" : 149,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {"
                  }
                ]
              },
              {
                "pathId" : "4261-4260-4289-4296-4299-4362-4373-4371-4537-4544-4542-4541-4559-4558-4555-4554-4553-4549-4548-4547-4568-4565-4564-4563-4562",
                "path" : [
                  {
                    "sample" : "order.getBuyer().email",
                    "lineNumber" : 65,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\treturn dao.getOrders();\n\t}\n\n\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email; /* <=== */ \n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n"
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 65,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\treturn dao.getOrders();\n\t}\n\n\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email; /* <=== */ \n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n"
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 71,
                    "columnNumber" : 41,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail); /* <=== */ \n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product);"
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 72,
                    "columnNumber" : 35,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail); /* <=== */ \n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product);\n"
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 73,
                    "columnNumber" : 26,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail); /* <=== */ \n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product);\n\n"
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 94,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\tlogger.error(\"Exception while creating order: \" +\n\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" + /* <=== */ \n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();"
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 96,
                    "columnNumber" : 71,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\t\t\tlogger.error(\"Exception while creating order: \" +\n\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail); /* <=== */ \n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;"
                  },
                  {
                    "sample" : "\"Exception while creating order for \" + buyerEmail",
                    "lineNumber" : 96,
                    "columnNumber" : 32,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\t\t\tlogger.error(\"Exception while creating order: \" +\n\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail); /* <=== */ \n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 147,
                    "columnNumber" : 44,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) { /* <=== */ \n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 148,
                    "columnNumber" : 48,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email; /* <=== */ \n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n"
                  },
                  {
                    "sample" : "\"Payment Failure by\" + email",
                    "lineNumber" : 148,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email; /* <=== */ \n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n"
                  },
                  {
                    "sample" : "issueSummary",
                    "lineNumber" : 148,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email; /* <=== */ \n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n"
                  },
                  {
                    "sample" : "issueSummary",
                    "lineNumber" : 150,
                    "columnNumber" : 28,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build(); /* <=== */ \n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient"
                  },
                  {
                    "sample" : "issueType",
                    "lineNumber" : 150,
                    "columnNumber" : 17,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build(); /* <=== */ \n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient"
                  },
                  {
                    "sample" : "this.projectKey",
                    "lineNumber" : 150,
                    "columnNumber" : 5,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build(); /* <=== */ \n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient"
                  },
                  {
                    "sample" : "$obj5",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, issueType, issueSummary)",
                    "lineNumber" : 149,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {"
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, issueType, issueSummary).build()",
                    "lineNumber" : 149,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {"
                  },
                  {
                    "sample" : "newIssue",
                    "lineNumber" : 149,
                    "columnNumber" : 14,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {"
                  },
                  {
                    "sample" : "newIssue",
                    "lineNumber" : 151,
                    "columnNumber" : 34,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "this.issueClient",
                    "lineNumber" : 151,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue)",
                    "lineNumber" : 151,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue).claim()",
                    "lineNumber" : 151,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue).claim().getKey()",
                    "lineNumber" : 151,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  }
                ]
              },
              {
                "pathId" : "4261-4260-4289-4296-4299-4362-4373-4371-4537-4544-4542-4541-4559-4558-4555-4554-4553-4549-4548-4547-4568-4565-4564-4563-4562-4561-4571-4366-4378-4377-4376-4396-4393-4392-4391-4390",
                "path" : [
                  {
                    "sample" : "order.getBuyer().email",
                    "lineNumber" : 65,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\treturn dao.getOrders();\n\t}\n\n\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email; /* <=== */ \n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n"
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 65,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\treturn dao.getOrders();\n\t}\n\n\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email; /* <=== */ \n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n"
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 71,
                    "columnNumber" : 41,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail); /* <=== */ \n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product);"
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 72,
                    "columnNumber" : 35,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail); /* <=== */ \n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product);\n"
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 73,
                    "columnNumber" : 26,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail); /* <=== */ \n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product);\n\n"
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 94,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\tlogger.error(\"Exception while creating order: \" +\n\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" + /* <=== */ \n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();"
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 96,
                    "columnNumber" : 71,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\t\t\tlogger.error(\"Exception while creating order: \" +\n\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail); /* <=== */ \n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;"
                  },
                  {
                    "sample" : "\"Exception while creating order for \" + buyerEmail",
                    "lineNumber" : 96,
                    "columnNumber" : 32,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\t\t\tlogger.error(\"Exception while creating order: \" +\n\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail); /* <=== */ \n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 147,
                    "columnNumber" : 44,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) { /* <=== */ \n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 148,
                    "columnNumber" : 48,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email; /* <=== */ \n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n"
                  },
                  {
                    "sample" : "\"Payment Failure by\" + email",
                    "lineNumber" : 148,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email; /* <=== */ \n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n"
                  },
                  {
                    "sample" : "issueSummary",
                    "lineNumber" : 148,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email; /* <=== */ \n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n"
                  },
                  {
                    "sample" : "issueSummary",
                    "lineNumber" : 150,
                    "columnNumber" : 28,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build(); /* <=== */ \n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient"
                  },
                  {
                    "sample" : "issueType",
                    "lineNumber" : 150,
                    "columnNumber" : 17,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build(); /* <=== */ \n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient"
                  },
                  {
                    "sample" : "this.projectKey",
                    "lineNumber" : 150,
                    "columnNumber" : 5,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build(); /* <=== */ \n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient"
                  },
                  {
                    "sample" : "$obj5",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, issueType, issueSummary)",
                    "lineNumber" : 149,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {"
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, issueType, issueSummary).build()",
                    "lineNumber" : 149,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {"
                  },
                  {
                    "sample" : "newIssue",
                    "lineNumber" : 149,
                    "columnNumber" : 14,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {"
                  },
                  {
                    "sample" : "newIssue",
                    "lineNumber" : 151,
                    "columnNumber" : 34,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "this.issueClient",
                    "lineNumber" : 151,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue)",
                    "lineNumber" : 151,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue).claim()",
                    "lineNumber" : 151,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue).claim().getKey()",
                    "lineNumber" : 151,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "java.lang.String",
                    "lineNumber" : 147,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) { /* <=== */ \n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}"
                  },
                  {
                    "sample" : "jiraService.createIssue(1l, \"Exception while creating order for \" + buyerEmail)",
                    "lineNumber" : 96,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\t\t\tlogger.error(\"Exception while creating order: \" +\n\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail); /* <=== */ \n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;"
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, 1l, buyerEmail).build()",
                    "lineNumber" : 98,
                    "columnNumber" : 26,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);"
                  },
                  {
                    "sample" : "newIssue",
                    "lineNumber" : 98,
                    "columnNumber" : 15,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);"
                  },
                  {
                    "sample" : "newIssue",
                    "lineNumber" : 100,
                    "columnNumber" : 28,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);\n\t}\n"
                  },
                  {
                    "sample" : "this.issueClient",
                    "lineNumber" : 100,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);\n\t}\n"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue)",
                    "lineNumber" : 100,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);\n\t}\n"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue).claim()",
                    "lineNumber" : 100,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);\n\t}\n"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue).claim().getKey()",
                    "lineNumber" : 100,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);\n\t}\n"
                  }
                ]
              }
            ]
          },
          {
            "sinkType" : "third_parties",
            "id" : "ThirdParties.SDK.Amazonaws",
            "name" : "Amazonaws",
            "category" : "",
            "domains" : [
              "amazonaws.com"
            ],
            "sensitivity" : "",
            "isSensitive" : false,
            "tags" : {
              
            },
            "apiUrl" : [
            ],
            "databaseDetails" : {
              "dbName" : "",
              "dbVendor" : "",
              "dbLocation" : "",
              "dbOperation" : ""
            },
            "paths" : [
              {
                "pathId" : "679-682-684-687-693-715-721-718-5460-380-382-756-764-805-810-816-5474-767-776-887-900-897-894-893-892-902-2763-3017-901-925-932-924-923-922",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 93,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 94,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name); /* <=== */ \n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 97,
                    "columnNumber" : 44,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 106,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 107,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 107,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 106,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 97,
                    "columnNumber" : 27,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 99,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email); /* <=== */ \n\t\t\treturn Boolean.TRUE;\n\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 119,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) { /* <=== */ \n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}"
                  },
                  {
                    "sample" : "this.productRepository",
                    "lineNumber" : 120,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 139,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) { /* <=== */ \n\t\treturn dynamoDBMapper.load(Product.class, productId);\n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 140,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 140,
                    "columnNumber" : 45,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";"
                  },
                  {
                    "sample" : "String productId",
                    "lineNumber" : 139,
                    "columnNumber" : 32,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) { /* <=== */ \n\t\treturn dynamoDBMapper.load(Product.class, productId);\n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 120,
                    "columnNumber" : 54,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 122,
                    "columnNumber" : 53,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email); /* <=== */ \n\t}\n}\n\n\n@Repository"
                  },
                  {
                    "sample" : "String productId",
                    "lineNumber" : 160,
                    "columnNumber" : 41,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) { /* <=== */ \n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\","
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 161,
                    "columnNumber" : 56,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "Product.class",
                    "lineNumber" : 161,
                    "columnNumber" : 41,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 161,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "dynamoDBMapper.load(Product.class, productId)",
                    "lineNumber" : 161,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 161,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 162,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 88,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Product.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "void",
                    "lineNumber" : 89,
                    "columnNumber" : 12,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Product.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "product.setBuyerEmail(email)",
                    "lineNumber" : 162,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 167,
                    "columnNumber" : 38,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "new AttributeValue().withS(productId)",
                    "lineNumber" : 167,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "$obj11",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "new ExpectedAttributeValue(new AttributeValue().withS(productId))",
                    "lineNumber" : 166,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue( /* <=== */ \n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}"
                  }
                ]
              },
              {
                "pathId" : "679-682-684-687-693-715-721-718-5460-380-382-756-764-805-810-816-5474-767-776-887-900-897-894-893",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 93,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 94,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name); /* <=== */ \n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 97,
                    "columnNumber" : 44,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 106,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 107,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 107,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 106,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 97,
                    "columnNumber" : 27,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 99,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email); /* <=== */ \n\t\t\treturn Boolean.TRUE;\n\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 119,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) { /* <=== */ \n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}"
                  },
                  {
                    "sample" : "this.productRepository",
                    "lineNumber" : 120,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 139,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) { /* <=== */ \n\t\treturn dynamoDBMapper.load(Product.class, productId);\n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 140,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 140,
                    "columnNumber" : 45,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";"
                  },
                  {
                    "sample" : "String productId",
                    "lineNumber" : 139,
                    "columnNumber" : 32,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) { /* <=== */ \n\t\treturn dynamoDBMapper.load(Product.class, productId);\n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 120,
                    "columnNumber" : 54,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 122,
                    "columnNumber" : 53,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email); /* <=== */ \n\t}\n}\n\n\n@Repository"
                  },
                  {
                    "sample" : "String productId",
                    "lineNumber" : 160,
                    "columnNumber" : 41,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) { /* <=== */ \n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\","
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 161,
                    "columnNumber" : 56,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "Product.class",
                    "lineNumber" : 161,
                    "columnNumber" : 41,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 161,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "dynamoDBMapper.load(Product.class, productId)",
                    "lineNumber" : 161,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  }
                ]
              },
              {
                "pathId" : "679-682-684-687-693-715-721-718-717",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 93,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 94,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name); /* <=== */ \n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 97,
                    "columnNumber" : 44,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 106,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 107,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 107,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(product)",
                    "lineNumber" : 107,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  }
                ]
              },
              {
                "pathId" : "751-848-854-851-855",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 116,
                    "columnNumber" : 53,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);\n\t}\n\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product); /* <=== */ \n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 148,
                    "columnNumber" : 48,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";\n\t}\n\n\tpublic String updateProduct(String productId, Product product) { /* <=== */ \n\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 150,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn \"Product Id : \"+ productId +\" Deleted!\";\n\t}\n\n\tpublic String updateProduct(String productId, Product product) {\n\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 150,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn \"Product Id : \"+ productId +\" Deleted!\";\n\t}\n\n\tpublic String updateProduct(String productId, Product product) {\n\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  },
                  {
                    "sample" : "new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId)))",
                    "lineNumber" : 151,
                    "columnNumber" : 5,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\tpublic String updateProduct(String productId, Product product) {\n\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression() /* <=== */ \n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;"
                  }
                ]
              },
              {
                "pathId" : "4275-4278-4280-4298-4301-4307-4680-4687-1705-1711-1708-1707",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 68,
                    "columnNumber" : 12,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email;\n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product(); /* <=== */ \n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 68,
                    "columnNumber" : 12,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email;\n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product(); /* <=== */ \n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 69,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email;\n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId()); /* <=== */ \n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 73,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail); /* <=== */ \n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product);\n\n"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 74,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode); /* <=== */ \n\n\t\t\tproductService.saveProduct(product);\n\n\n\t\t\tBuyer buyer = order.getBuyer();"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 76,
                    "columnNumber" : 31,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product); /* <=== */ \n\n\n\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 17,
                    "columnNumber" : 32,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "\n    Logger logger = LoggerFactory.getLogger(ProductService.class);\n    @Autowired\n    private ProductRepository productRepository;\n\n    public Product saveProduct(Product product) { /* <=== */ \n            return productRepository.saveProduct(product);\n    }\n\n    public Product getProductById(String productId) {\n        return productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 18,
                    "columnNumber" : 50,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "    Logger logger = LoggerFactory.getLogger(ProductService.class);\n    @Autowired\n    private ProductRepository productRepository;\n\n    public Product saveProduct(Product product) {\n            return productRepository.saveProduct(product); /* <=== */ \n    }\n\n    public Product getProductById(String productId) {\n        return productRepository.getProductById(productId);\n    }"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 19,
                    "columnNumber" : 32,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "\n\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Product saveProduct(Product product) { /* <=== */ \n        dynamoDBMapper.save(product);\n        return product;\n    }\n\n    public Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 20,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Product saveProduct(Product product) {\n        dynamoDBMapper.save(product); /* <=== */ \n        return product;\n    }\n\n    public Product getProductById(String productId) {\n        return dynamoDBMapper.load(Product.class, productId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 20,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Product saveProduct(Product product) {\n        dynamoDBMapper.save(product); /* <=== */ \n        return product;\n    }\n\n    public Product getProductById(String productId) {\n        return dynamoDBMapper.load(Product.class, productId);"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(product)",
                    "lineNumber" : 20,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Product saveProduct(Product product) {\n        dynamoDBMapper.save(product); /* <=== */ \n        return product;\n    }\n\n    public Product getProductById(String productId) {\n        return dynamoDBMapper.load(Product.class, productId);"
                  }
                ]
              },
              {
                "pathId" : "679-682-684-687-693-715-721-718-5460-380-382-756-764-805-810-816-5474-767-776-887-900-897-894-893-892-902-925-932-924-923-922-918-909-908-905-904",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 93,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 94,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name); /* <=== */ \n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 97,
                    "columnNumber" : 44,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 106,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 107,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 107,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 106,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 97,
                    "columnNumber" : 27,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 99,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email); /* <=== */ \n\t\t\treturn Boolean.TRUE;\n\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 119,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) { /* <=== */ \n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}"
                  },
                  {
                    "sample" : "this.productRepository",
                    "lineNumber" : 120,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 139,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) { /* <=== */ \n\t\treturn dynamoDBMapper.load(Product.class, productId);\n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 140,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 140,
                    "columnNumber" : 45,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";"
                  },
                  {
                    "sample" : "String productId",
                    "lineNumber" : 139,
                    "columnNumber" : 32,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) { /* <=== */ \n\t\treturn dynamoDBMapper.load(Product.class, productId);\n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 120,
                    "columnNumber" : 54,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 122,
                    "columnNumber" : 53,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email); /* <=== */ \n\t}\n}\n\n\n@Repository"
                  },
                  {
                    "sample" : "String productId",
                    "lineNumber" : 160,
                    "columnNumber" : 41,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) { /* <=== */ \n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\","
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 161,
                    "columnNumber" : 56,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "Product.class",
                    "lineNumber" : 161,
                    "columnNumber" : 41,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 161,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "dynamoDBMapper.load(Product.class, productId)",
                    "lineNumber" : 161,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 161,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 162,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 167,
                    "columnNumber" : 38,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "new AttributeValue().withS(productId)",
                    "lineNumber" : 167,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "$obj11",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "new ExpectedAttributeValue(new AttributeValue().withS(productId))",
                    "lineNumber" : 166,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue( /* <=== */ \n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}"
                  },
                  {
                    "sample" : "new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId)))",
                    "lineNumber" : 164,
                    "columnNumber" : 5,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression() /* <=== */ \n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 163,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 163,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(product, new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId))))",
                    "lineNumber" : 163,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  }
                ]
              },
              {
                "pathId" : "3866-3878-1233-1239-1236-1235",
                "path" : [
                  {
                    "sample" : "buyer",
                    "lineNumber" : 30,
                    "columnNumber" : 15,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "    public String updateProduct(String buyerId, Buyer buyer) {\n        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n\n    public String updateProductBuyerEmail(String buyerId, String email) {\n        Buyer buyer = buyerRepository.getBuyerById(buyerId); /* <=== */ \n        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n}"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 31,
                    "columnNumber" : 53,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n\n    public String updateProductBuyerEmail(String buyerId, String email) {\n        Buyer buyer = buyerRepository.getBuyerById(buyerId);\n        return buyerRepository.updateBuyer(buyerId, buyer); /* <=== */ \n    }\n}"
                  },
                  {
                    "sample" : "Buyer buyer",
                    "lineNumber" : 32,
                    "columnNumber" : 47,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "    public String deleteBuyerById(String buyerId) {\n        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) { /* <=== */ \n        dynamoDBMapper.save(buyer,\n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 33,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 33,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(buyer, new DynamoDBSaveExpression().withExpectedEntry(\"buyerId\", new ExpectedAttributeValue(new AttributeValue().withS(buyerId))))",
                    "lineNumber" : 33,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));"
                  }
                ]
              },
              {
                "pathId" : "4726-4733-4741-1761-1767-1764-1768",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 30,
                    "columnNumber" : 17,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "    public String updateProduct(String productId, Product product) {\n        return productRepository.updateProduct(productId, product);\n    }\n\n    public String updateProductBuyerEmail(String productId, String email) {\n        Product product = productRepository.getProductById(productId); /* <=== */ \n        product.setBuyerEmail(email);\n        return productRepository.updateProduct(productId, product);\n    }\n}"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 31,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "        return productRepository.updateProduct(productId, product);\n    }\n\n    public String updateProductBuyerEmail(String productId, String email) {\n        Product product = productRepository.getProductById(productId);\n        product.setBuyerEmail(email); /* <=== */ \n        return productRepository.updateProduct(productId, product);\n    }\n}"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 32,
                    "columnNumber" : 59,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "    }\n\n    public String updateProductBuyerEmail(String productId, String email) {\n        Product product = productRepository.getProductById(productId);\n        product.setBuyerEmail(email);\n        return productRepository.updateProduct(productId, product); /* <=== */ \n    }\n}"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 33,
                    "columnNumber" : 51,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "    public String deleteProductById(String productId) {\n        dynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n        return \"Product Id : \"+ productId +\" Deleted!\";\n    }\n\n    public String updateProduct(String productId, Product product) { /* <=== */ \n        dynamoDBMapper.save(product,\n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"productId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 34,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n        return \"Product Id : \"+ productId +\" Deleted!\";\n    }\n\n    public String updateProduct(String productId, Product product) {\n        dynamoDBMapper.save(product, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"productId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(productId)\n                                )));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 34,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n        return \"Product Id : \"+ productId +\" Deleted!\";\n    }\n\n    public String updateProduct(String productId, Product product) {\n        dynamoDBMapper.save(product, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"productId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(productId)\n                                )));"
                  },
                  {
                    "sample" : "new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId)))",
                    "lineNumber" : 35,
                    "columnNumber" : 17,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "        return \"Product Id : \"+ productId +\" Deleted!\";\n    }\n\n    public String updateProduct(String productId, Product product) {\n        dynamoDBMapper.save(product,\n                new DynamoDBSaveExpression() /* <=== */ \n                        .withExpectedEntry(\"productId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(productId)\n                                )));\n        return productId;"
                  }
                ]
              },
              {
                "pathId" : "751-848-854-851-850",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 116,
                    "columnNumber" : 53,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);\n\t}\n\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product); /* <=== */ \n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 148,
                    "columnNumber" : 48,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";\n\t}\n\n\tpublic String updateProduct(String productId, Product product) { /* <=== */ \n\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 150,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn \"Product Id : \"+ productId +\" Deleted!\";\n\t}\n\n\tpublic String updateProduct(String productId, Product product) {\n\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 150,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn \"Product Id : \"+ productId +\" Deleted!\";\n\t}\n\n\tpublic String updateProduct(String productId, Product product) {\n\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(product, new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId))))",
                    "lineNumber" : 150,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn \"Product Id : \"+ productId +\" Deleted!\";\n\t}\n\n\tpublic String updateProduct(String productId, Product product) {\n\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  }
                ]
              },
              {
                "pathId" : "679-682-684-687-693-715-721-718-5460-380-382-756-764-805-810-816-5474-767-776-887-900-897-894-893-892-902-2763-3017-901-925-932-924",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 93,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 94,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name); /* <=== */ \n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 97,
                    "columnNumber" : 44,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 106,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 107,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 107,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 106,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 97,
                    "columnNumber" : 27,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 99,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email); /* <=== */ \n\t\t\treturn Boolean.TRUE;\n\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 119,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) { /* <=== */ \n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}"
                  },
                  {
                    "sample" : "this.productRepository",
                    "lineNumber" : 120,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 139,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) { /* <=== */ \n\t\treturn dynamoDBMapper.load(Product.class, productId);\n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 140,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 140,
                    "columnNumber" : 45,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";"
                  },
                  {
                    "sample" : "String productId",
                    "lineNumber" : 139,
                    "columnNumber" : 32,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) { /* <=== */ \n\t\treturn dynamoDBMapper.load(Product.class, productId);\n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 120,
                    "columnNumber" : 54,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 122,
                    "columnNumber" : 53,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email); /* <=== */ \n\t}\n}\n\n\n@Repository"
                  },
                  {
                    "sample" : "String productId",
                    "lineNumber" : 160,
                    "columnNumber" : 41,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) { /* <=== */ \n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\","
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 161,
                    "columnNumber" : 56,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "Product.class",
                    "lineNumber" : 161,
                    "columnNumber" : 41,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 161,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "dynamoDBMapper.load(Product.class, productId)",
                    "lineNumber" : 161,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 161,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 162,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 88,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Product.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "void",
                    "lineNumber" : 89,
                    "columnNumber" : 12,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Product.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "product.setBuyerEmail(email)",
                    "lineNumber" : 162,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 167,
                    "columnNumber" : 38,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "new AttributeValue().withS(productId)",
                    "lineNumber" : 167,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  }
                ]
              },
              {
                "pathId" : "679-682-684-687-693-715-721-718-5460-380-382-756-764-805-810-809",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 93,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 94,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name); /* <=== */ \n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 97,
                    "columnNumber" : 44,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 106,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 107,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 107,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 106,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 97,
                    "columnNumber" : 27,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 99,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email); /* <=== */ \n\t\t\treturn Boolean.TRUE;\n\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 119,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) { /* <=== */ \n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}"
                  },
                  {
                    "sample" : "this.productRepository",
                    "lineNumber" : 120,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 139,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) { /* <=== */ \n\t\treturn dynamoDBMapper.load(Product.class, productId);\n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 140,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";"
                  },
                  {
                    "sample" : "dynamoDBMapper.load(Product.class, productId)",
                    "lineNumber" : 140,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";"
                  }
                ]
              },
              {
                "pathId" : "4726-4733-4741-1761-1767-1764-1763",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 30,
                    "columnNumber" : 17,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "    public String updateProduct(String productId, Product product) {\n        return productRepository.updateProduct(productId, product);\n    }\n\n    public String updateProductBuyerEmail(String productId, String email) {\n        Product product = productRepository.getProductById(productId); /* <=== */ \n        product.setBuyerEmail(email);\n        return productRepository.updateProduct(productId, product);\n    }\n}"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 31,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "        return productRepository.updateProduct(productId, product);\n    }\n\n    public String updateProductBuyerEmail(String productId, String email) {\n        Product product = productRepository.getProductById(productId);\n        product.setBuyerEmail(email); /* <=== */ \n        return productRepository.updateProduct(productId, product);\n    }\n}"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 32,
                    "columnNumber" : 59,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "    }\n\n    public String updateProductBuyerEmail(String productId, String email) {\n        Product product = productRepository.getProductById(productId);\n        product.setBuyerEmail(email);\n        return productRepository.updateProduct(productId, product); /* <=== */ \n    }\n}"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 33,
                    "columnNumber" : 51,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "    public String deleteProductById(String productId) {\n        dynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n        return \"Product Id : \"+ productId +\" Deleted!\";\n    }\n\n    public String updateProduct(String productId, Product product) { /* <=== */ \n        dynamoDBMapper.save(product,\n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"productId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 34,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n        return \"Product Id : \"+ productId +\" Deleted!\";\n    }\n\n    public String updateProduct(String productId, Product product) {\n        dynamoDBMapper.save(product, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"productId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(productId)\n                                )));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 34,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n        return \"Product Id : \"+ productId +\" Deleted!\";\n    }\n\n    public String updateProduct(String productId, Product product) {\n        dynamoDBMapper.save(product, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"productId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(productId)\n                                )));"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(product, new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId))))",
                    "lineNumber" : 34,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n        return \"Product Id : \"+ productId +\" Deleted!\";\n    }\n\n    public String updateProduct(String productId, Product product) {\n        dynamoDBMapper.save(product, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"productId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(productId)\n                                )));"
                  }
                ]
              },
              {
                "pathId" : "798-795-794",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 135,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 135,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId);"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(product)",
                    "lineNumber" : 135,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId);"
                  }
                ]
              },
              {
                "pathId" : "3866-3878-1233-1239-1236-1240",
                "path" : [
                  {
                    "sample" : "buyer",
                    "lineNumber" : 30,
                    "columnNumber" : 15,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "    public String updateProduct(String buyerId, Buyer buyer) {\n        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n\n    public String updateProductBuyerEmail(String buyerId, String email) {\n        Buyer buyer = buyerRepository.getBuyerById(buyerId); /* <=== */ \n        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n}"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 31,
                    "columnNumber" : 53,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n\n    public String updateProductBuyerEmail(String buyerId, String email) {\n        Buyer buyer = buyerRepository.getBuyerById(buyerId);\n        return buyerRepository.updateBuyer(buyerId, buyer); /* <=== */ \n    }\n}"
                  },
                  {
                    "sample" : "Buyer buyer",
                    "lineNumber" : 32,
                    "columnNumber" : 47,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "    public String deleteBuyerById(String buyerId) {\n        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) { /* <=== */ \n        dynamoDBMapper.save(buyer,\n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 33,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 33,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));"
                  },
                  {
                    "sample" : "new DynamoDBSaveExpression().withExpectedEntry(\"buyerId\", new ExpectedAttributeValue(new AttributeValue().withS(buyerId)))",
                    "lineNumber" : 34,
                    "columnNumber" : 17,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer,\n                new DynamoDBSaveExpression() /* <=== */ \n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));\n        return buyerId;"
                  }
                ]
              },
              {
                "pathId" : "679-682-684-687-693-715-721-718-5460-380-382-756-764-805-810-816-5474-767-776-887-900-897-894-893-892-902-925-932-924-923-922-918-909",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 93,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 94,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name); /* <=== */ \n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 97,
                    "columnNumber" : 44,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 106,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 107,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 107,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 106,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 97,
                    "columnNumber" : 27,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 99,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email); /* <=== */ \n\t\t\treturn Boolean.TRUE;\n\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 119,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) { /* <=== */ \n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}"
                  },
                  {
                    "sample" : "this.productRepository",
                    "lineNumber" : 120,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 139,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) { /* <=== */ \n\t\treturn dynamoDBMapper.load(Product.class, productId);\n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 140,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 140,
                    "columnNumber" : 45,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";"
                  },
                  {
                    "sample" : "String productId",
                    "lineNumber" : 139,
                    "columnNumber" : 32,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) { /* <=== */ \n\t\treturn dynamoDBMapper.load(Product.class, productId);\n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 120,
                    "columnNumber" : 54,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 122,
                    "columnNumber" : 53,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email); /* <=== */ \n\t}\n}\n\n\n@Repository"
                  },
                  {
                    "sample" : "String productId",
                    "lineNumber" : 160,
                    "columnNumber" : 41,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) { /* <=== */ \n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\","
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 161,
                    "columnNumber" : 56,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "Product.class",
                    "lineNumber" : 161,
                    "columnNumber" : 41,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 161,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "dynamoDBMapper.load(Product.class, productId)",
                    "lineNumber" : 161,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 161,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 162,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 167,
                    "columnNumber" : 38,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "new AttributeValue().withS(productId)",
                    "lineNumber" : 167,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "$obj11",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "new ExpectedAttributeValue(new AttributeValue().withS(productId))",
                    "lineNumber" : 166,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue( /* <=== */ \n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}"
                  },
                  {
                    "sample" : "new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId)))",
                    "lineNumber" : 164,
                    "columnNumber" : 5,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression() /* <=== */ \n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;"
                  }
                ]
              },
              {
                "pathId" : "4330-4333-4341-3820-3827-1177-1183-1180-1179",
                "path" : [
                  {
                    "sample" : "newBuyer",
                    "lineNumber" : 84,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth); /* <=== */ \n\n\n\t\t\tbuyerService.saveProduct(newBuyer);\n\n\t\t}"
                  },
                  {
                    "sample" : "newBuyer",
                    "lineNumber" : 84,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth); /* <=== */ \n\n\n\t\t\tbuyerService.saveProduct(newBuyer);\n\n\t\t}"
                  },
                  {
                    "sample" : "newBuyer",
                    "lineNumber" : 87,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);\n\n\n\t\t\tbuyerService.saveProduct(newBuyer); /* <=== */ \n\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\tlogger.error(\"Exception while creating order: \" +"
                  },
                  {
                    "sample" : "Buyer buyer",
                    "lineNumber" : 17,
                    "columnNumber" : 30,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "\n    Logger logger = LoggerFactory.getLogger(BuyerService.class);\n    @Autowired\n    private BuyerRepository buyerRepository;\n\n    public Buyer saveProduct(Buyer buyer) { /* <=== */ \n            return buyerRepository.saveBuyer(buyer);\n    }\n\n    public Buyer getProductById(String buyerId) {\n        return buyerRepository.getBuyerById(buyerId);"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 18,
                    "columnNumber" : 46,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "    Logger logger = LoggerFactory.getLogger(BuyerService.class);\n    @Autowired\n    private BuyerRepository buyerRepository;\n\n    public Buyer saveProduct(Buyer buyer) {\n            return buyerRepository.saveBuyer(buyer); /* <=== */ \n    }\n\n    public Buyer getProductById(String buyerId) {\n        return buyerRepository.getBuyerById(buyerId);\n    }"
                  },
                  {
                    "sample" : "Buyer buyer",
                    "lineNumber" : 18,
                    "columnNumber" : 28,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) { /* <=== */ \n        dynamoDBMapper.save(buyer);\n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 19,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) {\n        dynamoDBMapper.save(buyer); /* <=== */ \n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 19,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) {\n        dynamoDBMapper.save(buyer); /* <=== */ \n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId);"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(buyer)",
                    "lineNumber" : 19,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) {\n        dynamoDBMapper.save(buyer); /* <=== */ \n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId);"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "sourceId" : "Data.Sensitive.PersonalIdentification.FirstName",
        "sinks" : [
          {
            "sinkType" : "third_parties",
            "id" : "ThirdParties.SDK.Atlassian",
            "name" : "Atlassian",
            "category" : "",
            "domains" : [
              "atlassian.com"
            ],
            "sensitivity" : "",
            "isSensitive" : false,
            "tags" : {
              
            },
            "apiUrl" : [
            ],
            "databaseDetails" : {
              "dbName" : "",
              "dbVendor" : "",
              "dbLocation" : "",
              "dbOperation" : ""
            },
            "paths" : [
              {
                "pathId" : "4310-4317-4322-4327-4326-4325-4336-2521-2529-2496-2528-2530-4332-4378-4377-4376-4396-4393-4392-4391-4390",
                "path" : [
                  {
                    "sample" : "buyer",
                    "lineNumber" : 79,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product);\n\n\n\t\t\tBuyer buyer = order.getBuyer(); /* <=== */ \n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 80,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\t\t\tproductService.saveProduct(product);\n\n\n\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName(); /* <=== */ \n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);\n"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 81,
                    "columnNumber" : 22,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tproductService.saveProduct(product);\n\n\n\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName(); /* <=== */ \n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);\n\n"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 82,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\n\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth(); /* <=== */ \n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);\n\n\n\t\t\tbuyerService.saveProduct(newBuyer);"
                  },
                  {
                    "sample" : "buyer.getDateOfBirth()",
                    "lineNumber" : 82,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\n\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth(); /* <=== */ \n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);\n\n\n\t\t\tbuyerService.saveProduct(newBuyer);"
                  },
                  {
                    "sample" : "dateOfBirth",
                    "lineNumber" : 82,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\n\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth(); /* <=== */ \n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);\n\n\n\t\t\tbuyerService.saveProduct(newBuyer);"
                  },
                  {
                    "sample" : "dateOfBirth",
                    "lineNumber" : 84,
                    "columnNumber" : 52,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth); /* <=== */ \n\n\n\t\t\tbuyerService.saveProduct(newBuyer);\n\n\t\t}"
                  },
                  {
                    "sample" : "String dateOfBirth",
                    "lineNumber" : 6,
                    "columnNumber" : 53,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Buyer.java",
                    "excerpt" : "package com.analytics.analytics.entity;\n\npublic class Buyer extends User {\n\n\n    public Buyer(String firstName, String lastName, String dateOfBirth) { /* <=== */ \n        super();\n        this.setFirstName(firstName);\n        this.setLastName(lastName);\n        this.setDateOfBirth(dateOfBirth);\n    }"
                  },
                  {
                    "sample" : "dateOfBirth",
                    "lineNumber" : 10,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Buyer.java",
                    "excerpt" : "\n    public Buyer(String firstName, String lastName, String dateOfBirth) {\n        super();\n        this.setFirstName(firstName);\n        this.setLastName(lastName);\n        this.setDateOfBirth(dateOfBirth); /* <=== */ \n    }\n}"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 10,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Buyer.java",
                    "excerpt" : "\n    public Buyer(String firstName, String lastName, String dateOfBirth) {\n        super();\n        this.setFirstName(firstName);\n        this.setLastName(lastName);\n        this.setDateOfBirth(dateOfBirth); /* <=== */ \n    }\n}"
                  },
                  {
                    "sample" : "this.setDateOfBirth(dateOfBirth)",
                    "lineNumber" : 10,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Buyer.java",
                    "excerpt" : "\n    public Buyer(String firstName, String lastName, String dateOfBirth) {\n        super();\n        this.setFirstName(firstName);\n        this.setLastName(lastName);\n        this.setDateOfBirth(dateOfBirth); /* <=== */ \n    }\n}"
                  },
                  {
                    "sample" : "void",
                    "lineNumber" : 11,
                    "columnNumber" : 5,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Buyer.java",
                    "excerpt" : "    public Buyer(String firstName, String lastName, String dateOfBirth) {\n        super();\n        this.setFirstName(firstName);\n        this.setLastName(lastName);\n        this.setDateOfBirth(dateOfBirth);\n    } /* <=== */ \n}"
                  },
                  {
                    "sample" : "new Buyer(firstName, lastName, dateOfBirth)",
                    "lineNumber" : 84,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth); /* <=== */ \n\n\n\t\t\tbuyerService.saveProduct(newBuyer);\n\n\t\t}"
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, 1l, buyerEmail).build()",
                    "lineNumber" : 98,
                    "columnNumber" : 26,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);"
                  },
                  {
                    "sample" : "newIssue",
                    "lineNumber" : 98,
                    "columnNumber" : 15,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);"
                  },
                  {
                    "sample" : "newIssue",
                    "lineNumber" : 100,
                    "columnNumber" : 28,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);\n\t}\n"
                  },
                  {
                    "sample" : "this.issueClient",
                    "lineNumber" : 100,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);\n\t}\n"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue)",
                    "lineNumber" : 100,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);\n\t}\n"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue).claim()",
                    "lineNumber" : 100,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);\n\t}\n"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue).claim().getKey()",
                    "lineNumber" : 100,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);\n\t}\n"
                  }
                ]
              },
              {
                "pathId" : "4330-4333-4341-3820-3827-1177-1183-1184-1188-3823-3822-3830-4337-4378-4377",
                "path" : [
                  {
                    "sample" : "newBuyer",
                    "lineNumber" : 84,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth); /* <=== */ \n\n\n\t\t\tbuyerService.saveProduct(newBuyer);\n\n\t\t}"
                  },
                  {
                    "sample" : "newBuyer",
                    "lineNumber" : 84,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth); /* <=== */ \n\n\n\t\t\tbuyerService.saveProduct(newBuyer);\n\n\t\t}"
                  },
                  {
                    "sample" : "newBuyer",
                    "lineNumber" : 87,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);\n\n\n\t\t\tbuyerService.saveProduct(newBuyer); /* <=== */ \n\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\tlogger.error(\"Exception while creating order: \" +"
                  },
                  {
                    "sample" : "Buyer buyer",
                    "lineNumber" : 17,
                    "columnNumber" : 30,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "\n    Logger logger = LoggerFactory.getLogger(BuyerService.class);\n    @Autowired\n    private BuyerRepository buyerRepository;\n\n    public Buyer saveProduct(Buyer buyer) { /* <=== */ \n            return buyerRepository.saveBuyer(buyer);\n    }\n\n    public Buyer getProductById(String buyerId) {\n        return buyerRepository.getBuyerById(buyerId);"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 18,
                    "columnNumber" : 46,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "    Logger logger = LoggerFactory.getLogger(BuyerService.class);\n    @Autowired\n    private BuyerRepository buyerRepository;\n\n    public Buyer saveProduct(Buyer buyer) {\n            return buyerRepository.saveBuyer(buyer); /* <=== */ \n    }\n\n    public Buyer getProductById(String buyerId) {\n        return buyerRepository.getBuyerById(buyerId);\n    }"
                  },
                  {
                    "sample" : "Buyer buyer",
                    "lineNumber" : 18,
                    "columnNumber" : 28,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) { /* <=== */ \n        dynamoDBMapper.save(buyer);\n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 19,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) {\n        dynamoDBMapper.save(buyer); /* <=== */ \n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId);"
                  },
                  {
                    "sample" : "com.analytics.analytics.entity.Buyer",
                    "lineNumber" : 18,
                    "columnNumber" : 12,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) { /* <=== */ \n        dynamoDBMapper.save(buyer);\n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {"
                  },
                  {
                    "sample" : "buyerRepository.saveBuyer(buyer)",
                    "lineNumber" : 18,
                    "columnNumber" : 20,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "    Logger logger = LoggerFactory.getLogger(BuyerService.class);\n    @Autowired\n    private BuyerRepository buyerRepository;\n\n    public Buyer saveProduct(Buyer buyer) {\n            return buyerRepository.saveBuyer(buyer); /* <=== */ \n    }\n\n    public Buyer getProductById(String buyerId) {\n        return buyerRepository.getBuyerById(buyerId);\n    }"
                  },
                  {
                    "sample" : "com.analytics.analytics.entity.Buyer",
                    "lineNumber" : 17,
                    "columnNumber" : 12,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "\n    Logger logger = LoggerFactory.getLogger(BuyerService.class);\n    @Autowired\n    private BuyerRepository buyerRepository;\n\n    public Buyer saveProduct(Buyer buyer) { /* <=== */ \n            return buyerRepository.saveBuyer(buyer);\n    }\n\n    public Buyer getProductById(String buyerId) {\n        return buyerRepository.getBuyerById(buyerId);"
                  },
                  {
                    "sample" : "buyerService.saveProduct(newBuyer)",
                    "lineNumber" : 87,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);\n\n\n\t\t\tbuyerService.saveProduct(newBuyer); /* <=== */ \n\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\tlogger.error(\"Exception while creating order: \" +"
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, 1l, buyerEmail).build()",
                    "lineNumber" : 98,
                    "columnNumber" : 26,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);"
                  }
                ]
              }
            ]
          },
          {
            "sinkType" : "third_parties",
            "id" : "ThirdParties.SDK.Amazonaws",
            "name" : "Amazonaws",
            "category" : "",
            "domains" : [
              "amazonaws.com"
            ],
            "sensitivity" : "",
            "isSensitive" : false,
            "tags" : {
              
            },
            "apiUrl" : [
            ],
            "databaseDetails" : {
              "dbName" : "",
              "dbVendor" : "",
              "dbLocation" : "",
              "dbOperation" : ""
            },
            "paths" : [
              {
                "pathId" : "497-504-509-508-507-536-673-685-701-758-770-777-888-903-3005-3010-3008-3017-901-925-932-924-923-922",
                "path" : [
                  {
                    "sample" : "buyer",
                    "lineNumber" : 49,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\t\n\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer(); /* <=== */ \n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 50,
                    "columnNumber" : 22,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\n\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName(); /* <=== */ \n\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 51,
                    "columnNumber" : 18,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "buyer.getEmail()",
                    "lineNumber" : 51,
                    "columnNumber" : 18,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 51,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 56,
                    "columnNumber" : 66,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName); /* <=== */ \n\n\t\treturn new ResponseEntity<Order>(item, HttpStatus.OK);\n\t\t\n\t}\n\t"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 91,
                    "columnNumber" : 47,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) { /* <=== */ \n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 93,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 99,
                    "columnNumber" : 43,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email); /* <=== */ \n\t\t\treturn Boolean.TRUE;\n\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 119,
                    "columnNumber" : 58,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) { /* <=== */ \n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 121,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n\n"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 122,
                    "columnNumber" : 64,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email); /* <=== */ \n\t}\n}\n\n\n@Repository"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 160,
                    "columnNumber" : 59,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) { /* <=== */ \n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\","
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 162,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "final String buyerEmail",
                    "lineNumber" : 89,
                    "columnNumber" : 31,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Product.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 90,
                    "columnNumber" : 27,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Product.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "this.buyerEmail",
                    "lineNumber" : 90,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Product.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "void",
                    "lineNumber" : 89,
                    "columnNumber" : 12,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Product.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "product.setBuyerEmail(email)",
                    "lineNumber" : 162,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 167,
                    "columnNumber" : 38,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "new AttributeValue().withS(productId)",
                    "lineNumber" : 167,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "$obj11",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "new ExpectedAttributeValue(new AttributeValue().withS(productId))",
                    "lineNumber" : 166,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue( /* <=== */ \n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}"
                  }
                ]
              },
              {
                "pathId" : "497-504-509-508-507-536-673-685-701-758-770-777-888-903-3005-3010-3008-3017-901-925-932-924",
                "path" : [
                  {
                    "sample" : "buyer",
                    "lineNumber" : 49,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\t\n\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer(); /* <=== */ \n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 50,
                    "columnNumber" : 22,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\n\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName(); /* <=== */ \n\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 51,
                    "columnNumber" : 18,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "buyer.getEmail()",
                    "lineNumber" : 51,
                    "columnNumber" : 18,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 51,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 56,
                    "columnNumber" : 66,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName); /* <=== */ \n\n\t\treturn new ResponseEntity<Order>(item, HttpStatus.OK);\n\t\t\n\t}\n\t"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 91,
                    "columnNumber" : 47,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) { /* <=== */ \n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 93,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 99,
                    "columnNumber" : 43,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email); /* <=== */ \n\t\t\treturn Boolean.TRUE;\n\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 119,
                    "columnNumber" : 58,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) { /* <=== */ \n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 121,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n\n"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 122,
                    "columnNumber" : 64,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email); /* <=== */ \n\t}\n}\n\n\n@Repository"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 160,
                    "columnNumber" : 59,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) { /* <=== */ \n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\","
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 162,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "final String buyerEmail",
                    "lineNumber" : 89,
                    "columnNumber" : 31,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Product.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 90,
                    "columnNumber" : 27,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Product.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "this.buyerEmail",
                    "lineNumber" : 90,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Product.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "void",
                    "lineNumber" : 89,
                    "columnNumber" : 12,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Product.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "product.setBuyerEmail(email)",
                    "lineNumber" : 162,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 167,
                    "columnNumber" : 38,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "new AttributeValue().withS(productId)",
                    "lineNumber" : 167,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  }
                ]
              },
              {
                "pathId" : "497-504-509-508-507-536-673-685-701-758-770-777-888-903-925-932-924-923-922-918-909-908-905-904",
                "path" : [
                  {
                    "sample" : "buyer",
                    "lineNumber" : 49,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\t\n\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer(); /* <=== */ \n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 50,
                    "columnNumber" : 22,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\n\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName(); /* <=== */ \n\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 51,
                    "columnNumber" : 18,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "buyer.getEmail()",
                    "lineNumber" : 51,
                    "columnNumber" : 18,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 51,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 56,
                    "columnNumber" : 66,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName); /* <=== */ \n\n\t\treturn new ResponseEntity<Order>(item, HttpStatus.OK);\n\t\t\n\t}\n\t"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 91,
                    "columnNumber" : 47,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) { /* <=== */ \n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 93,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 99,
                    "columnNumber" : 43,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email); /* <=== */ \n\t\t\treturn Boolean.TRUE;\n\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 119,
                    "columnNumber" : 58,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) { /* <=== */ \n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 121,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n\n"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 122,
                    "columnNumber" : 64,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email); /* <=== */ \n\t}\n}\n\n\n@Repository"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 160,
                    "columnNumber" : 59,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) { /* <=== */ \n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\","
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 162,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 167,
                    "columnNumber" : 38,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "new AttributeValue().withS(productId)",
                    "lineNumber" : 167,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "$obj11",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "new ExpectedAttributeValue(new AttributeValue().withS(productId))",
                    "lineNumber" : 166,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue( /* <=== */ \n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}"
                  },
                  {
                    "sample" : "new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId)))",
                    "lineNumber" : 164,
                    "columnNumber" : 5,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression() /* <=== */ \n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 163,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 163,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(product, new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId))))",
                    "lineNumber" : 163,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  }
                ]
              },
              {
                "pathId" : "3866-3878-1233-1239-1236-1235",
                "path" : [
                  {
                    "sample" : "buyer",
                    "lineNumber" : 30,
                    "columnNumber" : 15,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "    public String updateProduct(String buyerId, Buyer buyer) {\n        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n\n    public String updateProductBuyerEmail(String buyerId, String email) {\n        Buyer buyer = buyerRepository.getBuyerById(buyerId); /* <=== */ \n        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n}"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 31,
                    "columnNumber" : 53,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n\n    public String updateProductBuyerEmail(String buyerId, String email) {\n        Buyer buyer = buyerRepository.getBuyerById(buyerId);\n        return buyerRepository.updateBuyer(buyerId, buyer); /* <=== */ \n    }\n}"
                  },
                  {
                    "sample" : "Buyer buyer",
                    "lineNumber" : 32,
                    "columnNumber" : 47,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "    public String deleteBuyerById(String buyerId) {\n        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) { /* <=== */ \n        dynamoDBMapper.save(buyer,\n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 33,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 33,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(buyer, new DynamoDBSaveExpression().withExpectedEntry(\"buyerId\", new ExpectedAttributeValue(new AttributeValue().withS(buyerId))))",
                    "lineNumber" : 33,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));"
                  }
                ]
              },
              {
                "pathId" : "3866-3878-1233-1239-1236-1240",
                "path" : [
                  {
                    "sample" : "buyer",
                    "lineNumber" : 30,
                    "columnNumber" : 15,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "    public String updateProduct(String buyerId, Buyer buyer) {\n        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n\n    public String updateProductBuyerEmail(String buyerId, String email) {\n        Buyer buyer = buyerRepository.getBuyerById(buyerId); /* <=== */ \n        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n}"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 31,
                    "columnNumber" : 53,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n\n    public String updateProductBuyerEmail(String buyerId, String email) {\n        Buyer buyer = buyerRepository.getBuyerById(buyerId);\n        return buyerRepository.updateBuyer(buyerId, buyer); /* <=== */ \n    }\n}"
                  },
                  {
                    "sample" : "Buyer buyer",
                    "lineNumber" : 32,
                    "columnNumber" : 47,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "    public String deleteBuyerById(String buyerId) {\n        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) { /* <=== */ \n        dynamoDBMapper.save(buyer,\n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 33,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 33,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));"
                  },
                  {
                    "sample" : "new DynamoDBSaveExpression().withExpectedEntry(\"buyerId\", new ExpectedAttributeValue(new AttributeValue().withS(buyerId)))",
                    "lineNumber" : 34,
                    "columnNumber" : 17,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer,\n                new DynamoDBSaveExpression() /* <=== */ \n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));\n        return buyerId;"
                  }
                ]
              },
              {
                "pathId" : "497-504-509-508-507-536-673-685-701-758-770-777-888-903-925-932-924-923-922-918-909",
                "path" : [
                  {
                    "sample" : "buyer",
                    "lineNumber" : 49,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\t\n\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer(); /* <=== */ \n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 50,
                    "columnNumber" : 22,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\n\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName(); /* <=== */ \n\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 51,
                    "columnNumber" : 18,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "buyer.getEmail()",
                    "lineNumber" : 51,
                    "columnNumber" : 18,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 51,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 56,
                    "columnNumber" : 66,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName); /* <=== */ \n\n\t\treturn new ResponseEntity<Order>(item, HttpStatus.OK);\n\t\t\n\t}\n\t"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 91,
                    "columnNumber" : 47,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) { /* <=== */ \n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 93,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 99,
                    "columnNumber" : 43,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email); /* <=== */ \n\t\t\treturn Boolean.TRUE;\n\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 119,
                    "columnNumber" : 58,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) { /* <=== */ \n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 121,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n\n"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 122,
                    "columnNumber" : 64,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email); /* <=== */ \n\t}\n}\n\n\n@Repository"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 160,
                    "columnNumber" : 59,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) { /* <=== */ \n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\","
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 162,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 167,
                    "columnNumber" : 38,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "new AttributeValue().withS(productId)",
                    "lineNumber" : 167,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "$obj11",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "new ExpectedAttributeValue(new AttributeValue().withS(productId))",
                    "lineNumber" : 166,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue( /* <=== */ \n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}"
                  },
                  {
                    "sample" : "new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId)))",
                    "lineNumber" : 164,
                    "columnNumber" : 5,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression() /* <=== */ \n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;"
                  }
                ]
              },
              {
                "pathId" : "4330-4333-4341-3820-3827-1177-1183-1180-1179",
                "path" : [
                  {
                    "sample" : "newBuyer",
                    "lineNumber" : 84,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth); /* <=== */ \n\n\n\t\t\tbuyerService.saveProduct(newBuyer);\n\n\t\t}"
                  },
                  {
                    "sample" : "newBuyer",
                    "lineNumber" : 84,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth); /* <=== */ \n\n\n\t\t\tbuyerService.saveProduct(newBuyer);\n\n\t\t}"
                  },
                  {
                    "sample" : "newBuyer",
                    "lineNumber" : 87,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);\n\n\n\t\t\tbuyerService.saveProduct(newBuyer); /* <=== */ \n\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\tlogger.error(\"Exception while creating order: \" +"
                  },
                  {
                    "sample" : "Buyer buyer",
                    "lineNumber" : 17,
                    "columnNumber" : 30,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "\n    Logger logger = LoggerFactory.getLogger(BuyerService.class);\n    @Autowired\n    private BuyerRepository buyerRepository;\n\n    public Buyer saveProduct(Buyer buyer) { /* <=== */ \n            return buyerRepository.saveBuyer(buyer);\n    }\n\n    public Buyer getProductById(String buyerId) {\n        return buyerRepository.getBuyerById(buyerId);"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 18,
                    "columnNumber" : 46,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "    Logger logger = LoggerFactory.getLogger(BuyerService.class);\n    @Autowired\n    private BuyerRepository buyerRepository;\n\n    public Buyer saveProduct(Buyer buyer) {\n            return buyerRepository.saveBuyer(buyer); /* <=== */ \n    }\n\n    public Buyer getProductById(String buyerId) {\n        return buyerRepository.getBuyerById(buyerId);\n    }"
                  },
                  {
                    "sample" : "Buyer buyer",
                    "lineNumber" : 18,
                    "columnNumber" : 28,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) { /* <=== */ \n        dynamoDBMapper.save(buyer);\n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 19,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) {\n        dynamoDBMapper.save(buyer); /* <=== */ \n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 19,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) {\n        dynamoDBMapper.save(buyer); /* <=== */ \n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId);"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(buyer)",
                    "lineNumber" : 19,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) {\n        dynamoDBMapper.save(buyer); /* <=== */ \n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId);"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "sourceId" : "Data.Sensitive.PersonalIdentification.DateofBirth",
        "sinks" : [
          {
            "sinkType" : "third_parties",
            "id" : "ThirdParties.SDK.Atlassian",
            "name" : "Atlassian",
            "category" : "",
            "domains" : [
              "atlassian.com"
            ],
            "sensitivity" : "",
            "isSensitive" : false,
            "tags" : {
              
            },
            "apiUrl" : [
            ],
            "databaseDetails" : {
              "dbName" : "",
              "dbVendor" : "",
              "dbLocation" : "",
              "dbOperation" : ""
            },
            "paths" : [
              {
                "pathId" : "4310-4317-4322-4327-4326-4325-4336-2521-2529-2496-2528-2530-4332-4378-4377-4376-4396-4393-4392-4391-4390",
                "path" : [
                  {
                    "sample" : "buyer",
                    "lineNumber" : 79,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product);\n\n\n\t\t\tBuyer buyer = order.getBuyer(); /* <=== */ \n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 80,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\t\t\tproductService.saveProduct(product);\n\n\n\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName(); /* <=== */ \n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);\n"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 81,
                    "columnNumber" : 22,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tproductService.saveProduct(product);\n\n\n\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName(); /* <=== */ \n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);\n\n"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 82,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\n\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth(); /* <=== */ \n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);\n\n\n\t\t\tbuyerService.saveProduct(newBuyer);"
                  },
                  {
                    "sample" : "buyer.getDateOfBirth()",
                    "lineNumber" : 82,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\n\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth(); /* <=== */ \n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);\n\n\n\t\t\tbuyerService.saveProduct(newBuyer);"
                  },
                  {
                    "sample" : "dateOfBirth",
                    "lineNumber" : 82,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\n\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth(); /* <=== */ \n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);\n\n\n\t\t\tbuyerService.saveProduct(newBuyer);"
                  },
                  {
                    "sample" : "dateOfBirth",
                    "lineNumber" : 84,
                    "columnNumber" : 52,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth); /* <=== */ \n\n\n\t\t\tbuyerService.saveProduct(newBuyer);\n\n\t\t}"
                  },
                  {
                    "sample" : "String dateOfBirth",
                    "lineNumber" : 6,
                    "columnNumber" : 53,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Buyer.java",
                    "excerpt" : "package com.analytics.analytics.entity;\n\npublic class Buyer extends User {\n\n\n    public Buyer(String firstName, String lastName, String dateOfBirth) { /* <=== */ \n        super();\n        this.setFirstName(firstName);\n        this.setLastName(lastName);\n        this.setDateOfBirth(dateOfBirth);\n    }"
                  },
                  {
                    "sample" : "dateOfBirth",
                    "lineNumber" : 10,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Buyer.java",
                    "excerpt" : "\n    public Buyer(String firstName, String lastName, String dateOfBirth) {\n        super();\n        this.setFirstName(firstName);\n        this.setLastName(lastName);\n        this.setDateOfBirth(dateOfBirth); /* <=== */ \n    }\n}"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 10,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Buyer.java",
                    "excerpt" : "\n    public Buyer(String firstName, String lastName, String dateOfBirth) {\n        super();\n        this.setFirstName(firstName);\n        this.setLastName(lastName);\n        this.setDateOfBirth(dateOfBirth); /* <=== */ \n    }\n}"
                  },
                  {
                    "sample" : "this.setDateOfBirth(dateOfBirth)",
                    "lineNumber" : 10,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Buyer.java",
                    "excerpt" : "\n    public Buyer(String firstName, String lastName, String dateOfBirth) {\n        super();\n        this.setFirstName(firstName);\n        this.setLastName(lastName);\n        this.setDateOfBirth(dateOfBirth); /* <=== */ \n    }\n}"
                  },
                  {
                    "sample" : "void",
                    "lineNumber" : 11,
                    "columnNumber" : 5,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Buyer.java",
                    "excerpt" : "    public Buyer(String firstName, String lastName, String dateOfBirth) {\n        super();\n        this.setFirstName(firstName);\n        this.setLastName(lastName);\n        this.setDateOfBirth(dateOfBirth);\n    } /* <=== */ \n}"
                  },
                  {
                    "sample" : "new Buyer(firstName, lastName, dateOfBirth)",
                    "lineNumber" : 84,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth); /* <=== */ \n\n\n\t\t\tbuyerService.saveProduct(newBuyer);\n\n\t\t}"
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, 1l, buyerEmail).build()",
                    "lineNumber" : 98,
                    "columnNumber" : 26,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);"
                  },
                  {
                    "sample" : "newIssue",
                    "lineNumber" : 98,
                    "columnNumber" : 15,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);"
                  },
                  {
                    "sample" : "newIssue",
                    "lineNumber" : 100,
                    "columnNumber" : 28,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);\n\t}\n"
                  },
                  {
                    "sample" : "this.issueClient",
                    "lineNumber" : 100,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);\n\t}\n"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue)",
                    "lineNumber" : 100,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);\n\t}\n"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue).claim()",
                    "lineNumber" : 100,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);\n\t}\n"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue).claim().getKey()",
                    "lineNumber" : 100,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);\n\t}\n"
                  }
                ]
              },
              {
                "pathId" : "4330-4333-4341-3820-3827-1177-1183-1184-1188-3823-3822-3830-4337-4378-4377",
                "path" : [
                  {
                    "sample" : "newBuyer",
                    "lineNumber" : 84,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth); /* <=== */ \n\n\n\t\t\tbuyerService.saveProduct(newBuyer);\n\n\t\t}"
                  },
                  {
                    "sample" : "newBuyer",
                    "lineNumber" : 84,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth); /* <=== */ \n\n\n\t\t\tbuyerService.saveProduct(newBuyer);\n\n\t\t}"
                  },
                  {
                    "sample" : "newBuyer",
                    "lineNumber" : 87,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);\n\n\n\t\t\tbuyerService.saveProduct(newBuyer); /* <=== */ \n\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\tlogger.error(\"Exception while creating order: \" +"
                  },
                  {
                    "sample" : "Buyer buyer",
                    "lineNumber" : 17,
                    "columnNumber" : 30,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "\n    Logger logger = LoggerFactory.getLogger(BuyerService.class);\n    @Autowired\n    private BuyerRepository buyerRepository;\n\n    public Buyer saveProduct(Buyer buyer) { /* <=== */ \n            return buyerRepository.saveBuyer(buyer);\n    }\n\n    public Buyer getProductById(String buyerId) {\n        return buyerRepository.getBuyerById(buyerId);"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 18,
                    "columnNumber" : 46,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "    Logger logger = LoggerFactory.getLogger(BuyerService.class);\n    @Autowired\n    private BuyerRepository buyerRepository;\n\n    public Buyer saveProduct(Buyer buyer) {\n            return buyerRepository.saveBuyer(buyer); /* <=== */ \n    }\n\n    public Buyer getProductById(String buyerId) {\n        return buyerRepository.getBuyerById(buyerId);\n    }"
                  },
                  {
                    "sample" : "Buyer buyer",
                    "lineNumber" : 18,
                    "columnNumber" : 28,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) { /* <=== */ \n        dynamoDBMapper.save(buyer);\n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 19,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) {\n        dynamoDBMapper.save(buyer); /* <=== */ \n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId);"
                  },
                  {
                    "sample" : "com.analytics.analytics.entity.Buyer",
                    "lineNumber" : 18,
                    "columnNumber" : 12,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) { /* <=== */ \n        dynamoDBMapper.save(buyer);\n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {"
                  },
                  {
                    "sample" : "buyerRepository.saveBuyer(buyer)",
                    "lineNumber" : 18,
                    "columnNumber" : 20,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "    Logger logger = LoggerFactory.getLogger(BuyerService.class);\n    @Autowired\n    private BuyerRepository buyerRepository;\n\n    public Buyer saveProduct(Buyer buyer) {\n            return buyerRepository.saveBuyer(buyer); /* <=== */ \n    }\n\n    public Buyer getProductById(String buyerId) {\n        return buyerRepository.getBuyerById(buyerId);\n    }"
                  },
                  {
                    "sample" : "com.analytics.analytics.entity.Buyer",
                    "lineNumber" : 17,
                    "columnNumber" : 12,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "\n    Logger logger = LoggerFactory.getLogger(BuyerService.class);\n    @Autowired\n    private BuyerRepository buyerRepository;\n\n    public Buyer saveProduct(Buyer buyer) { /* <=== */ \n            return buyerRepository.saveBuyer(buyer);\n    }\n\n    public Buyer getProductById(String buyerId) {\n        return buyerRepository.getBuyerById(buyerId);"
                  },
                  {
                    "sample" : "buyerService.saveProduct(newBuyer)",
                    "lineNumber" : 87,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);\n\n\n\t\t\tbuyerService.saveProduct(newBuyer); /* <=== */ \n\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\tlogger.error(\"Exception while creating order: \" +"
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, 1l, buyerEmail).build()",
                    "lineNumber" : 98,
                    "columnNumber" : 26,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);"
                  }
                ]
              }
            ]
          },
          {
            "sinkType" : "third_parties",
            "id" : "ThirdParties.SDK.Amazonaws",
            "name" : "Amazonaws",
            "category" : "",
            "domains" : [
              "amazonaws.com"
            ],
            "sensitivity" : "",
            "isSensitive" : false,
            "tags" : {
              
            },
            "apiUrl" : [
            ],
            "databaseDetails" : {
              "dbName" : "",
              "dbVendor" : "",
              "dbLocation" : "",
              "dbOperation" : ""
            },
            "paths" : [
              {
                "pathId" : "497-504-509-508-507-536-673-685-701-758-770-777-888-903-3005-3010-3008-3017-901-925-932-924-923-922",
                "path" : [
                  {
                    "sample" : "buyer",
                    "lineNumber" : 49,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\t\n\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer(); /* <=== */ \n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 50,
                    "columnNumber" : 22,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\n\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName(); /* <=== */ \n\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 51,
                    "columnNumber" : 18,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "buyer.getEmail()",
                    "lineNumber" : 51,
                    "columnNumber" : 18,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 51,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 56,
                    "columnNumber" : 66,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName); /* <=== */ \n\n\t\treturn new ResponseEntity<Order>(item, HttpStatus.OK);\n\t\t\n\t}\n\t"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 91,
                    "columnNumber" : 47,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) { /* <=== */ \n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 93,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 99,
                    "columnNumber" : 43,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email); /* <=== */ \n\t\t\treturn Boolean.TRUE;\n\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 119,
                    "columnNumber" : 58,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) { /* <=== */ \n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 121,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n\n"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 122,
                    "columnNumber" : 64,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email); /* <=== */ \n\t}\n}\n\n\n@Repository"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 160,
                    "columnNumber" : 59,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) { /* <=== */ \n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\","
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 162,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "final String buyerEmail",
                    "lineNumber" : 89,
                    "columnNumber" : 31,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Product.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 90,
                    "columnNumber" : 27,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Product.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "this.buyerEmail",
                    "lineNumber" : 90,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Product.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "void",
                    "lineNumber" : 89,
                    "columnNumber" : 12,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Product.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "product.setBuyerEmail(email)",
                    "lineNumber" : 162,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 167,
                    "columnNumber" : 38,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "new AttributeValue().withS(productId)",
                    "lineNumber" : 167,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "$obj11",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "new ExpectedAttributeValue(new AttributeValue().withS(productId))",
                    "lineNumber" : 166,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue( /* <=== */ \n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}"
                  }
                ]
              },
              {
                "pathId" : "497-504-509-508-507-536-673-685-701-758-770-777-888-903-3005-3010-3008-3017-901-925-932-924",
                "path" : [
                  {
                    "sample" : "buyer",
                    "lineNumber" : 49,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\t\n\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer(); /* <=== */ \n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 50,
                    "columnNumber" : 22,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\n\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName(); /* <=== */ \n\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 51,
                    "columnNumber" : 18,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "buyer.getEmail()",
                    "lineNumber" : 51,
                    "columnNumber" : 18,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 51,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 56,
                    "columnNumber" : 66,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName); /* <=== */ \n\n\t\treturn new ResponseEntity<Order>(item, HttpStatus.OK);\n\t\t\n\t}\n\t"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 91,
                    "columnNumber" : 47,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) { /* <=== */ \n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 93,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 99,
                    "columnNumber" : 43,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email); /* <=== */ \n\t\t\treturn Boolean.TRUE;\n\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 119,
                    "columnNumber" : 58,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) { /* <=== */ \n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 121,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n\n"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 122,
                    "columnNumber" : 64,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email); /* <=== */ \n\t}\n}\n\n\n@Repository"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 160,
                    "columnNumber" : 59,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) { /* <=== */ \n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\","
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 162,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "final String buyerEmail",
                    "lineNumber" : 89,
                    "columnNumber" : 31,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Product.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "buyerEmail",
                    "lineNumber" : 90,
                    "columnNumber" : 27,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Product.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "this.buyerEmail",
                    "lineNumber" : 90,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Product.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "void",
                    "lineNumber" : 89,
                    "columnNumber" : 12,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Product.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "product.setBuyerEmail(email)",
                    "lineNumber" : 162,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 167,
                    "columnNumber" : 38,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "new AttributeValue().withS(productId)",
                    "lineNumber" : 167,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  }
                ]
              },
              {
                "pathId" : "497-504-509-508-507-536-673-685-701-758-770-777-888-903-925-932-924-923-922-918-909-908-905-904",
                "path" : [
                  {
                    "sample" : "buyer",
                    "lineNumber" : 49,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\t\n\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer(); /* <=== */ \n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 50,
                    "columnNumber" : 22,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\n\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName(); /* <=== */ \n\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 51,
                    "columnNumber" : 18,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "buyer.getEmail()",
                    "lineNumber" : 51,
                    "columnNumber" : 18,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 51,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 56,
                    "columnNumber" : 66,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName); /* <=== */ \n\n\t\treturn new ResponseEntity<Order>(item, HttpStatus.OK);\n\t\t\n\t}\n\t"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 91,
                    "columnNumber" : 47,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) { /* <=== */ \n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 93,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 99,
                    "columnNumber" : 43,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email); /* <=== */ \n\t\t\treturn Boolean.TRUE;\n\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 119,
                    "columnNumber" : 58,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) { /* <=== */ \n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 121,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n\n"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 122,
                    "columnNumber" : 64,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email); /* <=== */ \n\t}\n}\n\n\n@Repository"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 160,
                    "columnNumber" : 59,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) { /* <=== */ \n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\","
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 162,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 167,
                    "columnNumber" : 38,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "new AttributeValue().withS(productId)",
                    "lineNumber" : 167,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "$obj11",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "new ExpectedAttributeValue(new AttributeValue().withS(productId))",
                    "lineNumber" : 166,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue( /* <=== */ \n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}"
                  },
                  {
                    "sample" : "new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId)))",
                    "lineNumber" : 164,
                    "columnNumber" : 5,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression() /* <=== */ \n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 163,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 163,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(product, new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId))))",
                    "lineNumber" : 163,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  }
                ]
              },
              {
                "pathId" : "3866-3878-1233-1239-1236-1235",
                "path" : [
                  {
                    "sample" : "buyer",
                    "lineNumber" : 30,
                    "columnNumber" : 15,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "    public String updateProduct(String buyerId, Buyer buyer) {\n        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n\n    public String updateProductBuyerEmail(String buyerId, String email) {\n        Buyer buyer = buyerRepository.getBuyerById(buyerId); /* <=== */ \n        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n}"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 31,
                    "columnNumber" : 53,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n\n    public String updateProductBuyerEmail(String buyerId, String email) {\n        Buyer buyer = buyerRepository.getBuyerById(buyerId);\n        return buyerRepository.updateBuyer(buyerId, buyer); /* <=== */ \n    }\n}"
                  },
                  {
                    "sample" : "Buyer buyer",
                    "lineNumber" : 32,
                    "columnNumber" : 47,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "    public String deleteBuyerById(String buyerId) {\n        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) { /* <=== */ \n        dynamoDBMapper.save(buyer,\n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 33,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 33,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(buyer, new DynamoDBSaveExpression().withExpectedEntry(\"buyerId\", new ExpectedAttributeValue(new AttributeValue().withS(buyerId))))",
                    "lineNumber" : 33,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));"
                  }
                ]
              },
              {
                "pathId" : "3866-3878-1233-1239-1236-1240",
                "path" : [
                  {
                    "sample" : "buyer",
                    "lineNumber" : 30,
                    "columnNumber" : 15,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "    public String updateProduct(String buyerId, Buyer buyer) {\n        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n\n    public String updateProductBuyerEmail(String buyerId, String email) {\n        Buyer buyer = buyerRepository.getBuyerById(buyerId); /* <=== */ \n        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n}"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 31,
                    "columnNumber" : 53,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "        return buyerRepository.updateBuyer(buyerId, buyer);\n    }\n\n    public String updateProductBuyerEmail(String buyerId, String email) {\n        Buyer buyer = buyerRepository.getBuyerById(buyerId);\n        return buyerRepository.updateBuyer(buyerId, buyer); /* <=== */ \n    }\n}"
                  },
                  {
                    "sample" : "Buyer buyer",
                    "lineNumber" : 32,
                    "columnNumber" : 47,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "    public String deleteBuyerById(String buyerId) {\n        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) { /* <=== */ \n        dynamoDBMapper.save(buyer,\n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 33,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 33,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Buyer.class, buyerId));\n        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));"
                  },
                  {
                    "sample" : "new DynamoDBSaveExpression().withExpectedEntry(\"buyerId\", new ExpectedAttributeValue(new AttributeValue().withS(buyerId)))",
                    "lineNumber" : 34,
                    "columnNumber" : 17,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "        return \"Buyer Id : \"+ buyerId +\" Deleted!\";\n    }\n\n    public String updateBuyer(String buyerId, Buyer buyer) {\n        dynamoDBMapper.save(buyer,\n                new DynamoDBSaveExpression() /* <=== */ \n                        .withExpectedEntry(\"buyerId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(buyerId)\n                                )));\n        return buyerId;"
                  }
                ]
              },
              {
                "pathId" : "497-504-509-508-507-536-673-685-701-758-770-777-888-903-925-932-924-923-922-918-909",
                "path" : [
                  {
                    "sample" : "buyer",
                    "lineNumber" : 49,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\t\n\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer(); /* <=== */ \n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 50,
                    "columnNumber" : 22,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\n\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName(); /* <=== */ \n\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 51,
                    "columnNumber" : 18,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "buyer.getEmail()",
                    "lineNumber" : 51,
                    "columnNumber" : 18,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 51,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@PostMapping(\"orders\")\n\tpublic ResponseEntity<Order> createOrder(@RequestBody Order order) {\n\n\t\tBuyer buyer = order.getBuyer();\n\t\tString firstName = buyer.getFirstName();\n\t\tString email = buyer.getEmail(); /* <=== */ \n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName);"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 56,
                    "columnNumber" : 66,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tString email = buyer.getEmail();\n\t\tString dateOfBirth = buyer.getDateOfBirth();\n\t\tString lastName = buyer.getLastName();\n\n\t\tOrder item = service.createOrder(order);\n\t\tBoolean isSuccess = productService.addProductMetric(firstName, email, dateOfBirth, lastName); /* <=== */ \n\n\t\treturn new ResponseEntity<Order>(item, HttpStatus.OK);\n\t\t\n\t}\n\t"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 91,
                    "columnNumber" : 47,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) { /* <=== */ \n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 93,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 99,
                    "columnNumber" : 43,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email); /* <=== */ \n\t\t\treturn Boolean.TRUE;\n\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 119,
                    "columnNumber" : 58,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) { /* <=== */ \n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 121,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n\n"
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 122,
                    "columnNumber" : 64,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email); /* <=== */ \n\t}\n}\n\n\n@Repository"
                  },
                  {
                    "sample" : "String email",
                    "lineNumber" : 160,
                    "columnNumber" : 59,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) { /* <=== */ \n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\","
                  },
                  {
                    "sample" : "email",
                    "lineNumber" : 162,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 167,
                    "columnNumber" : 38,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "new AttributeValue().withS(productId)",
                    "lineNumber" : 167,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "$obj11",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "new ExpectedAttributeValue(new AttributeValue().withS(productId))",
                    "lineNumber" : 166,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue( /* <=== */ \n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}"
                  },
                  {
                    "sample" : "new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId)))",
                    "lineNumber" : 164,
                    "columnNumber" : 5,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression() /* <=== */ \n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;"
                  }
                ]
              },
              {
                "pathId" : "4330-4333-4341-3820-3827-1177-1183-1180-1179",
                "path" : [
                  {
                    "sample" : "newBuyer",
                    "lineNumber" : 84,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth); /* <=== */ \n\n\n\t\t\tbuyerService.saveProduct(newBuyer);\n\n\t\t}"
                  },
                  {
                    "sample" : "newBuyer",
                    "lineNumber" : 84,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();\n\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth); /* <=== */ \n\n\n\t\t\tbuyerService.saveProduct(newBuyer);\n\n\t\t}"
                  },
                  {
                    "sample" : "newBuyer",
                    "lineNumber" : 87,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);\n\n\n\t\t\tbuyerService.saveProduct(newBuyer); /* <=== */ \n\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\tlogger.error(\"Exception while creating order: \" +"
                  },
                  {
                    "sample" : "Buyer buyer",
                    "lineNumber" : 17,
                    "columnNumber" : 30,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "\n    Logger logger = LoggerFactory.getLogger(BuyerService.class);\n    @Autowired\n    private BuyerRepository buyerRepository;\n\n    public Buyer saveProduct(Buyer buyer) { /* <=== */ \n            return buyerRepository.saveBuyer(buyer);\n    }\n\n    public Buyer getProductById(String buyerId) {\n        return buyerRepository.getBuyerById(buyerId);"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 18,
                    "columnNumber" : 46,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "    Logger logger = LoggerFactory.getLogger(BuyerService.class);\n    @Autowired\n    private BuyerRepository buyerRepository;\n\n    public Buyer saveProduct(Buyer buyer) {\n            return buyerRepository.saveBuyer(buyer); /* <=== */ \n    }\n\n    public Buyer getProductById(String buyerId) {\n        return buyerRepository.getBuyerById(buyerId);\n    }"
                  },
                  {
                    "sample" : "Buyer buyer",
                    "lineNumber" : 18,
                    "columnNumber" : 28,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) { /* <=== */ \n        dynamoDBMapper.save(buyer);\n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {"
                  },
                  {
                    "sample" : "buyer",
                    "lineNumber" : 19,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) {\n        dynamoDBMapper.save(buyer); /* <=== */ \n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 19,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) {\n        dynamoDBMapper.save(buyer); /* <=== */ \n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId);"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(buyer)",
                    "lineNumber" : 19,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) {\n        dynamoDBMapper.save(buyer); /* <=== */ \n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId);"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "sourceId" : "Data.Sensitive.AccountData.AccountPassword",
        "sinks" : [
          {
            "sinkType" : "third_parties",
            "id" : "ThirdParties.SDK.Atlassian",
            "name" : "Atlassian",
            "category" : "",
            "domains" : [
              "atlassian.com"
            ],
            "sensitivity" : "",
            "isSensitive" : false,
            "tags" : {
              
            },
            "apiUrl" : [
            ],
            "databaseDetails" : {
              "dbName" : "",
              "dbVendor" : "",
              "dbLocation" : "",
              "dbOperation" : ""
            },
            "paths" : [
              {
                "pathId" : "4637-76-86-84-43-45-44-49-120-5428-44-110-108-99",
                "path" : [
                  {
                    "sample" : "this.password",
                    "lineNumber" : 144,
                    "columnNumber" : 59,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\t@Value(\"${jira.project.key}\")\n\tprivate String projectKey;\n\n\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl); /* <=== */ \n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder("
                  },
                  {
                    "sample" : "String jiraSecret",
                    "lineNumber" : 16,
                    "columnNumber" : 46,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/client/JiraClient.java",
                    "excerpt" : "    private String jiraSecret;\n    private String jiraUrl;\n    private JiraRestClient restClient;\n\n\n    public JiraClient(String jiraAaccessKey, String jiraSecret, String jiraUrl) { /* <=== */ \n        this.jiraAaccessKey = jiraAaccessKey;\n        this.jiraSecret = jiraSecret;\n        this.jiraUrl = jiraUrl;\n        this.restClient = getJiraRestClient();\n    }"
                  },
                  {
                    "sample" : "jiraSecret",
                    "lineNumber" : 18,
                    "columnNumber" : 27,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/client/JiraClient.java",
                    "excerpt" : "    private JiraRestClient restClient;\n\n\n    public JiraClient(String jiraAaccessKey, String jiraSecret, String jiraUrl) {\n        this.jiraAaccessKey = jiraAaccessKey;\n        this.jiraSecret = jiraSecret; /* <=== */ \n        this.jiraUrl = jiraUrl;\n        this.restClient = getJiraRestClient();\n    }\n\n    private JiraRestClient getJiraRestClient() {"
                  },
                  {
                    "sample" : "this.jiraSecret",
                    "lineNumber" : 18,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/client/JiraClient.java",
                    "excerpt" : "    private JiraRestClient restClient;\n\n\n    public JiraClient(String jiraAaccessKey, String jiraSecret, String jiraUrl) {\n        this.jiraAaccessKey = jiraAaccessKey;\n        this.jiraSecret = jiraSecret; /* <=== */ \n        this.jiraUrl = jiraUrl;\n        this.restClient = getJiraRestClient();\n    }\n\n    private JiraRestClient getJiraRestClient() {"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 20,
                    "columnNumber" : 27,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/client/JiraClient.java",
                    "excerpt" : "\n    public JiraClient(String jiraAaccessKey, String jiraSecret, String jiraUrl) {\n        this.jiraAaccessKey = jiraAaccessKey;\n        this.jiraSecret = jiraSecret;\n        this.jiraUrl = jiraUrl;\n        this.restClient = getJiraRestClient(); /* <=== */ \n    }\n\n    private JiraRestClient getJiraRestClient() {\n        return new AsynchronousJiraRestClientFactory()\n                .createWithBasicHttpAuthentication(getJiraUri(), this.jiraAaccessKey, this.jiraSecret);"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 23,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/client/JiraClient.java",
                    "excerpt" : "        this.jiraSecret = jiraSecret;\n        this.jiraUrl = jiraUrl;\n        this.restClient = getJiraRestClient();\n    }\n\n    private JiraRestClient getJiraRestClient() { /* <=== */ \n        return new AsynchronousJiraRestClientFactory()\n                .createWithBasicHttpAuthentication(getJiraUri(), this.jiraAaccessKey, this.jiraSecret);\n    }\n\n    private URI getJiraUri() {"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 25,
                    "columnNumber" : 52,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/client/JiraClient.java",
                    "excerpt" : "        this.restClient = getJiraRestClient();\n    }\n\n    private JiraRestClient getJiraRestClient() {\n        return new AsynchronousJiraRestClientFactory()\n                .createWithBasicHttpAuthentication(getJiraUri(), this.jiraAaccessKey, this.jiraSecret); /* <=== */ \n    }\n\n    private URI getJiraUri() {\n        return URI.create(this.jiraUrl);\n    }"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 28,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/client/JiraClient.java",
                    "excerpt" : "    private JiraRestClient getJiraRestClient() {\n        return new AsynchronousJiraRestClientFactory()\n                .createWithBasicHttpAuthentication(getJiraUri(), this.jiraAaccessKey, this.jiraSecret);\n    }\n\n    private URI getJiraUri() { /* <=== */ \n        return URI.create(this.jiraUrl);\n    }\n\n    public JiraRestClient getRestClient() {\n        return restClient;"
                  },
                  {
                    "sample" : "this.jiraUrl",
                    "lineNumber" : 29,
                    "columnNumber" : 27,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/client/JiraClient.java",
                    "excerpt" : "        return new AsynchronousJiraRestClientFactory()\n                .createWithBasicHttpAuthentication(getJiraUri(), this.jiraAaccessKey, this.jiraSecret);\n    }\n\n    private URI getJiraUri() {\n        return URI.create(this.jiraUrl); /* <=== */ \n    }\n\n    public JiraRestClient getRestClient() {\n        return restClient;\n    }"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 28,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/client/JiraClient.java",
                    "excerpt" : "    private JiraRestClient getJiraRestClient() {\n        return new AsynchronousJiraRestClientFactory()\n                .createWithBasicHttpAuthentication(getJiraUri(), this.jiraAaccessKey, this.jiraSecret);\n    }\n\n    private URI getJiraUri() { /* <=== */ \n        return URI.create(this.jiraUrl);\n    }\n\n    public JiraRestClient getRestClient() {\n        return restClient;"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 25,
                    "columnNumber" : 52,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/client/JiraClient.java",
                    "excerpt" : "        this.restClient = getJiraRestClient();\n    }\n\n    private JiraRestClient getJiraRestClient() {\n        return new AsynchronousJiraRestClientFactory()\n                .createWithBasicHttpAuthentication(getJiraUri(), this.jiraAaccessKey, this.jiraSecret); /* <=== */ \n    }\n\n    private URI getJiraUri() {\n        return URI.create(this.jiraUrl);\n    }"
                  },
                  {
                    "sample" : "this.jiraSecret",
                    "lineNumber" : 25,
                    "columnNumber" : 87,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/client/JiraClient.java",
                    "excerpt" : "        this.restClient = getJiraRestClient();\n    }\n\n    private JiraRestClient getJiraRestClient() {\n        return new AsynchronousJiraRestClientFactory()\n                .createWithBasicHttpAuthentication(getJiraUri(), this.jiraAaccessKey, this.jiraSecret); /* <=== */ \n    }\n\n    private URI getJiraUri() {\n        return URI.create(this.jiraUrl);\n    }"
                  },
                  {
                    "sample" : "this.jiraAaccessKey",
                    "lineNumber" : 25,
                    "columnNumber" : 66,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/client/JiraClient.java",
                    "excerpt" : "        this.restClient = getJiraRestClient();\n    }\n\n    private JiraRestClient getJiraRestClient() {\n        return new AsynchronousJiraRestClientFactory()\n                .createWithBasicHttpAuthentication(getJiraUri(), this.jiraAaccessKey, this.jiraSecret); /* <=== */ \n    }\n\n    private URI getJiraUri() {\n        return URI.create(this.jiraUrl);\n    }"
                  },
                  {
                    "sample" : "new AsynchronousJiraRestClientFactory().createWithBasicHttpAuthentication(getJiraUri(), this.jiraAaccessKey, this.jiraSecret)",
                    "lineNumber" : 24,
                    "columnNumber" : 16,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/client/JiraClient.java",
                    "excerpt" : "        this.jiraUrl = jiraUrl;\n        this.restClient = getJiraRestClient();\n    }\n\n    private JiraRestClient getJiraRestClient() {\n        return new AsynchronousJiraRestClientFactory() /* <=== */ \n                .createWithBasicHttpAuthentication(getJiraUri(), this.jiraAaccessKey, this.jiraSecret);\n    }\n\n    private URI getJiraUri() {\n        return URI.create(this.jiraUrl);"
                  }
                ]
              },
              {
                "pathId" : "4161-4367-4535-4555-4554-4553-4549-4548-4547-4568-4565-4564-4563-4562-4561-4571-4366-4378-4377",
                "path" : [
                  {
                    "sample" : "this",
                    "lineNumber" : 66,
                    "columnNumber" : 26,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t}\n\n\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email;\n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId()); /* <=== */ \n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);"
                  },
                  {
                    "sample" : "this.jiraService",
                    "lineNumber" : 96,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\t\t\tlogger.error(\"Exception while creating order: \" +\n\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail); /* <=== */ \n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 147,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) { /* <=== */ \n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}"
                  },
                  {
                    "sample" : "this.projectKey",
                    "lineNumber" : 150,
                    "columnNumber" : 5,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build(); /* <=== */ \n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient"
                  },
                  {
                    "sample" : "$obj5",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, issueType, issueSummary)",
                    "lineNumber" : 149,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {"
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, issueType, issueSummary).build()",
                    "lineNumber" : 149,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {"
                  },
                  {
                    "sample" : "newIssue",
                    "lineNumber" : 149,
                    "columnNumber" : 14,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {"
                  },
                  {
                    "sample" : "newIssue",
                    "lineNumber" : 151,
                    "columnNumber" : 34,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "this.issueClient",
                    "lineNumber" : 151,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue)",
                    "lineNumber" : 151,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue).claim()",
                    "lineNumber" : 151,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue).claim().getKey()",
                    "lineNumber" : 151,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "java.lang.String",
                    "lineNumber" : 147,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) { /* <=== */ \n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}"
                  },
                  {
                    "sample" : "jiraService.createIssue(1l, \"Exception while creating order for \" + buyerEmail)",
                    "lineNumber" : 96,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\t\t\tlogger.error(\"Exception while creating order: \" +\n\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail); /* <=== */ \n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;"
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, 1l, buyerEmail).build()",
                    "lineNumber" : 98,
                    "columnNumber" : 26,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);"
                  }
                ]
              },
              {
                "pathId" : "4481-5046-5049-4480-4498-126-128-134-4497-4496",
                "path" : [
                  {
                    "sample" : "this",
                    "lineNumber" : 54,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate BuyerService buyerService;\n\n\t@Autowired\n\tprivate JiraServiceImpl jiraService;\n\n\tprivate JiraClient jiraClient = new JiraClient(jiraAaccessKey, jiraSecret, jiraUrl); /* <=== */ \n\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\t@Override\n\tpublic List<Order> getOrders() {"
                  },
                  {
                    "sample" : "p1",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "<unknown>",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "this.jiraClient",
                    "lineNumber" : 54,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate BuyerService buyerService;\n\n\t@Autowired\n\tprivate JiraServiceImpl jiraService;\n\n\tprivate JiraClient jiraClient = new JiraClient(jiraAaccessKey, jiraSecret, jiraUrl); /* <=== */ \n\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\t@Override\n\tpublic List<Order> getOrders() {"
                  },
                  {
                    "sample" : "this.jiraClient",
                    "lineNumber" : 56,
                    "columnNumber" : 40,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t@Autowired\n\tprivate JiraServiceImpl jiraService;\n\n\tprivate JiraClient jiraClient = new JiraClient(jiraAaccessKey, jiraSecret, jiraUrl);\n\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient(); /* <=== */ \n\n\t@Override\n\tpublic List<Order> getOrders() {\n\t\treturn dao.getOrders();\n\t}"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 32,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/client/JiraClient.java",
                    "excerpt" : "\n    private URI getJiraUri() {\n        return URI.create(this.jiraUrl);\n    }\n\n    public JiraRestClient getRestClient() { /* <=== */ \n        return restClient;\n    }\n}"
                  },
                  {
                    "sample" : "com.atlassian.jira.rest.client.api.JiraRestClient",
                    "lineNumber" : 32,
                    "columnNumber" : 12,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/client/JiraClient.java",
                    "excerpt" : "\n    private URI getJiraUri() {\n        return URI.create(this.jiraUrl);\n    }\n\n    public JiraRestClient getRestClient() { /* <=== */ \n        return restClient;\n    }\n}"
                  },
                  {
                    "sample" : "jiraClient.getRestClient()",
                    "lineNumber" : 56,
                    "columnNumber" : 40,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t@Autowired\n\tprivate JiraServiceImpl jiraService;\n\n\tprivate JiraClient jiraClient = new JiraClient(jiraAaccessKey, jiraSecret, jiraUrl);\n\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient(); /* <=== */ \n\n\t@Override\n\tpublic List<Order> getOrders() {\n\t\treturn dao.getOrders();\n\t}"
                  },
                  {
                    "sample" : "jiraClient.getRestClient().getIssueClient()",
                    "lineNumber" : 56,
                    "columnNumber" : 40,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t@Autowired\n\tprivate JiraServiceImpl jiraService;\n\n\tprivate JiraClient jiraClient = new JiraClient(jiraAaccessKey, jiraSecret, jiraUrl);\n\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient(); /* <=== */ \n\n\t@Override\n\tpublic List<Order> getOrders() {\n\t\treturn dao.getOrders();\n\t}"
                  }
                ]
              },
              {
                "pathId" : "4161-4367-4535-4555-4554-4553-4549-4548",
                "path" : [
                  {
                    "sample" : "this",
                    "lineNumber" : 66,
                    "columnNumber" : 26,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t}\n\n\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email;\n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId()); /* <=== */ \n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);"
                  },
                  {
                    "sample" : "this.jiraService",
                    "lineNumber" : 96,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\t\t\tlogger.error(\"Exception while creating order: \" +\n\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail); /* <=== */ \n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 147,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) { /* <=== */ \n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}"
                  },
                  {
                    "sample" : "this.projectKey",
                    "lineNumber" : 150,
                    "columnNumber" : 5,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build(); /* <=== */ \n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient"
                  },
                  {
                    "sample" : "$obj5",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, issueType, issueSummary)",
                    "lineNumber" : 149,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {"
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, issueType, issueSummary).build()",
                    "lineNumber" : 149,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {"
                  }
                ]
              },
              {
                "pathId" : "4182-4573-4579-4578",
                "path" : [
                  {
                    "sample" : "this",
                    "lineNumber" : 166,
                    "columnNumber" : 31,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\tjiraClient.getRestClient().getIssueClient()\n\t\t\t\t.addComment(issue.getCommentsUri(), Comment.valueOf(commentBody));\n\t}\n\n\tpublic List<Comment> getAllComments(String issueKey) {\n\t\treturn StreamSupport.stream(getIssue(issueKey).getComments().spliterator(), false) /* <=== */ \n\t\t\t\t.collect(Collectors.toList());\n\t}\n\n}"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 154,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) { /* <=== */ \n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)\n\t\t\t\t.claim();\n\t}\n"
                  },
                  {
                    "sample" : "this.issueClient",
                    "lineNumber" : 155,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient /* <=== */ \n\t\t\t\t.getIssue(issueKey)\n\t\t\t\t.claim();\n\t}\n\n\tpublic void addComment(Issue issue, String commentBody) {"
                  },
                  {
                    "sample" : "issueClient.getIssue(issueKey)",
                    "lineNumber" : 155,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient /* <=== */ \n\t\t\t\t.getIssue(issueKey)\n\t\t\t\t.claim();\n\t}\n\n\tpublic void addComment(Issue issue, String commentBody) {"
                  }
                ]
              },
              {
                "pathId" : "4161-4367-4535-4555-4554-4553-4549-4548-4547-4568-4565-4564-4563-4562",
                "path" : [
                  {
                    "sample" : "this",
                    "lineNumber" : 66,
                    "columnNumber" : 26,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t}\n\n\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email;\n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId()); /* <=== */ \n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);"
                  },
                  {
                    "sample" : "this.jiraService",
                    "lineNumber" : 96,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\t\t\tlogger.error(\"Exception while creating order: \" +\n\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail); /* <=== */ \n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 147,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) { /* <=== */ \n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}"
                  },
                  {
                    "sample" : "this.projectKey",
                    "lineNumber" : 150,
                    "columnNumber" : 5,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build(); /* <=== */ \n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient"
                  },
                  {
                    "sample" : "$obj5",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, issueType, issueSummary)",
                    "lineNumber" : 149,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {"
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, issueType, issueSummary).build()",
                    "lineNumber" : 149,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {"
                  },
                  {
                    "sample" : "newIssue",
                    "lineNumber" : 149,
                    "columnNumber" : 14,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {"
                  },
                  {
                    "sample" : "newIssue",
                    "lineNumber" : 151,
                    "columnNumber" : 34,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "this.issueClient",
                    "lineNumber" : 151,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue)",
                    "lineNumber" : 151,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue).claim()",
                    "lineNumber" : 151,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue).claim().getKey()",
                    "lineNumber" : 151,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  }
                ]
              },
              {
                "pathId" : "4182-4573-4579-4578-4577-4576-4585-4614-4613",
                "path" : [
                  {
                    "sample" : "this",
                    "lineNumber" : 166,
                    "columnNumber" : 31,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\tjiraClient.getRestClient().getIssueClient()\n\t\t\t\t.addComment(issue.getCommentsUri(), Comment.valueOf(commentBody));\n\t}\n\n\tpublic List<Comment> getAllComments(String issueKey) {\n\t\treturn StreamSupport.stream(getIssue(issueKey).getComments().spliterator(), false) /* <=== */ \n\t\t\t\t.collect(Collectors.toList());\n\t}\n\n}"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 154,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) { /* <=== */ \n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)\n\t\t\t\t.claim();\n\t}\n"
                  },
                  {
                    "sample" : "this.issueClient",
                    "lineNumber" : 155,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient /* <=== */ \n\t\t\t\t.getIssue(issueKey)\n\t\t\t\t.claim();\n\t}\n\n\tpublic void addComment(Issue issue, String commentBody) {"
                  },
                  {
                    "sample" : "issueClient.getIssue(issueKey)",
                    "lineNumber" : 155,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient /* <=== */ \n\t\t\t\t.getIssue(issueKey)\n\t\t\t\t.claim();\n\t}\n\n\tpublic void addComment(Issue issue, String commentBody) {"
                  },
                  {
                    "sample" : "issueClient.getIssue(issueKey).claim()",
                    "lineNumber" : 155,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient /* <=== */ \n\t\t\t\t.getIssue(issueKey)\n\t\t\t\t.claim();\n\t}\n\n\tpublic void addComment(Issue issue, String commentBody) {"
                  },
                  {
                    "sample" : "com.atlassian.jira.rest.client.api.domain.Issue",
                    "lineNumber" : 154,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) { /* <=== */ \n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)\n\t\t\t\t.claim();\n\t}\n"
                  },
                  {
                    "sample" : "this.getIssue(issueKey)",
                    "lineNumber" : 166,
                    "columnNumber" : 31,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\tjiraClient.getRestClient().getIssueClient()\n\t\t\t\t.addComment(issue.getCommentsUri(), Comment.valueOf(commentBody));\n\t}\n\n\tpublic List<Comment> getAllComments(String issueKey) {\n\t\treturn StreamSupport.stream(getIssue(issueKey).getComments().spliterator(), false) /* <=== */ \n\t\t\t\t.collect(Collectors.toList());\n\t}\n\n}"
                  },
                  {
                    "sample" : "this.getIssue(issueKey).getComments()",
                    "lineNumber" : 166,
                    "columnNumber" : 31,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\tjiraClient.getRestClient().getIssueClient()\n\t\t\t\t.addComment(issue.getCommentsUri(), Comment.valueOf(commentBody));\n\t}\n\n\tpublic List<Comment> getAllComments(String issueKey) {\n\t\treturn StreamSupport.stream(getIssue(issueKey).getComments().spliterator(), false) /* <=== */ \n\t\t\t\t.collect(Collectors.toList());\n\t}\n\n}"
                  }
                ]
              },
              {
                "pathId" : "4161-4367-4535-4555-4554-4553-4549-4548-4547-4568-4565-4564-4563-4562-4561-4571-4366-4378-4377-4376-4396-4393-4392-4391-4390",
                "path" : [
                  {
                    "sample" : "this",
                    "lineNumber" : 66,
                    "columnNumber" : 26,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t}\n\n\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email;\n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId()); /* <=== */ \n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);"
                  },
                  {
                    "sample" : "this.jiraService",
                    "lineNumber" : 96,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\t\t\tlogger.error(\"Exception while creating order: \" +\n\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail); /* <=== */ \n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 147,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) { /* <=== */ \n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}"
                  },
                  {
                    "sample" : "this.projectKey",
                    "lineNumber" : 150,
                    "columnNumber" : 5,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build(); /* <=== */ \n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient"
                  },
                  {
                    "sample" : "$obj5",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, issueType, issueSummary)",
                    "lineNumber" : 149,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {"
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, issueType, issueSummary).build()",
                    "lineNumber" : 149,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {"
                  },
                  {
                    "sample" : "newIssue",
                    "lineNumber" : 149,
                    "columnNumber" : 14,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {"
                  },
                  {
                    "sample" : "newIssue",
                    "lineNumber" : 151,
                    "columnNumber" : 34,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "this.issueClient",
                    "lineNumber" : 151,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue)",
                    "lineNumber" : 151,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue).claim()",
                    "lineNumber" : 151,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue).claim().getKey()",
                    "lineNumber" : 151,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "java.lang.String",
                    "lineNumber" : 147,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) { /* <=== */ \n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}"
                  },
                  {
                    "sample" : "jiraService.createIssue(1l, \"Exception while creating order for \" + buyerEmail)",
                    "lineNumber" : 96,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\t\t\tlogger.error(\"Exception while creating order: \" +\n\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail); /* <=== */ \n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;"
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, 1l, buyerEmail).build()",
                    "lineNumber" : 98,
                    "columnNumber" : 26,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);"
                  },
                  {
                    "sample" : "newIssue",
                    "lineNumber" : 98,
                    "columnNumber" : 15,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);"
                  },
                  {
                    "sample" : "newIssue",
                    "lineNumber" : 100,
                    "columnNumber" : 28,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);\n\t}\n"
                  },
                  {
                    "sample" : "this.issueClient",
                    "lineNumber" : 100,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);\n\t}\n"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue)",
                    "lineNumber" : 100,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);\n\t}\n"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue).claim()",
                    "lineNumber" : 100,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);\n\t}\n"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue).claim().getKey()",
                    "lineNumber" : 100,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);\n\t}\n"
                  }
                ]
              },
              {
                "pathId" : "4632-5046-5049-4631-4649-126-128-134-4648-4647",
                "path" : [
                  {
                    "sample" : "this",
                    "lineNumber" : 144,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\t@Value(\"${jira.project.key}\")\n\tprivate String projectKey;\n\n\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl); /* <=== */ \n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder("
                  },
                  {
                    "sample" : "p1",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "<unknown>",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "this.jiraClient",
                    "lineNumber" : 144,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\t@Value(\"${jira.project.key}\")\n\tprivate String projectKey;\n\n\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl); /* <=== */ \n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder("
                  },
                  {
                    "sample" : "this.jiraClient",
                    "lineNumber" : 145,
                    "columnNumber" : 40,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t@Value(\"${jira.project.key}\")\n\tprivate String projectKey;\n\n\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient(); /* <=== */ \n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 32,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/client/JiraClient.java",
                    "excerpt" : "\n    private URI getJiraUri() {\n        return URI.create(this.jiraUrl);\n    }\n\n    public JiraRestClient getRestClient() { /* <=== */ \n        return restClient;\n    }\n}"
                  },
                  {
                    "sample" : "com.atlassian.jira.rest.client.api.JiraRestClient",
                    "lineNumber" : 32,
                    "columnNumber" : 12,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/client/JiraClient.java",
                    "excerpt" : "\n    private URI getJiraUri() {\n        return URI.create(this.jiraUrl);\n    }\n\n    public JiraRestClient getRestClient() { /* <=== */ \n        return restClient;\n    }\n}"
                  },
                  {
                    "sample" : "jiraClient.getRestClient()",
                    "lineNumber" : 145,
                    "columnNumber" : 40,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t@Value(\"${jira.project.key}\")\n\tprivate String projectKey;\n\n\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient(); /* <=== */ \n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();"
                  },
                  {
                    "sample" : "jiraClient.getRestClient().getIssueClient()",
                    "lineNumber" : 145,
                    "columnNumber" : 40,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t@Value(\"${jira.project.key}\")\n\tprivate String projectKey;\n\n\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient(); /* <=== */ \n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();"
                  }
                ]
              }
            ]
          },
          {
            "sinkType" : "third_parties",
            "id" : "ThirdParties.SDK.Amazonaws",
            "name" : "Amazonaws",
            "category" : "",
            "domains" : [
              "amazonaws.com"
            ],
            "sensitivity" : "",
            "isSensitive" : false,
            "tags" : {
              
            },
            "apiUrl" : [
            ],
            "databaseDetails" : {
              "dbName" : "",
              "dbVendor" : "",
              "dbLocation" : "",
              "dbOperation" : ""
            },
            "paths" : [
              {
                "pathId" : "4161-4304-4679-4684-1704-1708-1707",
                "path" : [
                  {
                    "sample" : "this",
                    "lineNumber" : 66,
                    "columnNumber" : 26,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t}\n\n\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email;\n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId()); /* <=== */ \n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);"
                  },
                  {
                    "sample" : "this.productService",
                    "lineNumber" : 76,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product); /* <=== */ \n\n\n\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 17,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "\n    Logger logger = LoggerFactory.getLogger(ProductService.class);\n    @Autowired\n    private ProductRepository productRepository;\n\n    public Product saveProduct(Product product) { /* <=== */ \n            return productRepository.saveProduct(product);\n    }\n\n    public Product getProductById(String productId) {\n        return productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this.productRepository",
                    "lineNumber" : 18,
                    "columnNumber" : 20,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "    Logger logger = LoggerFactory.getLogger(ProductService.class);\n    @Autowired\n    private ProductRepository productRepository;\n\n    public Product saveProduct(Product product) {\n            return productRepository.saveProduct(product); /* <=== */ \n    }\n\n    public Product getProductById(String productId) {\n        return productRepository.getProductById(productId);\n    }"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 19,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "\n\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Product saveProduct(Product product) { /* <=== */ \n        dynamoDBMapper.save(product);\n        return product;\n    }\n\n    public Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 20,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Product saveProduct(Product product) {\n        dynamoDBMapper.save(product); /* <=== */ \n        return product;\n    }\n\n    public Product getProductById(String productId) {\n        return dynamoDBMapper.load(Product.class, productId);"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(product)",
                    "lineNumber" : 20,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Product saveProduct(Product product) {\n        dynamoDBMapper.save(product); /* <=== */ \n        return product;\n    }\n\n    public Product getProductById(String productId) {\n        return dynamoDBMapper.load(Product.class, productId);"
                  }
                ]
              },
              {
                "pathId" : "4161-4338-3819-3824-1176-1180-1179",
                "path" : [
                  {
                    "sample" : "this",
                    "lineNumber" : 66,
                    "columnNumber" : 26,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t}\n\n\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email;\n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId()); /* <=== */ \n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);"
                  },
                  {
                    "sample" : "this.buyerService",
                    "lineNumber" : 87,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);\n\n\n\t\t\tbuyerService.saveProduct(newBuyer); /* <=== */ \n\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\tlogger.error(\"Exception while creating order: \" +"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 17,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "\n    Logger logger = LoggerFactory.getLogger(BuyerService.class);\n    @Autowired\n    private BuyerRepository buyerRepository;\n\n    public Buyer saveProduct(Buyer buyer) { /* <=== */ \n            return buyerRepository.saveBuyer(buyer);\n    }\n\n    public Buyer getProductById(String buyerId) {\n        return buyerRepository.getBuyerById(buyerId);"
                  },
                  {
                    "sample" : "this.buyerRepository",
                    "lineNumber" : 18,
                    "columnNumber" : 20,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "    Logger logger = LoggerFactory.getLogger(BuyerService.class);\n    @Autowired\n    private BuyerRepository buyerRepository;\n\n    public Buyer saveProduct(Buyer buyer) {\n            return buyerRepository.saveBuyer(buyer); /* <=== */ \n    }\n\n    public Buyer getProductById(String buyerId) {\n        return buyerRepository.getBuyerById(buyerId);\n    }"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 18,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) { /* <=== */ \n        dynamoDBMapper.save(buyer);\n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 19,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) {\n        dynamoDBMapper.save(buyer); /* <=== */ \n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId);"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(buyer)",
                    "lineNumber" : 19,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) {\n        dynamoDBMapper.save(buyer); /* <=== */ \n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId);"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "sourceId" : "Data.Sensitive.PurchaseData.OrderDetails",
        "sinks" : [
          {
            "sinkType" : "third_parties",
            "id" : "ThirdParties.SDK.Atlassian",
            "name" : "Atlassian",
            "category" : "",
            "domains" : [
              "atlassian.com"
            ],
            "sensitivity" : "",
            "isSensitive" : false,
            "tags" : {
              
            },
            "apiUrl" : [
            ],
            "databaseDetails" : {
              "dbName" : "",
              "dbVendor" : "",
              "dbLocation" : "",
              "dbOperation" : ""
            },
            "paths" : [
              {
                "pathId" : "4275-4278-4280-4298-4301-4307-4680-4687-1705-1711-1712-1716-4683-4682-4690-4303-4378-4377",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 68,
                    "columnNumber" : 12,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email;\n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product(); /* <=== */ \n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 68,
                    "columnNumber" : 12,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email;\n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product(); /* <=== */ \n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 69,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email;\n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId()); /* <=== */ \n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 73,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail); /* <=== */ \n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product);\n\n"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 74,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode); /* <=== */ \n\n\t\t\tproductService.saveProduct(product);\n\n\n\t\t\tBuyer buyer = order.getBuyer();"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 76,
                    "columnNumber" : 31,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product); /* <=== */ \n\n\n\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 17,
                    "columnNumber" : 32,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "\n    Logger logger = LoggerFactory.getLogger(ProductService.class);\n    @Autowired\n    private ProductRepository productRepository;\n\n    public Product saveProduct(Product product) { /* <=== */ \n            return productRepository.saveProduct(product);\n    }\n\n    public Product getProductById(String productId) {\n        return productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 18,
                    "columnNumber" : 50,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "    Logger logger = LoggerFactory.getLogger(ProductService.class);\n    @Autowired\n    private ProductRepository productRepository;\n\n    public Product saveProduct(Product product) {\n            return productRepository.saveProduct(product); /* <=== */ \n    }\n\n    public Product getProductById(String productId) {\n        return productRepository.getProductById(productId);\n    }"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 19,
                    "columnNumber" : 32,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "\n\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Product saveProduct(Product product) { /* <=== */ \n        dynamoDBMapper.save(product);\n        return product;\n    }\n\n    public Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 20,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Product saveProduct(Product product) {\n        dynamoDBMapper.save(product); /* <=== */ \n        return product;\n    }\n\n    public Product getProductById(String productId) {\n        return dynamoDBMapper.load(Product.class, productId);"
                  },
                  {
                    "sample" : "com.analytics.analytics.entity.Product",
                    "lineNumber" : 19,
                    "columnNumber" : 12,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "\n\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Product saveProduct(Product product) { /* <=== */ \n        dynamoDBMapper.save(product);\n        return product;\n    }\n\n    public Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "productRepository.saveProduct(product)",
                    "lineNumber" : 18,
                    "columnNumber" : 20,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "    Logger logger = LoggerFactory.getLogger(ProductService.class);\n    @Autowired\n    private ProductRepository productRepository;\n\n    public Product saveProduct(Product product) {\n            return productRepository.saveProduct(product); /* <=== */ \n    }\n\n    public Product getProductById(String productId) {\n        return productRepository.getProductById(productId);\n    }"
                  },
                  {
                    "sample" : "com.analytics.analytics.entity.Product",
                    "lineNumber" : 17,
                    "columnNumber" : 12,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "\n    Logger logger = LoggerFactory.getLogger(ProductService.class);\n    @Autowired\n    private ProductRepository productRepository;\n\n    public Product saveProduct(Product product) { /* <=== */ \n            return productRepository.saveProduct(product);\n    }\n\n    public Product getProductById(String productId) {\n        return productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "productService.saveProduct(product)",
                    "lineNumber" : 76,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product); /* <=== */ \n\n\n\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();"
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, 1l, buyerEmail).build()",
                    "lineNumber" : 98,
                    "columnNumber" : 26,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);"
                  }
                ]
              },
              {
                "pathId" : "4275-4278-4280-4298-4301-4307-4680-4687-1705-1711-1712-1716-4683-4682-4690-4303-4378-4377-4376-4396-4393-4392-4391-4390",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 68,
                    "columnNumber" : 12,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email;\n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product(); /* <=== */ \n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 68,
                    "columnNumber" : 12,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email;\n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product(); /* <=== */ \n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 69,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email;\n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId()); /* <=== */ \n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 73,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail); /* <=== */ \n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product);\n\n"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 74,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode); /* <=== */ \n\n\t\t\tproductService.saveProduct(product);\n\n\n\t\t\tBuyer buyer = order.getBuyer();"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 76,
                    "columnNumber" : 31,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product); /* <=== */ \n\n\n\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 17,
                    "columnNumber" : 32,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "\n    Logger logger = LoggerFactory.getLogger(ProductService.class);\n    @Autowired\n    private ProductRepository productRepository;\n\n    public Product saveProduct(Product product) { /* <=== */ \n            return productRepository.saveProduct(product);\n    }\n\n    public Product getProductById(String productId) {\n        return productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 18,
                    "columnNumber" : 50,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "    Logger logger = LoggerFactory.getLogger(ProductService.class);\n    @Autowired\n    private ProductRepository productRepository;\n\n    public Product saveProduct(Product product) {\n            return productRepository.saveProduct(product); /* <=== */ \n    }\n\n    public Product getProductById(String productId) {\n        return productRepository.getProductById(productId);\n    }"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 19,
                    "columnNumber" : 32,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "\n\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Product saveProduct(Product product) { /* <=== */ \n        dynamoDBMapper.save(product);\n        return product;\n    }\n\n    public Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 20,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Product saveProduct(Product product) {\n        dynamoDBMapper.save(product); /* <=== */ \n        return product;\n    }\n\n    public Product getProductById(String productId) {\n        return dynamoDBMapper.load(Product.class, productId);"
                  },
                  {
                    "sample" : "com.analytics.analytics.entity.Product",
                    "lineNumber" : 19,
                    "columnNumber" : 12,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "\n\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Product saveProduct(Product product) { /* <=== */ \n        dynamoDBMapper.save(product);\n        return product;\n    }\n\n    public Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "productRepository.saveProduct(product)",
                    "lineNumber" : 18,
                    "columnNumber" : 20,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "    Logger logger = LoggerFactory.getLogger(ProductService.class);\n    @Autowired\n    private ProductRepository productRepository;\n\n    public Product saveProduct(Product product) {\n            return productRepository.saveProduct(product); /* <=== */ \n    }\n\n    public Product getProductById(String productId) {\n        return productRepository.getProductById(productId);\n    }"
                  },
                  {
                    "sample" : "com.analytics.analytics.entity.Product",
                    "lineNumber" : 17,
                    "columnNumber" : 12,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "\n    Logger logger = LoggerFactory.getLogger(ProductService.class);\n    @Autowired\n    private ProductRepository productRepository;\n\n    public Product saveProduct(Product product) { /* <=== */ \n            return productRepository.saveProduct(product);\n    }\n\n    public Product getProductById(String productId) {\n        return productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "productService.saveProduct(product)",
                    "lineNumber" : 76,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product); /* <=== */ \n\n\n\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();"
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, 1l, buyerEmail).build()",
                    "lineNumber" : 98,
                    "columnNumber" : 26,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);"
                  },
                  {
                    "sample" : "newIssue",
                    "lineNumber" : 98,
                    "columnNumber" : 15,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);"
                  },
                  {
                    "sample" : "newIssue",
                    "lineNumber" : 100,
                    "columnNumber" : 28,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);\n\t}\n"
                  },
                  {
                    "sample" : "this.issueClient",
                    "lineNumber" : 100,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);\n\t}\n"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue)",
                    "lineNumber" : 100,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);\n\t}\n"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue).claim()",
                    "lineNumber" : 100,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);\n\t}\n"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue).claim().getKey()",
                    "lineNumber" : 100,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);\n\t}\n"
                  }
                ]
              }
            ]
          },
          {
            "sinkType" : "third_parties",
            "id" : "ThirdParties.SDK.Amazonaws",
            "name" : "Amazonaws",
            "category" : "",
            "domains" : [
              "amazonaws.com"
            ],
            "sensitivity" : "",
            "isSensitive" : false,
            "tags" : {
              
            },
            "apiUrl" : [
            ],
            "databaseDetails" : {
              "dbName" : "",
              "dbVendor" : "",
              "dbLocation" : "",
              "dbOperation" : ""
            },
            "paths" : [
              {
                "pathId" : "679-682-684-687-693-715-721-718-5460-380-382-756-764-805-810-816-5474-767-776-887-900-897-894-893-892-902-2763-3017-901-925-932-924-923-922",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 93,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 94,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name); /* <=== */ \n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 97,
                    "columnNumber" : 44,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 106,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 107,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 107,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 106,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 97,
                    "columnNumber" : 27,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 99,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email); /* <=== */ \n\t\t\treturn Boolean.TRUE;\n\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 119,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) { /* <=== */ \n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}"
                  },
                  {
                    "sample" : "this.productRepository",
                    "lineNumber" : 120,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 139,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) { /* <=== */ \n\t\treturn dynamoDBMapper.load(Product.class, productId);\n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 140,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 140,
                    "columnNumber" : 45,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";"
                  },
                  {
                    "sample" : "String productId",
                    "lineNumber" : 139,
                    "columnNumber" : 32,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) { /* <=== */ \n\t\treturn dynamoDBMapper.load(Product.class, productId);\n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 120,
                    "columnNumber" : 54,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 122,
                    "columnNumber" : 53,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email); /* <=== */ \n\t}\n}\n\n\n@Repository"
                  },
                  {
                    "sample" : "String productId",
                    "lineNumber" : 160,
                    "columnNumber" : 41,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) { /* <=== */ \n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\","
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 161,
                    "columnNumber" : 56,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "Product.class",
                    "lineNumber" : 161,
                    "columnNumber" : 41,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 161,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "dynamoDBMapper.load(Product.class, productId)",
                    "lineNumber" : 161,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 161,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 162,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 88,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Product.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "void",
                    "lineNumber" : 89,
                    "columnNumber" : 12,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Product.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "product.setBuyerEmail(email)",
                    "lineNumber" : 162,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 167,
                    "columnNumber" : 38,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "new AttributeValue().withS(productId)",
                    "lineNumber" : 167,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "$obj11",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "new ExpectedAttributeValue(new AttributeValue().withS(productId))",
                    "lineNumber" : 166,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue( /* <=== */ \n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}"
                  }
                ]
              },
              {
                "pathId" : "679-682-684-687-693-715-721-718-5460-380-382-756-764-805-810-816-5474-767-776-887-900-897-894-893",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 93,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 94,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name); /* <=== */ \n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 97,
                    "columnNumber" : 44,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 106,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 107,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 107,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 106,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 97,
                    "columnNumber" : 27,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 99,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email); /* <=== */ \n\t\t\treturn Boolean.TRUE;\n\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 119,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) { /* <=== */ \n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}"
                  },
                  {
                    "sample" : "this.productRepository",
                    "lineNumber" : 120,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 139,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) { /* <=== */ \n\t\treturn dynamoDBMapper.load(Product.class, productId);\n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 140,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 140,
                    "columnNumber" : 45,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";"
                  },
                  {
                    "sample" : "String productId",
                    "lineNumber" : 139,
                    "columnNumber" : 32,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) { /* <=== */ \n\t\treturn dynamoDBMapper.load(Product.class, productId);\n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 120,
                    "columnNumber" : 54,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 122,
                    "columnNumber" : 53,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email); /* <=== */ \n\t}\n}\n\n\n@Repository"
                  },
                  {
                    "sample" : "String productId",
                    "lineNumber" : 160,
                    "columnNumber" : 41,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) { /* <=== */ \n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\","
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 161,
                    "columnNumber" : 56,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "Product.class",
                    "lineNumber" : 161,
                    "columnNumber" : 41,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 161,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "dynamoDBMapper.load(Product.class, productId)",
                    "lineNumber" : 161,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  }
                ]
              },
              {
                "pathId" : "679-682-684-687-693-715-721-718-717",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 93,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 94,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name); /* <=== */ \n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 97,
                    "columnNumber" : 44,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 106,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 107,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 107,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(product)",
                    "lineNumber" : 107,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  }
                ]
              },
              {
                "pathId" : "751-848-854-851-855",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 116,
                    "columnNumber" : 53,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);\n\t}\n\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product); /* <=== */ \n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 148,
                    "columnNumber" : 48,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";\n\t}\n\n\tpublic String updateProduct(String productId, Product product) { /* <=== */ \n\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 150,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn \"Product Id : \"+ productId +\" Deleted!\";\n\t}\n\n\tpublic String updateProduct(String productId, Product product) {\n\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 150,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn \"Product Id : \"+ productId +\" Deleted!\";\n\t}\n\n\tpublic String updateProduct(String productId, Product product) {\n\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  },
                  {
                    "sample" : "new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId)))",
                    "lineNumber" : 151,
                    "columnNumber" : 5,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\tpublic String updateProduct(String productId, Product product) {\n\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression() /* <=== */ \n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;"
                  }
                ]
              },
              {
                "pathId" : "4275-4278-4280-4298-4301-4307-4680-4687-1705-1711-1708-1707",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 68,
                    "columnNumber" : 12,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email;\n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product(); /* <=== */ \n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 68,
                    "columnNumber" : 12,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email;\n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product(); /* <=== */ \n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 69,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email;\n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId());\n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId()); /* <=== */ \n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 73,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail); /* <=== */ \n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product);\n\n"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 74,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode); /* <=== */ \n\n\t\t\tproductService.saveProduct(product);\n\n\n\t\t\tBuyer buyer = order.getBuyer();"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 76,
                    "columnNumber" : 31,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product); /* <=== */ \n\n\n\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 17,
                    "columnNumber" : 32,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "\n    Logger logger = LoggerFactory.getLogger(ProductService.class);\n    @Autowired\n    private ProductRepository productRepository;\n\n    public Product saveProduct(Product product) { /* <=== */ \n            return productRepository.saveProduct(product);\n    }\n\n    public Product getProductById(String productId) {\n        return productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 18,
                    "columnNumber" : 50,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "    Logger logger = LoggerFactory.getLogger(ProductService.class);\n    @Autowired\n    private ProductRepository productRepository;\n\n    public Product saveProduct(Product product) {\n            return productRepository.saveProduct(product); /* <=== */ \n    }\n\n    public Product getProductById(String productId) {\n        return productRepository.getProductById(productId);\n    }"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 19,
                    "columnNumber" : 32,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "\n\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Product saveProduct(Product product) { /* <=== */ \n        dynamoDBMapper.save(product);\n        return product;\n    }\n\n    public Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 20,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Product saveProduct(Product product) {\n        dynamoDBMapper.save(product); /* <=== */ \n        return product;\n    }\n\n    public Product getProductById(String productId) {\n        return dynamoDBMapper.load(Product.class, productId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 20,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Product saveProduct(Product product) {\n        dynamoDBMapper.save(product); /* <=== */ \n        return product;\n    }\n\n    public Product getProductById(String productId) {\n        return dynamoDBMapper.load(Product.class, productId);"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(product)",
                    "lineNumber" : 20,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Product saveProduct(Product product) {\n        dynamoDBMapper.save(product); /* <=== */ \n        return product;\n    }\n\n    public Product getProductById(String productId) {\n        return dynamoDBMapper.load(Product.class, productId);"
                  }
                ]
              },
              {
                "pathId" : "679-682-684-687-693-715-721-718-5460-380-382-756-764-805-810-816-5474-767-776-887-900-897-894-893-892-902-925-932-924-923-922-918-909-908-905-904",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 93,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 94,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name); /* <=== */ \n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 97,
                    "columnNumber" : 44,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 106,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 107,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 107,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 106,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 97,
                    "columnNumber" : 27,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 99,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email); /* <=== */ \n\t\t\treturn Boolean.TRUE;\n\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 119,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) { /* <=== */ \n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}"
                  },
                  {
                    "sample" : "this.productRepository",
                    "lineNumber" : 120,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 139,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) { /* <=== */ \n\t\treturn dynamoDBMapper.load(Product.class, productId);\n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 140,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 140,
                    "columnNumber" : 45,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";"
                  },
                  {
                    "sample" : "String productId",
                    "lineNumber" : 139,
                    "columnNumber" : 32,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) { /* <=== */ \n\t\treturn dynamoDBMapper.load(Product.class, productId);\n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 120,
                    "columnNumber" : 54,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 122,
                    "columnNumber" : 53,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email); /* <=== */ \n\t}\n}\n\n\n@Repository"
                  },
                  {
                    "sample" : "String productId",
                    "lineNumber" : 160,
                    "columnNumber" : 41,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) { /* <=== */ \n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\","
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 161,
                    "columnNumber" : 56,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "Product.class",
                    "lineNumber" : 161,
                    "columnNumber" : 41,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 161,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "dynamoDBMapper.load(Product.class, productId)",
                    "lineNumber" : 161,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 161,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 162,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 167,
                    "columnNumber" : 38,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "new AttributeValue().withS(productId)",
                    "lineNumber" : 167,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "$obj11",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "new ExpectedAttributeValue(new AttributeValue().withS(productId))",
                    "lineNumber" : 166,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue( /* <=== */ \n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}"
                  },
                  {
                    "sample" : "new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId)))",
                    "lineNumber" : 164,
                    "columnNumber" : 5,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression() /* <=== */ \n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 163,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 163,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(product, new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId))))",
                    "lineNumber" : 163,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  }
                ]
              },
              {
                "pathId" : "4726-4733-4741-1761-1767-1764-1768",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 30,
                    "columnNumber" : 17,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "    public String updateProduct(String productId, Product product) {\n        return productRepository.updateProduct(productId, product);\n    }\n\n    public String updateProductBuyerEmail(String productId, String email) {\n        Product product = productRepository.getProductById(productId); /* <=== */ \n        product.setBuyerEmail(email);\n        return productRepository.updateProduct(productId, product);\n    }\n}"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 31,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "        return productRepository.updateProduct(productId, product);\n    }\n\n    public String updateProductBuyerEmail(String productId, String email) {\n        Product product = productRepository.getProductById(productId);\n        product.setBuyerEmail(email); /* <=== */ \n        return productRepository.updateProduct(productId, product);\n    }\n}"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 32,
                    "columnNumber" : 59,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "    }\n\n    public String updateProductBuyerEmail(String productId, String email) {\n        Product product = productRepository.getProductById(productId);\n        product.setBuyerEmail(email);\n        return productRepository.updateProduct(productId, product); /* <=== */ \n    }\n}"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 33,
                    "columnNumber" : 51,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "    public String deleteProductById(String productId) {\n        dynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n        return \"Product Id : \"+ productId +\" Deleted!\";\n    }\n\n    public String updateProduct(String productId, Product product) { /* <=== */ \n        dynamoDBMapper.save(product,\n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"productId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 34,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n        return \"Product Id : \"+ productId +\" Deleted!\";\n    }\n\n    public String updateProduct(String productId, Product product) {\n        dynamoDBMapper.save(product, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"productId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(productId)\n                                )));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 34,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n        return \"Product Id : \"+ productId +\" Deleted!\";\n    }\n\n    public String updateProduct(String productId, Product product) {\n        dynamoDBMapper.save(product, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"productId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(productId)\n                                )));"
                  },
                  {
                    "sample" : "new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId)))",
                    "lineNumber" : 35,
                    "columnNumber" : 17,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "        return \"Product Id : \"+ productId +\" Deleted!\";\n    }\n\n    public String updateProduct(String productId, Product product) {\n        dynamoDBMapper.save(product,\n                new DynamoDBSaveExpression() /* <=== */ \n                        .withExpectedEntry(\"productId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(productId)\n                                )));\n        return productId;"
                  }
                ]
              },
              {
                "pathId" : "751-848-854-851-850",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 116,
                    "columnNumber" : 53,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);\n\t}\n\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product); /* <=== */ \n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 148,
                    "columnNumber" : 48,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";\n\t}\n\n\tpublic String updateProduct(String productId, Product product) { /* <=== */ \n\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 150,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn \"Product Id : \"+ productId +\" Deleted!\";\n\t}\n\n\tpublic String updateProduct(String productId, Product product) {\n\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 150,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn \"Product Id : \"+ productId +\" Deleted!\";\n\t}\n\n\tpublic String updateProduct(String productId, Product product) {\n\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(product, new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId))))",
                    "lineNumber" : 150,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn \"Product Id : \"+ productId +\" Deleted!\";\n\t}\n\n\tpublic String updateProduct(String productId, Product product) {\n\n\t\tdynamoDBMapper.save(product, /* <=== */ \n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));"
                  }
                ]
              },
              {
                "pathId" : "679-682-684-687-693-715-721-718-5460-380-382-756-764-805-810-816-5474-767-776-887-900-897-894-893-892-902-2763-3017-901-925-932-924",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 93,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 94,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name); /* <=== */ \n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 97,
                    "columnNumber" : 44,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 106,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 107,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 107,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 106,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 97,
                    "columnNumber" : 27,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 99,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email); /* <=== */ \n\t\t\treturn Boolean.TRUE;\n\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 119,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) { /* <=== */ \n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}"
                  },
                  {
                    "sample" : "this.productRepository",
                    "lineNumber" : 120,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 139,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) { /* <=== */ \n\t\treturn dynamoDBMapper.load(Product.class, productId);\n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 140,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 140,
                    "columnNumber" : 45,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";"
                  },
                  {
                    "sample" : "String productId",
                    "lineNumber" : 139,
                    "columnNumber" : 32,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) { /* <=== */ \n\t\treturn dynamoDBMapper.load(Product.class, productId);\n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 120,
                    "columnNumber" : 54,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 122,
                    "columnNumber" : 53,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email); /* <=== */ \n\t}\n}\n\n\n@Repository"
                  },
                  {
                    "sample" : "String productId",
                    "lineNumber" : 160,
                    "columnNumber" : 41,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) { /* <=== */ \n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\","
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 161,
                    "columnNumber" : 56,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "Product.class",
                    "lineNumber" : 161,
                    "columnNumber" : 41,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 161,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "dynamoDBMapper.load(Product.class, productId)",
                    "lineNumber" : 161,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 161,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 162,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 88,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Product.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "void",
                    "lineNumber" : 89,
                    "columnNumber" : 12,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/entity/Product.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "product.setBuyerEmail(email)",
                    "lineNumber" : 162,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 167,
                    "columnNumber" : 38,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "new AttributeValue().withS(productId)",
                    "lineNumber" : 167,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  }
                ]
              },
              {
                "pathId" : "679-682-684-687-693-715-721-718-5460-380-382-756-764-805-810-809",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 93,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 94,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name); /* <=== */ \n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 97,
                    "columnNumber" : 44,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 106,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 107,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 107,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 106,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 97,
                    "columnNumber" : 27,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 99,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email); /* <=== */ \n\t\t\treturn Boolean.TRUE;\n\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 119,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) { /* <=== */ \n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}"
                  },
                  {
                    "sample" : "this.productRepository",
                    "lineNumber" : 120,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 139,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) { /* <=== */ \n\t\treturn dynamoDBMapper.load(Product.class, productId);\n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 140,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";"
                  },
                  {
                    "sample" : "dynamoDBMapper.load(Product.class, productId)",
                    "lineNumber" : 140,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";"
                  }
                ]
              },
              {
                "pathId" : "4726-4733-4741-1761-1767-1764-1763",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 30,
                    "columnNumber" : 17,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "    public String updateProduct(String productId, Product product) {\n        return productRepository.updateProduct(productId, product);\n    }\n\n    public String updateProductBuyerEmail(String productId, String email) {\n        Product product = productRepository.getProductById(productId); /* <=== */ \n        product.setBuyerEmail(email);\n        return productRepository.updateProduct(productId, product);\n    }\n}"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 31,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "        return productRepository.updateProduct(productId, product);\n    }\n\n    public String updateProductBuyerEmail(String productId, String email) {\n        Product product = productRepository.getProductById(productId);\n        product.setBuyerEmail(email); /* <=== */ \n        return productRepository.updateProduct(productId, product);\n    }\n}"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 32,
                    "columnNumber" : 59,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "    }\n\n    public String updateProductBuyerEmail(String productId, String email) {\n        Product product = productRepository.getProductById(productId);\n        product.setBuyerEmail(email);\n        return productRepository.updateProduct(productId, product); /* <=== */ \n    }\n}"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 33,
                    "columnNumber" : 51,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "    public String deleteProductById(String productId) {\n        dynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n        return \"Product Id : \"+ productId +\" Deleted!\";\n    }\n\n    public String updateProduct(String productId, Product product) { /* <=== */ \n        dynamoDBMapper.save(product,\n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"productId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 34,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n        return \"Product Id : \"+ productId +\" Deleted!\";\n    }\n\n    public String updateProduct(String productId, Product product) {\n        dynamoDBMapper.save(product, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"productId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(productId)\n                                )));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 34,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n        return \"Product Id : \"+ productId +\" Deleted!\";\n    }\n\n    public String updateProduct(String productId, Product product) {\n        dynamoDBMapper.save(product, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"productId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(productId)\n                                )));"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(product, new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId))))",
                    "lineNumber" : 34,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "        dynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n        return \"Product Id : \"+ productId +\" Deleted!\";\n    }\n\n    public String updateProduct(String productId, Product product) {\n        dynamoDBMapper.save(product, /* <=== */ \n                new DynamoDBSaveExpression()\n                        .withExpectedEntry(\"productId\",\n                                new ExpectedAttributeValue(\n                                        new AttributeValue().withS(productId)\n                                )));"
                  }
                ]
              },
              {
                "pathId" : "798-795-794",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 135,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 135,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId);"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(product)",
                    "lineNumber" : 135,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId);"
                  }
                ]
              },
              {
                "pathId" : "679-682-684-687-693-715-721-718-5460-380-382-756-764-805-810-816-5474-767-776-887-900-897-894-893-892-902-925-932-924-923-922-918-909",
                "path" : [
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 92,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t@Autowired\n\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product(); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 93,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tprivate DynamoDBMapper dynamoDBMapper;\n\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 94,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\n\tpublic Boolean addProductMetric(String name, String email, String dateOfBirth, String lastName) {\n\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name); /* <=== */ \n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 97,
                    "columnNumber" : 44,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "Product product",
                    "lineNumber" : 106,
                    "columnNumber" : 29,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 107,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 107,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product); /* <=== */ \n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 106,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}\n\n\tpublic Product saveProduct(Product product) { /* <=== */ \n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 97,
                    "columnNumber" : 27,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = new Product();\n\t\tproduct.setBuyerEmail(email);\n\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product); /* <=== */ \n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email);\n\t\t\treturn Boolean.TRUE;\n\t\t}\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 99,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setName(name);\n\n\n\t\tProduct productResult = this.saveProduct(product);\n\t\tif (productResult != null) {\n\t\t\tthis.updateProductBuyerEmail(\"42b7wr\", email); /* <=== */ \n\t\t\treturn Boolean.TRUE;\n\t\t}\n\n\t\treturn Boolean.FALSE;\n\t}"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 119,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) { /* <=== */ \n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}"
                  },
                  {
                    "sample" : "this.productRepository",
                    "lineNumber" : 120,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 139,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) { /* <=== */ \n\t\treturn dynamoDBMapper.load(Product.class, productId);\n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 140,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 140,
                    "columnNumber" : 45,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) {\n\t\treturn dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));\n\t\treturn \"Product Id : \"+ productId +\" Deleted!\";"
                  },
                  {
                    "sample" : "String productId",
                    "lineNumber" : 139,
                    "columnNumber" : 32,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic Product saveProduct(Product product) {\n\t\tdynamoDBMapper.save(product);\n\t\treturn product;\n\t}\n\n\tpublic Product getProductById(String productId) { /* <=== */ \n\t\treturn dynamoDBMapper.load(Product.class, productId);\n\t}\n\n\tpublic String deleteProductById(String productId) {\n\t\tdynamoDBMapper.delete(dynamoDBMapper.load(Product.class, productId));"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 120,
                    "columnNumber" : 54,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\tpublic String updateProduct(String productId, Product product) {\n\t\treturn productRepository.updateProduct(productId, product);\n\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email);\n\t}\n}\n"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 122,
                    "columnNumber" : 53,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\tpublic String updateProductBuyerEmail(String productId, String email) {\n\t\tProduct product = productRepository.getProductById(productId);\n\t\tproduct.setBuyerEmail(email);\n\t\treturn productRepository.updateProductWithEmailId(productId, email); /* <=== */ \n\t}\n}\n\n\n@Repository"
                  },
                  {
                    "sample" : "String productId",
                    "lineNumber" : 160,
                    "columnNumber" : 41,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) { /* <=== */ \n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\","
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 161,
                    "columnNumber" : 56,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "Product.class",
                    "lineNumber" : 161,
                    "columnNumber" : 41,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 161,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "dynamoDBMapper.load(Product.class, productId)",
                    "lineNumber" : 161,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 161,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\treturn productId;\n\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId); /* <=== */ \n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue("
                  },
                  {
                    "sample" : "product",
                    "lineNumber" : 162,
                    "columnNumber" : 3,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t}\n\n\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email); /* <=== */ \n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)"
                  },
                  {
                    "sample" : "productId",
                    "lineNumber" : 167,
                    "columnNumber" : 38,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "new AttributeValue().withS(productId)",
                    "lineNumber" : 167,
                    "columnNumber" : 11,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId) /* <=== */ \n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}\n"
                  },
                  {
                    "sample" : "$obj11",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "new ExpectedAttributeValue(new AttributeValue().withS(productId))",
                    "lineNumber" : 166,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression()\n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue( /* <=== */ \n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;\n\t}\n}"
                  },
                  {
                    "sample" : "new DynamoDBSaveExpression().withExpectedEntry(\"productId\", new ExpectedAttributeValue(new AttributeValue().withS(productId)))",
                    "lineNumber" : 164,
                    "columnNumber" : 5,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/controller/OrderController.java",
                    "excerpt" : "\n\tpublic String updateProductWithEmailId(String productId, String email) {\n\t\tProduct product = dynamoDBMapper.load(Product.class, productId);\n\t\tproduct.setBuyerEmail(email);\n\t\tdynamoDBMapper.save(product,\n\t\t\t\tnew DynamoDBSaveExpression() /* <=== */ \n\t\t\t\t\t\t.withExpectedEntry(\"productId\",\n\t\t\t\t\t\t\t\tnew ExpectedAttributeValue(\n\t\t\t\t\t\t\t\t\t\tnew AttributeValue().withS(productId)\n\t\t\t\t\t\t\t\t)));\n\t\treturn productId;"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "sourceId" : "Data.Sensitive.AccountData.AccountName",
        "sinks" : [
          {
            "sinkType" : "third_parties",
            "id" : "ThirdParties.SDK.Atlassian",
            "name" : "Atlassian",
            "category" : "",
            "domains" : [
              "atlassian.com"
            ],
            "sensitivity" : "",
            "isSensitive" : false,
            "tags" : {
              
            },
            "apiUrl" : [
            ],
            "databaseDetails" : {
              "dbName" : "",
              "dbVendor" : "",
              "dbLocation" : "",
              "dbOperation" : ""
            },
            "paths" : [
              {
                "pathId" : "4634-75-82-80-43-45-44-49-120-5428-44-110-108-99",
                "path" : [
                  {
                    "sample" : "this.username",
                    "lineNumber" : 144,
                    "columnNumber" : 49,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\t@Value(\"${jira.project.key}\")\n\tprivate String projectKey;\n\n\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl); /* <=== */ \n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder("
                  },
                  {
                    "sample" : "String jiraAaccessKey",
                    "lineNumber" : 16,
                    "columnNumber" : 23,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/client/JiraClient.java",
                    "excerpt" : "    private String jiraSecret;\n    private String jiraUrl;\n    private JiraRestClient restClient;\n\n\n    public JiraClient(String jiraAaccessKey, String jiraSecret, String jiraUrl) { /* <=== */ \n        this.jiraAaccessKey = jiraAaccessKey;\n        this.jiraSecret = jiraSecret;\n        this.jiraUrl = jiraUrl;\n        this.restClient = getJiraRestClient();\n    }"
                  },
                  {
                    "sample" : "jiraAaccessKey",
                    "lineNumber" : 17,
                    "columnNumber" : 31,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/client/JiraClient.java",
                    "excerpt" : "    private String jiraUrl;\n    private JiraRestClient restClient;\n\n\n    public JiraClient(String jiraAaccessKey, String jiraSecret, String jiraUrl) {\n        this.jiraAaccessKey = jiraAaccessKey; /* <=== */ \n        this.jiraSecret = jiraSecret;\n        this.jiraUrl = jiraUrl;\n        this.restClient = getJiraRestClient();\n    }\n"
                  },
                  {
                    "sample" : "this.jiraAaccessKey",
                    "lineNumber" : 17,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/client/JiraClient.java",
                    "excerpt" : "    private String jiraUrl;\n    private JiraRestClient restClient;\n\n\n    public JiraClient(String jiraAaccessKey, String jiraSecret, String jiraUrl) {\n        this.jiraAaccessKey = jiraAaccessKey; /* <=== */ \n        this.jiraSecret = jiraSecret;\n        this.jiraUrl = jiraUrl;\n        this.restClient = getJiraRestClient();\n    }\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 20,
                    "columnNumber" : 27,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/client/JiraClient.java",
                    "excerpt" : "\n    public JiraClient(String jiraAaccessKey, String jiraSecret, String jiraUrl) {\n        this.jiraAaccessKey = jiraAaccessKey;\n        this.jiraSecret = jiraSecret;\n        this.jiraUrl = jiraUrl;\n        this.restClient = getJiraRestClient(); /* <=== */ \n    }\n\n    private JiraRestClient getJiraRestClient() {\n        return new AsynchronousJiraRestClientFactory()\n                .createWithBasicHttpAuthentication(getJiraUri(), this.jiraAaccessKey, this.jiraSecret);"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 23,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/client/JiraClient.java",
                    "excerpt" : "        this.jiraSecret = jiraSecret;\n        this.jiraUrl = jiraUrl;\n        this.restClient = getJiraRestClient();\n    }\n\n    private JiraRestClient getJiraRestClient() { /* <=== */ \n        return new AsynchronousJiraRestClientFactory()\n                .createWithBasicHttpAuthentication(getJiraUri(), this.jiraAaccessKey, this.jiraSecret);\n    }\n\n    private URI getJiraUri() {"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 25,
                    "columnNumber" : 52,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/client/JiraClient.java",
                    "excerpt" : "        this.restClient = getJiraRestClient();\n    }\n\n    private JiraRestClient getJiraRestClient() {\n        return new AsynchronousJiraRestClientFactory()\n                .createWithBasicHttpAuthentication(getJiraUri(), this.jiraAaccessKey, this.jiraSecret); /* <=== */ \n    }\n\n    private URI getJiraUri() {\n        return URI.create(this.jiraUrl);\n    }"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 28,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/client/JiraClient.java",
                    "excerpt" : "    private JiraRestClient getJiraRestClient() {\n        return new AsynchronousJiraRestClientFactory()\n                .createWithBasicHttpAuthentication(getJiraUri(), this.jiraAaccessKey, this.jiraSecret);\n    }\n\n    private URI getJiraUri() { /* <=== */ \n        return URI.create(this.jiraUrl);\n    }\n\n    public JiraRestClient getRestClient() {\n        return restClient;"
                  },
                  {
                    "sample" : "this.jiraUrl",
                    "lineNumber" : 29,
                    "columnNumber" : 27,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/client/JiraClient.java",
                    "excerpt" : "        return new AsynchronousJiraRestClientFactory()\n                .createWithBasicHttpAuthentication(getJiraUri(), this.jiraAaccessKey, this.jiraSecret);\n    }\n\n    private URI getJiraUri() {\n        return URI.create(this.jiraUrl); /* <=== */ \n    }\n\n    public JiraRestClient getRestClient() {\n        return restClient;\n    }"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 28,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/client/JiraClient.java",
                    "excerpt" : "    private JiraRestClient getJiraRestClient() {\n        return new AsynchronousJiraRestClientFactory()\n                .createWithBasicHttpAuthentication(getJiraUri(), this.jiraAaccessKey, this.jiraSecret);\n    }\n\n    private URI getJiraUri() { /* <=== */ \n        return URI.create(this.jiraUrl);\n    }\n\n    public JiraRestClient getRestClient() {\n        return restClient;"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 25,
                    "columnNumber" : 52,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/client/JiraClient.java",
                    "excerpt" : "        this.restClient = getJiraRestClient();\n    }\n\n    private JiraRestClient getJiraRestClient() {\n        return new AsynchronousJiraRestClientFactory()\n                .createWithBasicHttpAuthentication(getJiraUri(), this.jiraAaccessKey, this.jiraSecret); /* <=== */ \n    }\n\n    private URI getJiraUri() {\n        return URI.create(this.jiraUrl);\n    }"
                  },
                  {
                    "sample" : "this.jiraSecret",
                    "lineNumber" : 25,
                    "columnNumber" : 87,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/client/JiraClient.java",
                    "excerpt" : "        this.restClient = getJiraRestClient();\n    }\n\n    private JiraRestClient getJiraRestClient() {\n        return new AsynchronousJiraRestClientFactory()\n                .createWithBasicHttpAuthentication(getJiraUri(), this.jiraAaccessKey, this.jiraSecret); /* <=== */ \n    }\n\n    private URI getJiraUri() {\n        return URI.create(this.jiraUrl);\n    }"
                  },
                  {
                    "sample" : "this.jiraAaccessKey",
                    "lineNumber" : 25,
                    "columnNumber" : 66,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/client/JiraClient.java",
                    "excerpt" : "        this.restClient = getJiraRestClient();\n    }\n\n    private JiraRestClient getJiraRestClient() {\n        return new AsynchronousJiraRestClientFactory()\n                .createWithBasicHttpAuthentication(getJiraUri(), this.jiraAaccessKey, this.jiraSecret); /* <=== */ \n    }\n\n    private URI getJiraUri() {\n        return URI.create(this.jiraUrl);\n    }"
                  },
                  {
                    "sample" : "new AsynchronousJiraRestClientFactory().createWithBasicHttpAuthentication(getJiraUri(), this.jiraAaccessKey, this.jiraSecret)",
                    "lineNumber" : 24,
                    "columnNumber" : 16,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/client/JiraClient.java",
                    "excerpt" : "        this.jiraUrl = jiraUrl;\n        this.restClient = getJiraRestClient();\n    }\n\n    private JiraRestClient getJiraRestClient() {\n        return new AsynchronousJiraRestClientFactory() /* <=== */ \n                .createWithBasicHttpAuthentication(getJiraUri(), this.jiraAaccessKey, this.jiraSecret);\n    }\n\n    private URI getJiraUri() {\n        return URI.create(this.jiraUrl);"
                  }
                ]
              },
              {
                "pathId" : "4161-4367-4535-4555-4554-4553-4549-4548-4547-4568-4565-4564-4563-4562-4561-4571-4366-4378-4377",
                "path" : [
                  {
                    "sample" : "this",
                    "lineNumber" : 66,
                    "columnNumber" : 26,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t}\n\n\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email;\n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId()); /* <=== */ \n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);"
                  },
                  {
                    "sample" : "this.jiraService",
                    "lineNumber" : 96,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\t\t\tlogger.error(\"Exception while creating order: \" +\n\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail); /* <=== */ \n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 147,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) { /* <=== */ \n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}"
                  },
                  {
                    "sample" : "this.projectKey",
                    "lineNumber" : 150,
                    "columnNumber" : 5,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build(); /* <=== */ \n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient"
                  },
                  {
                    "sample" : "$obj5",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, issueType, issueSummary)",
                    "lineNumber" : 149,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {"
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, issueType, issueSummary).build()",
                    "lineNumber" : 149,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {"
                  },
                  {
                    "sample" : "newIssue",
                    "lineNumber" : 149,
                    "columnNumber" : 14,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {"
                  },
                  {
                    "sample" : "newIssue",
                    "lineNumber" : 151,
                    "columnNumber" : 34,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "this.issueClient",
                    "lineNumber" : 151,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue)",
                    "lineNumber" : 151,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue).claim()",
                    "lineNumber" : 151,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue).claim().getKey()",
                    "lineNumber" : 151,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "java.lang.String",
                    "lineNumber" : 147,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) { /* <=== */ \n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}"
                  },
                  {
                    "sample" : "jiraService.createIssue(1l, \"Exception while creating order for \" + buyerEmail)",
                    "lineNumber" : 96,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\t\t\tlogger.error(\"Exception while creating order: \" +\n\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail); /* <=== */ \n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;"
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, 1l, buyerEmail).build()",
                    "lineNumber" : 98,
                    "columnNumber" : 26,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);"
                  }
                ]
              },
              {
                "pathId" : "4481-5046-5049-4480-4498-126-128-134-4497-4496",
                "path" : [
                  {
                    "sample" : "this",
                    "lineNumber" : 54,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate BuyerService buyerService;\n\n\t@Autowired\n\tprivate JiraServiceImpl jiraService;\n\n\tprivate JiraClient jiraClient = new JiraClient(jiraAaccessKey, jiraSecret, jiraUrl); /* <=== */ \n\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\t@Override\n\tpublic List<Order> getOrders() {"
                  },
                  {
                    "sample" : "p1",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "<unknown>",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "this.jiraClient",
                    "lineNumber" : 54,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate BuyerService buyerService;\n\n\t@Autowired\n\tprivate JiraServiceImpl jiraService;\n\n\tprivate JiraClient jiraClient = new JiraClient(jiraAaccessKey, jiraSecret, jiraUrl); /* <=== */ \n\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\t@Override\n\tpublic List<Order> getOrders() {"
                  },
                  {
                    "sample" : "this.jiraClient",
                    "lineNumber" : 56,
                    "columnNumber" : 40,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t@Autowired\n\tprivate JiraServiceImpl jiraService;\n\n\tprivate JiraClient jiraClient = new JiraClient(jiraAaccessKey, jiraSecret, jiraUrl);\n\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient(); /* <=== */ \n\n\t@Override\n\tpublic List<Order> getOrders() {\n\t\treturn dao.getOrders();\n\t}"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 32,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/client/JiraClient.java",
                    "excerpt" : "\n    private URI getJiraUri() {\n        return URI.create(this.jiraUrl);\n    }\n\n    public JiraRestClient getRestClient() { /* <=== */ \n        return restClient;\n    }\n}"
                  },
                  {
                    "sample" : "com.atlassian.jira.rest.client.api.JiraRestClient",
                    "lineNumber" : 32,
                    "columnNumber" : 12,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/client/JiraClient.java",
                    "excerpt" : "\n    private URI getJiraUri() {\n        return URI.create(this.jiraUrl);\n    }\n\n    public JiraRestClient getRestClient() { /* <=== */ \n        return restClient;\n    }\n}"
                  },
                  {
                    "sample" : "jiraClient.getRestClient()",
                    "lineNumber" : 56,
                    "columnNumber" : 40,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t@Autowired\n\tprivate JiraServiceImpl jiraService;\n\n\tprivate JiraClient jiraClient = new JiraClient(jiraAaccessKey, jiraSecret, jiraUrl);\n\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient(); /* <=== */ \n\n\t@Override\n\tpublic List<Order> getOrders() {\n\t\treturn dao.getOrders();\n\t}"
                  },
                  {
                    "sample" : "jiraClient.getRestClient().getIssueClient()",
                    "lineNumber" : 56,
                    "columnNumber" : 40,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t@Autowired\n\tprivate JiraServiceImpl jiraService;\n\n\tprivate JiraClient jiraClient = new JiraClient(jiraAaccessKey, jiraSecret, jiraUrl);\n\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient(); /* <=== */ \n\n\t@Override\n\tpublic List<Order> getOrders() {\n\t\treturn dao.getOrders();\n\t}"
                  }
                ]
              },
              {
                "pathId" : "4161-4367-4535-4555-4554-4553-4549-4548",
                "path" : [
                  {
                    "sample" : "this",
                    "lineNumber" : 66,
                    "columnNumber" : 26,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t}\n\n\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email;\n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId()); /* <=== */ \n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);"
                  },
                  {
                    "sample" : "this.jiraService",
                    "lineNumber" : 96,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\t\t\tlogger.error(\"Exception while creating order: \" +\n\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail); /* <=== */ \n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 147,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) { /* <=== */ \n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}"
                  },
                  {
                    "sample" : "this.projectKey",
                    "lineNumber" : 150,
                    "columnNumber" : 5,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build(); /* <=== */ \n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient"
                  },
                  {
                    "sample" : "$obj5",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, issueType, issueSummary)",
                    "lineNumber" : 149,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {"
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, issueType, issueSummary).build()",
                    "lineNumber" : 149,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {"
                  }
                ]
              },
              {
                "pathId" : "4182-4573-4579-4578",
                "path" : [
                  {
                    "sample" : "this",
                    "lineNumber" : 166,
                    "columnNumber" : 31,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\tjiraClient.getRestClient().getIssueClient()\n\t\t\t\t.addComment(issue.getCommentsUri(), Comment.valueOf(commentBody));\n\t}\n\n\tpublic List<Comment> getAllComments(String issueKey) {\n\t\treturn StreamSupport.stream(getIssue(issueKey).getComments().spliterator(), false) /* <=== */ \n\t\t\t\t.collect(Collectors.toList());\n\t}\n\n}"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 154,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) { /* <=== */ \n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)\n\t\t\t\t.claim();\n\t}\n"
                  },
                  {
                    "sample" : "this.issueClient",
                    "lineNumber" : 155,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient /* <=== */ \n\t\t\t\t.getIssue(issueKey)\n\t\t\t\t.claim();\n\t}\n\n\tpublic void addComment(Issue issue, String commentBody) {"
                  },
                  {
                    "sample" : "issueClient.getIssue(issueKey)",
                    "lineNumber" : 155,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient /* <=== */ \n\t\t\t\t.getIssue(issueKey)\n\t\t\t\t.claim();\n\t}\n\n\tpublic void addComment(Issue issue, String commentBody) {"
                  }
                ]
              },
              {
                "pathId" : "4161-4367-4535-4555-4554-4553-4549-4548-4547-4568-4565-4564-4563-4562",
                "path" : [
                  {
                    "sample" : "this",
                    "lineNumber" : 66,
                    "columnNumber" : 26,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t}\n\n\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email;\n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId()); /* <=== */ \n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);"
                  },
                  {
                    "sample" : "this.jiraService",
                    "lineNumber" : 96,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\t\t\tlogger.error(\"Exception while creating order: \" +\n\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail); /* <=== */ \n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 147,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) { /* <=== */ \n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}"
                  },
                  {
                    "sample" : "this.projectKey",
                    "lineNumber" : 150,
                    "columnNumber" : 5,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build(); /* <=== */ \n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient"
                  },
                  {
                    "sample" : "$obj5",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, issueType, issueSummary)",
                    "lineNumber" : 149,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {"
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, issueType, issueSummary).build()",
                    "lineNumber" : 149,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {"
                  },
                  {
                    "sample" : "newIssue",
                    "lineNumber" : 149,
                    "columnNumber" : 14,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {"
                  },
                  {
                    "sample" : "newIssue",
                    "lineNumber" : 151,
                    "columnNumber" : 34,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "this.issueClient",
                    "lineNumber" : 151,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue)",
                    "lineNumber" : 151,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue).claim()",
                    "lineNumber" : 151,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue).claim().getKey()",
                    "lineNumber" : 151,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  }
                ]
              },
              {
                "pathId" : "4182-4573-4579-4578-4577-4576-4585-4614-4613",
                "path" : [
                  {
                    "sample" : "this",
                    "lineNumber" : 166,
                    "columnNumber" : 31,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\tjiraClient.getRestClient().getIssueClient()\n\t\t\t\t.addComment(issue.getCommentsUri(), Comment.valueOf(commentBody));\n\t}\n\n\tpublic List<Comment> getAllComments(String issueKey) {\n\t\treturn StreamSupport.stream(getIssue(issueKey).getComments().spliterator(), false) /* <=== */ \n\t\t\t\t.collect(Collectors.toList());\n\t}\n\n}"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 154,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) { /* <=== */ \n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)\n\t\t\t\t.claim();\n\t}\n"
                  },
                  {
                    "sample" : "this.issueClient",
                    "lineNumber" : 155,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient /* <=== */ \n\t\t\t\t.getIssue(issueKey)\n\t\t\t\t.claim();\n\t}\n\n\tpublic void addComment(Issue issue, String commentBody) {"
                  },
                  {
                    "sample" : "issueClient.getIssue(issueKey)",
                    "lineNumber" : 155,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient /* <=== */ \n\t\t\t\t.getIssue(issueKey)\n\t\t\t\t.claim();\n\t}\n\n\tpublic void addComment(Issue issue, String commentBody) {"
                  },
                  {
                    "sample" : "issueClient.getIssue(issueKey).claim()",
                    "lineNumber" : 155,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient /* <=== */ \n\t\t\t\t.getIssue(issueKey)\n\t\t\t\t.claim();\n\t}\n\n\tpublic void addComment(Issue issue, String commentBody) {"
                  },
                  {
                    "sample" : "com.atlassian.jira.rest.client.api.domain.Issue",
                    "lineNumber" : 154,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) { /* <=== */ \n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)\n\t\t\t\t.claim();\n\t}\n"
                  },
                  {
                    "sample" : "this.getIssue(issueKey)",
                    "lineNumber" : 166,
                    "columnNumber" : 31,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\tjiraClient.getRestClient().getIssueClient()\n\t\t\t\t.addComment(issue.getCommentsUri(), Comment.valueOf(commentBody));\n\t}\n\n\tpublic List<Comment> getAllComments(String issueKey) {\n\t\treturn StreamSupport.stream(getIssue(issueKey).getComments().spliterator(), false) /* <=== */ \n\t\t\t\t.collect(Collectors.toList());\n\t}\n\n}"
                  },
                  {
                    "sample" : "this.getIssue(issueKey).getComments()",
                    "lineNumber" : 166,
                    "columnNumber" : 31,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\tjiraClient.getRestClient().getIssueClient()\n\t\t\t\t.addComment(issue.getCommentsUri(), Comment.valueOf(commentBody));\n\t}\n\n\tpublic List<Comment> getAllComments(String issueKey) {\n\t\treturn StreamSupport.stream(getIssue(issueKey).getComments().spliterator(), false) /* <=== */ \n\t\t\t\t.collect(Collectors.toList());\n\t}\n\n}"
                  }
                ]
              },
              {
                "pathId" : "4161-4367-4535-4555-4554-4553-4549-4548-4547-4568-4565-4564-4563-4562-4561-4571-4366-4378-4377-4376-4396-4393-4392-4391-4390",
                "path" : [
                  {
                    "sample" : "this",
                    "lineNumber" : 66,
                    "columnNumber" : 26,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t}\n\n\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email;\n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId()); /* <=== */ \n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);"
                  },
                  {
                    "sample" : "this.jiraService",
                    "lineNumber" : 96,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\t\t\tlogger.error(\"Exception while creating order: \" +\n\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail); /* <=== */ \n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 147,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) { /* <=== */ \n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}"
                  },
                  {
                    "sample" : "this.projectKey",
                    "lineNumber" : 150,
                    "columnNumber" : 5,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build(); /* <=== */ \n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient"
                  },
                  {
                    "sample" : "$obj5",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, issueType, issueSummary)",
                    "lineNumber" : 149,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {"
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, issueType, issueSummary).build()",
                    "lineNumber" : 149,
                    "columnNumber" : 25,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {"
                  },
                  {
                    "sample" : "newIssue",
                    "lineNumber" : 149,
                    "columnNumber" : 14,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}\n\n\tpublic Issue getIssue(String issueKey) {"
                  },
                  {
                    "sample" : "newIssue",
                    "lineNumber" : 151,
                    "columnNumber" : 34,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "this.issueClient",
                    "lineNumber" : 151,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue)",
                    "lineNumber" : 151,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue).claim()",
                    "lineNumber" : 151,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue).claim().getKey()",
                    "lineNumber" : 151,
                    "columnNumber" : 10,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t}\n\n\tpublic Issue getIssue(String issueKey) {\n\t\treturn issueClient\n\t\t\t\t.getIssue(issueKey)"
                  },
                  {
                    "sample" : "java.lang.String",
                    "lineNumber" : 147,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) { /* <=== */ \n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();\n\t\treturn issueClient.createIssue(newIssue).claim().getKey();\n\t}"
                  },
                  {
                    "sample" : "jiraService.createIssue(1l, \"Exception while creating order for \" + buyerEmail)",
                    "lineNumber" : 96,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\t\t\tlogger.error(\"Exception while creating order: \" +\n\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail); /* <=== */ \n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;"
                  },
                  {
                    "sample" : "new IssueInputBuilder(projectKey, 1l, buyerEmail).build()",
                    "lineNumber" : 98,
                    "columnNumber" : 26,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);"
                  },
                  {
                    "sample" : "newIssue",
                    "lineNumber" : 98,
                    "columnNumber" : 15,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"\"+ order.getId() + \"\" +\n\t\t\t\t\t\"Buyer Email\"+ buyerEmail + \"\" +\n\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder( /* <=== */ \n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey();\n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);"
                  },
                  {
                    "sample" : "newIssue",
                    "lineNumber" : 100,
                    "columnNumber" : 28,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);\n\t}\n"
                  },
                  {
                    "sample" : "this.issueClient",
                    "lineNumber" : 100,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);\n\t}\n"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue)",
                    "lineNumber" : 100,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);\n\t}\n"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue).claim()",
                    "lineNumber" : 100,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);\n\t}\n"
                  },
                  {
                    "sample" : "issueClient.createIssue(newIssue).claim().getKey()",
                    "lineNumber" : 100,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\t\t\t\"buyer pin code\"+ buyerPincode);\n\t\t\tjiraService.createIssue(1l, \"Exception while creating order for \"+ buyerEmail);\n\n\t\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\t\tprojectKey, 1l, buyerEmail).build();\n\t\t\tissueClient.createIssue(newIssue).claim().getKey(); /* <=== */ \n\t\t\treturn null;\n\t\t}\n\t\treturn dao.createOrder(order);\n\t}\n"
                  }
                ]
              },
              {
                "pathId" : "4632-5046-5049-4631-4649-126-128-134-4648-4647",
                "path" : [
                  {
                    "sample" : "this",
                    "lineNumber" : 144,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\t@Value(\"${jira.project.key}\")\n\tprivate String projectKey;\n\n\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl); /* <=== */ \n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder("
                  },
                  {
                    "sample" : "p1",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "<unknown>",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "this.jiraClient",
                    "lineNumber" : 144,
                    "columnNumber" : 21,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\n\t@Value(\"${jira.project.key}\")\n\tprivate String projectKey;\n\n\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl); /* <=== */ \n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient();\n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder("
                  },
                  {
                    "sample" : "this.jiraClient",
                    "lineNumber" : 145,
                    "columnNumber" : 40,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t@Value(\"${jira.project.key}\")\n\tprivate String projectKey;\n\n\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient(); /* <=== */ \n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 32,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/client/JiraClient.java",
                    "excerpt" : "\n    private URI getJiraUri() {\n        return URI.create(this.jiraUrl);\n    }\n\n    public JiraRestClient getRestClient() { /* <=== */ \n        return restClient;\n    }\n}"
                  },
                  {
                    "sample" : "com.atlassian.jira.rest.client.api.JiraRestClient",
                    "lineNumber" : 32,
                    "columnNumber" : 12,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/client/JiraClient.java",
                    "excerpt" : "\n    private URI getJiraUri() {\n        return URI.create(this.jiraUrl);\n    }\n\n    public JiraRestClient getRestClient() { /* <=== */ \n        return restClient;\n    }\n}"
                  },
                  {
                    "sample" : "jiraClient.getRestClient()",
                    "lineNumber" : 145,
                    "columnNumber" : 40,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t@Value(\"${jira.project.key}\")\n\tprivate String projectKey;\n\n\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient(); /* <=== */ \n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();"
                  },
                  {
                    "sample" : "jiraClient.getRestClient().getIssueClient()",
                    "lineNumber" : 145,
                    "columnNumber" : 40,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t@Value(\"${jira.project.key}\")\n\tprivate String projectKey;\n\n\n\tprivate JiraClient jiraClient = new JiraClient(username, password, jiraUrl);\n\tprivate IssueRestClient issueClient = jiraClient.getRestClient().getIssueClient(); /* <=== */ \n\n\tpublic String createIssue(Long issueType, String email) {\n\t\tString issueSummary = \"Payment Failure by\" + email;\n\t\tIssueInput newIssue = new IssueInputBuilder(\n\t\t\t\tprojectKey, issueType, issueSummary).build();"
                  }
                ]
              }
            ]
          },
          {
            "sinkType" : "third_parties",
            "id" : "ThirdParties.SDK.Amazonaws",
            "name" : "Amazonaws",
            "category" : "",
            "domains" : [
              "amazonaws.com"
            ],
            "sensitivity" : "",
            "isSensitive" : false,
            "tags" : {
              
            },
            "apiUrl" : [
            ],
            "databaseDetails" : {
              "dbName" : "",
              "dbVendor" : "",
              "dbLocation" : "",
              "dbOperation" : ""
            },
            "paths" : [
              {
                "pathId" : "4161-4304-4679-4684-1704-1708-1707",
                "path" : [
                  {
                    "sample" : "this",
                    "lineNumber" : 66,
                    "columnNumber" : 26,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t}\n\n\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email;\n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId()); /* <=== */ \n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);"
                  },
                  {
                    "sample" : "this.productService",
                    "lineNumber" : 76,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);\n\t\t\tlogger.debug(\"Buyer Email: \" + buyerEmail);\n\t\t\tproduct.setBuyerEmail(buyerEmail);\n\t\t\tproduct.setBuyerPinCode(buyerPincode);\n\n\t\t\tproductService.saveProduct(product); /* <=== */ \n\n\n\t\t\tBuyer buyer = order.getBuyer();\n\t\t\tString firstName = buyer.getFirstName();\n\t\t\tString lastName = buyer.getLastName();"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 17,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "\n    Logger logger = LoggerFactory.getLogger(ProductService.class);\n    @Autowired\n    private ProductRepository productRepository;\n\n    public Product saveProduct(Product product) { /* <=== */ \n            return productRepository.saveProduct(product);\n    }\n\n    public Product getProductById(String productId) {\n        return productRepository.getProductById(productId);"
                  },
                  {
                    "sample" : "this.productRepository",
                    "lineNumber" : 18,
                    "columnNumber" : 20,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/ProductService.java",
                    "excerpt" : "    Logger logger = LoggerFactory.getLogger(ProductService.class);\n    @Autowired\n    private ProductRepository productRepository;\n\n    public Product saveProduct(Product product) {\n            return productRepository.saveProduct(product); /* <=== */ \n    }\n\n    public Product getProductById(String productId) {\n        return productRepository.getProductById(productId);\n    }"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 19,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "\n\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Product saveProduct(Product product) { /* <=== */ \n        dynamoDBMapper.save(product);\n        return product;\n    }\n\n    public Product getProductById(String productId) {"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 20,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Product saveProduct(Product product) {\n        dynamoDBMapper.save(product); /* <=== */ \n        return product;\n    }\n\n    public Product getProductById(String productId) {\n        return dynamoDBMapper.load(Product.class, productId);"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(product)",
                    "lineNumber" : 20,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/ProductRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Product saveProduct(Product product) {\n        dynamoDBMapper.save(product); /* <=== */ \n        return product;\n    }\n\n    public Product getProductById(String productId) {\n        return dynamoDBMapper.load(Product.class, productId);"
                  }
                ]
              },
              {
                "pathId" : "4161-4338-3819-3824-1176-1180-1179",
                "path" : [
                  {
                    "sample" : "this",
                    "lineNumber" : 66,
                    "columnNumber" : 26,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t}\n\n\t@Override\n\tpublic Order createOrder(Order order) {\n\t\tString buyerEmail = order.getBuyer().email;\n\t\tInteger buyerPincode = this.getOrderPinCode(order.getId()); /* <=== */ \n\t\ttry {\n\t\t\tProduct product = new Product();\n\t\t\tproduct.setOrderId(order.getId());\n\n\t\t\tSystem.out.println(\"Buyer Email: \" + buyerEmail);"
                  },
                  {
                    "sample" : "this.buyerService",
                    "lineNumber" : 87,
                    "columnNumber" : 4,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/OrderService.java",
                    "excerpt" : "\t\t\tString dateOfBirth = buyer.getDateOfBirth();\n\n\t\t\tBuyer newBuyer = new Buyer(firstName, lastName, dateOfBirth);\n\n\n\t\t\tbuyerService.saveProduct(newBuyer); /* <=== */ \n\n\t\t}\n\t\tcatch (Exception e) {\n\n\t\t\tlogger.error(\"Exception while creating order: \" +"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 17,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "\n    Logger logger = LoggerFactory.getLogger(BuyerService.class);\n    @Autowired\n    private BuyerRepository buyerRepository;\n\n    public Buyer saveProduct(Buyer buyer) { /* <=== */ \n            return buyerRepository.saveBuyer(buyer);\n    }\n\n    public Buyer getProductById(String buyerId) {\n        return buyerRepository.getBuyerById(buyerId);"
                  },
                  {
                    "sample" : "this.buyerRepository",
                    "lineNumber" : 18,
                    "columnNumber" : 20,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/services/BuyerService.java",
                    "excerpt" : "    Logger logger = LoggerFactory.getLogger(BuyerService.class);\n    @Autowired\n    private BuyerRepository buyerRepository;\n\n    public Buyer saveProduct(Buyer buyer) {\n            return buyerRepository.saveBuyer(buyer); /* <=== */ \n    }\n\n    public Buyer getProductById(String buyerId) {\n        return buyerRepository.getBuyerById(buyerId);\n    }"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 18,
                    "columnNumber" : -1,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) { /* <=== */ \n        dynamoDBMapper.save(buyer);\n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {"
                  },
                  {
                    "sample" : "this.dynamoDBMapper",
                    "lineNumber" : 19,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) {\n        dynamoDBMapper.save(buyer); /* <=== */ \n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId);"
                  },
                  {
                    "sample" : "dynamoDBMapper.save(buyer)",
                    "lineNumber" : 19,
                    "columnNumber" : 9,
                    "fileName" : "/app/code/src/main/java/com/analytics/analytics/dao/BuyerRepository.java",
                    "excerpt" : "\n    @Autowired\n    private DynamoDBMapper dynamoDBMapper;\n\n    public Buyer saveBuyer(Buyer buyer) {\n        dynamoDBMapper.save(buyer); /* <=== */ \n        return buyer;\n    }\n\n    public Buyer getBuyerById(String buyerId) {\n        return dynamoDBMapper.load(Buyer.class, buyerId);"
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "collections" : [
  ],
  "violations" : [
    {
      "policyId" : "Threats.Leakage.isDataLeakingToLog",
      "policyDetails" : {
        "name" : "PII data is written to the log files",
        "policyType" : "threat",
        "description" : "Sensitive Data written to log files or file system may lead to unauthorized access or exposure to potential attack.",
        "fix" : "It is not recommended to log Sensitive Data to log files or the file system. The data must be encrypted if it is absolutely necessary to log it.",
        "action" : "",
        "tags" : {
          "CWE-359" : "https://cwe.mitre.org/data/definitions/359.html",
          "CWE-532" : "https://cwe.mitre.org/data/definitions/532.html",
          "MSTG-STORAGE-3" : "https://github.com/OWASP/owasp-mstg/blob/master/Document/0x05d-Testing-Data-Storage.md#Testing-Logs-for-Sensitive-Data-MSTG-STORAGE-3",
          "MITRE" : "Sharing.Exposure"
        }
      },
      "dataFlow" : [
        {
          "sourceId" : "Data.Sensitive.ContactData.EmailAddress",
          "sinkId" : "Leakages.Log.Error",
          "pathIds" : [
            "4261-4260-4289-4296-4299-4362-4344"
          ]
        },
        {
          "sourceId" : "Data.Sensitive.ContactData.EmailAddress",
          "sinkId" : "Leakages.Log.Console",
          "pathIds" : [
            "4261-4260-4289-4283"
          ]
        },
        {
          "sourceId" : "Data.Sensitive.ContactData.EmailAddress",
          "sinkId" : "Leakages.Log.Debug",
          "pathIds" : [
            "4261-4260-4289-4296-4290"
          ]
        }
      ],
      "processing" : null
    }
  ]
}